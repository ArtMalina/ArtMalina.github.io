{"version":3,"sources":["app/designer-core/shared/blocks/types.ts","app/wf-designer/content-wrapper/home/index.tsx","app/wf-designer/content-wrapper/home/Home.tsx","app/wf-designer/content-wrapper/about/index.tsx","app/wf-designer/content-wrapper/index.tsx","app/wf-designer/content-wrapper/ContentWrapper.tsx","app/wf-designer/header/index.tsx","app/wf-designer/header/Header.tsx","app/designer-core/shared/blocks/Anchor/AnchorDiv.tsx","app/designer-core/shared/types.ts","app/designer-core/shared/blocks/Anchor/index.ts","app/designer-core/shared/blocks/Box/BoxDiv.tsx","app/designer-core/shared/blocks/Box/index.ts","app/designer-core/shared/blocks/Container/ContainerDiv.tsx","app/designer-core/shared/blocks/Container/index.ts","app/designer-core/shared/blocks/DragFrame/DragFrameDiv.tsx","app/designer-core/shared/blocks/index.ts","app/designer-core/shared/plugins/magnetable/nearestEdges.ts","app/designer-core/shared/blocks/DragFrame/index.ts","app/designer-core/shared/blocks/MagnetCornerFrame/MagnetCornerFrameDiv.tsx","app/designer-core/shared/blocks/MagnetCornerFrame/index.ts","app/designer-core/shared/blocks/MagnetFrame/MagnetFrameDiv.tsx","app/designer-core/shared/blocks/MagnetFrame/index.ts","app/designer-core/shared/blocks/SelectedFrame/SelectedFrameDiv.tsx","app/designer-core/shared/blocks/SelectedFrame/index.ts","app/designer-core/shared/config.ts","app/designer-core/workspace/WorkspaceBlock.tsx","app/designer-core/shared/wrappers/MouseStreamsContainer.tsx","app/designer-core/rxRedux/storeContext.tsx","app/designer-core/shared/helpers/storage.tsx","app/designer-core/shared/wrappers/ConnectedBlock.tsx","app/designer-core/shared/wrappers/draggable/DragFrameWrapper.tsx","app/designer-core/shared/wrappers/draggable/Draggable.tsx","app/designer-core/shared/plugins/magnetable/context.tsx","app/designer-core/shared/plugins/selectable/Selectable.tsx","app/designer-core/shared/stateTypes.ts","app/designer-core/shared/plugins/magnetable/Magnetable.tsx","app/designer-core/shared/plugins/magnetable/index.ts","app/designer-core/shared/plugins/magnetable/MagnetFrameWrapper.tsx","app/designer-core/shared/plugins/resizable/context.tsx","app/designer-core/shared/plugins/resizable/index.ts","app/designer-core/shared/plugins/resizable/Resizable.tsx","app/designer-core/shared/plugins/resizable/ResizeFrameWrapper.tsx","app/designer-core/shared/plugins/selectable/context.tsx","app/designer-core/shared/plugins/selectable/SelectedFrameWrapper.tsx","app/designer-core/shared/plugins/selectable/index.ts","app/designer-core/shared/wrappers/MouseStreams.tsx","app/designer-core/workspace/WorkspaceContainer.tsx","app/designer-core/workspace/Controls/Control/ControlBlock.tsx","app/designer-core/workspace/Controls/Control/services.ts","app/designer-core/workspace/Controls/Control/index.tsx","app/designer-core/workspace/Controls/Controls.tsx","app/designer-core/workspace/Controls/index.tsx","app/designer-core/workspace/Lasso/services.ts","app/designer-core/workspace/Lasso/Lasso.tsx","app/designer-core/workspace/Lasso/index.tsx","app/designer-core/workspace/services.ts","app/designer-core/workspace/Workspace.tsx","app/designer-core/workspace/index.ts","app/designer-core/rxRedux/controls/actions/index.ts","app/designer-core/rxRedux/controls/index.ts","app/designer-core/App.tsx","app/wf-designer/App.tsx","app.ts","app/wf-designer/index.tsx","serviceWorker.ts","index.tsx"],"names":["RendererType","BlockType","Home","props","react_default","a","createElement","className","About","ContentWrapper","WorkspaceComponent","react_router","exact","path","component","Header","title","React","Children","map","children","Child","ActiveLevels","ActiveLevelStatus","MagnetCornerType","EventType","TrappedType","MagnetPairDirection","MouseButtonType","AnchorDiv","handlers","modifiers","classModifiers","Object","assign","concat","length","t","join","style","marginLeft","marginTop","renderBlockTypes","HTML","BoxDiv","classBlocks","classElements","toConsumableArray","block","elements","objectSpread","left","position","top","width","size","height","ContainerDiv","currentRef","useRef","useEffect","current","setRef","ref","renderType","EdgeType","DragFrameDiv","activeLevel","isFrame","None","InGroup","delta","updStyle","borderWidth","padding","MagnetCornerFrameDiv","type","indent","offset","cornerProps","_indent","slicedToArray","TOP_INDENT","RIGHT_INDENT","BOTTOM_INDENT","LEFT_INDENT","topLeftCorner","borderTopStyle","borderLeftStyle","topRightCorner","borderRightStyle","bottomLeftCorner","borderBottomStyle","bottomRightCorner","edgeStyle","borderColor","verticalLine","horizontalLine","helperOffset","TopLeft_LeftBottom","TopLeft_LeftTop","TopLeft_TopLeft","TopLeft_TopRight","TopRight_TopLeft","right","TopRight_TopRight","TopRight_RightTop","TopRight_RightBottom","BottomRight_RightTop","bottom","BottomRight_RightBottom","BottomRight_BottomRight","BottomRight_BottomLeft","BottomLeft_BottomRight","BottomLeft_BottomLeft","BottomLeft_LeftBottom","BottomLeft_LeftTop","Left_Vertical","Right_Vertical","Top_Horizontal","Bottom_Horizontal","getCornerMarker","MagnetFrameDiv","markerPosition","SelectedFrameBlock","propsLevel","isFramed","MoveInGroup","HoverInGroup","MoveByHandInGroup","SelectedFrameDiv","blocks","_blocks","defineProperty","Anchor","renderAnchorTypes","Box","renderBoxTypes","Container","renderContainerTypes","DragFrame","renderDragFrameTypes","MagnetCornerFrame","renderMagnetCornerTypes","MagnetBorderFrame","renderMagnetBorderTypes","SelectedFrame","renderSelectedFrameTypes","EmptyBlock","blockFactory","getBlock","blockType","BoxBlock","ContainerBlock","WorkspaceBlock","xy","WorkspaceBlock_BoxBlock","fontSize","getMouseStreamContainer","MouseStreamContext","plugins","StartBlock","pluginsRef","contextParts","useMemo","reduce","memo","el","mouseStreamContext","dragStart","Subject","drag","dragStop","control","BehaviorSubject","group","deltaMoves","mouseDown","mouseMove","mouseUp","mouseLeave","mouseStop","console","log","effects","_ref","_ref2","_func","func","resultMainEffect","results","forEach","endFunc","mainEffect","startMoving$","pipe","tap","ev","warn","elementId","data","movingSource$","_ref3","switchMap","combineLatest","takeUntil","_ref5","getValue","next","StopDrag","movingSubscription","subscribe","_ref6","_ref7","_ref7$","start","move","_ref8","clientX","clientY","startX","startY","startDragSubscription","_ref9","_ref10","StartDrag","stopDragSubsciption","_","currControl","complete","unsubscribe","onMouseDown","onMouseMove","nativeEvent","Move","onMouseUp","Cancel","onMouseLeave","Provider","value","_INIT_ACTION_","Store","state","_reducers","classCallCheck","this","change","payload","_actionSub","val","action","StoreContext","createContext","Storage","_services","_selectors","createClass","key","filter","_ref4","service","ident","selector","find","msg","useSubscribedState","source$","_useState","useState","_useState2","setState","subscription","useStorage","guid","services","selectors","store","useContext","WrappedBlock","Block","size$","position$","xy$","activeLevel$","otherProps","objectWithoutProperties","setXY","_useState3","_useState4","setPosition","_useState5","_useState6","setSize","_useState7","_useState8","setActiveLevel","xySub","x","y","requestAnimationFrame","positionSub","sizeSub","sx","sy","activeLevelSub","level","ConnectedBlock","_useState9","_useState10","DisplayedBlock","DragFrameWrapper","Component","baseProps","mouseContext","isAnchorActive","setAnchorActivation","_useSubscribedState","newSize","activeLevelRef","emptyPosition$","propsMouseDown","emptyPosSub","i","anchorHandler","hover$","updHandlers","onMouseEnter","stopPropagation","sub","includes","Hover","hoverableArr","dragClassModifiers","innerClassModifiers","isDraggableComponent","getDragWrapComponent","getHandlers","MovingComponent","storage","startPositionRef","moveSubscription","deltaPosition","_deltaPosition","_startPositionRef$cur","newX","newY","send","stopSubscription","_position$$getValue","_position$$getValue2","startSubscription","DragInGroup","MoveByHand","_position$$getValue3","_position$$getValue4","contextPart","magneted","magneting","magnetingStart","getDeps","contextPlugin","subscribtion","magnetedItems","fixGuid","items","magnetingGuid","direction","In","asInPairs","inPairs","outPairs","Out","UIPrimitive","MAP_EDGE_TYPE_TO_MAGNET","_MAP_EDGE_TYPE_TO_MAG","LeftVertical","RightVertical","TopHorizontal","BottomHorizontal","MAP_MAGNET_TYPE_TO_EDGE","_MAP_MAGNET_TYPE_TO_E","calcIntersection","p1","p2","np1","np2","dp1","Math","abs","dp2","dp3","dp4","min","getClosestEdgeDistanceReducer","CAPTURE_DELTA","currentPoints","_memo","_currentPoints","c1","c2","c3","resultDelta","closestEdge","dLeftVertical","dRightVertical","dTopHorizontal","dBottomHorizontal","maxDelta","getClosestEdge","DETAIL_MAGNET_TYPES","TopLeft","TopRight","BottomRight","BottomLeft","getDetailMagnetType","magnetType","detail","_magnetType","_direction","COMPOSE_CORNER_TYPES","_COMPOSE_CORNER_TYPES","_MagnetCornerType$Top","LeftTop","_MagnetCornerType$Top2","RightTop","_MagnetCornerType$Bot","LeftBottom","_MagnetCornerType$Bot2","RightBottom","getClosestItem","currentGuid","_ref31","item","_getClosestPointDista","_item$position","_item$size","_corners$reduce","_ref27","_ref28","px","py","cornerType","_currentPoints$reduce","currMemo","crn","j","_ref29","_ref30","cpx","cpy","dx","dy","ndist","currentCornerType","_currentPoints$reduce2","distance","closestCorner","currentCorner","_corners$reduce2","_distance","_currentCorner","_closestCorner","_cornerSubType","round","sqrt","getClosestPointDistance","_getClosestPointDista2","resMagnetType","Magnetable","MagnetWrapper","_ref32","Indents","MagnetBlock","markerRef","sizeMarker$","markerPosition$","nearestFrame$","magnetOutDrag","_ref33","_ref34","nearestFrame","magnetOutResize","resizeStop","_ref35","_ref36","magnetInSubscription","sxy","frame","fix","dragForNearests","useCallback","nearestYes","nearestNo","_xy$$getValue","_xy$$getValue2","currx","curry","_size$$getValue","_size$$getValue2","currSx","currSy","startGuidSizePosition","_items","get","_ref37","nearest","_getClosestItem","_getClosestItem2","resultMagnetType","push","apply","_ref13","_ref14","closestCornerType","_currentCorner$1$size","csx","csy","_closestCorner$","_closestCorner$$posit","_closestCorner$$size","_currentCorner$1$posi","cx","cy","result","leftRight","indexOf","topBottom","leftRightPoint","topBottomPoint","tempY","closeToLeftRight","resX","resY","magnetDirection","_ref15","_ref16","_ref17","_ref18","_ref19","_ref20","_ref21","_ref22","MagnetAllCorners","nearestEdgesByResizing","_xy$$getValue3","_xy$$getValue4","_size$$getValue3","_size$$getValue4","_ref38","closestEdges","magnetingEdges","_guid","_mouseContext","nearestVerticalHorizontal","_ref9$","vertResult","horResult","minDistances","edgeType","closestItem","minDistanceToAnotherEdge","isClosestExist","minVertical","minHorizontal","newNearest","nearestCalculation","_ref23","_ref24","otherItems","reducerFn","index","res","_ref25","_ref26","edgeTpye","minDistToAnotherEdge","getClosestEdges","_current$position","_current$size","_closestEdge","edgeDistance","itemGuidSizePos","resultSx","resultSy","_itemGuidSizePos$posi","itemX","itemY","_itemGuidSizePos$size","itemSx","itemSy","_ref11","_ref12","MagnetAllEdges","magnetSubscription","isOut","isCurrentOut","dragStopSubscription","_ref39","_markerRef$current","_markerRef$current$","markerX","markerY","dragStartSubscription","_ref40","dragSubscription","_ref41","findIndex","tGuid","_xy$$getValue5","_xy$$getValue6","_size$$getValue5","_size$$getValue6","_ref42","_ref43","nearestGuid","magnetPosition","resizeStartSubscription","resizeStart","_ref44","resizeStopSubscription","_ref45","_sizeMarker$$getValue","_sizeMarker$$getValue2","nearestVertical","nearestHorizontal","currSize","resItems","_getResultSize","_ref6$","_getResultSize2","calcSx","calcSy","resSx","resSy","resizeSubscription","resize","_ref46","_ref48","_xy$$getValue7","_xy$$getValue8","_size$$getValue7","_size$$getValue8","_sizeMarker$$getValue3","_sizeMarker$$getValue4","prevVertical","prevHorizontal","_nearest","resultVert","resultHor","newVertHoriz","isNewVert","_ref50","_ref51","itemGuid","isNewHor","_ref52","_ref53","_ref54","_ref55","_type","_ref56","_ref57","_mg","_mtype","_ref58","_ref59","_sizeMarker$$getValue5","_sizeMarker$$getValue6","vert","horiz","uniueOutingGuids","_g","markerValue","setMarkerValue","_useSubscribedState3","markerSub","edges","isCorner","isEdge","Fragment","MagnetFrame","StopResize","Resizable","ResizeWrapper","ResizingComponent","fixStartSizeRef","_position","ndx","ndy","odx","ody","nextSx","nextSy","Resize","componentHandlers","activeLevelArr","lasso","trapping","scan","acc","toAcc","trappedType","values","getSelectableWrapComponent","SelectedFrameWrapper","SelectedFrameComponent","startXYRef","inLasso","setInLasso","inLassoRef","groupDragRef","lassoStartSub","dragGroupStopSub","groupsSubscription","startElementId","_startXYRef$current","tId","lassoSubscription","end","positionStart","trapped","currentSize","positionEnd","_classModifiers","FrameBox","Selectable","MouseStreamContainer","getMouseStreamsContainer","resizerContextPlugin","magnetContextPlugin","lassoContextPlugin","Draggable","WrapComponentInDraggable","button","Left","_elementId","ctrlKey","StartSelecting","MagnetableWithMouseContext","ResizableWithMouseContext","SelectableWithMouseContext","SelectingLasso","BlockWrapper","offsetPosition$","fixStartPositionRef","trappedRef","newSize$","emptyXY$","lassoMoveSub","_offsetPosition$$getV","_offsetPosition$$getV2","rx","ry","_fixStartPositionRef$","_startX","_startY","StartWorkspaceBlock","Result","react","ControlBlock","ControlBlock_ContainerBlock","name","storageServices","controls$","storageSelectors","ResultControl","Control_BoxBlock","Control_ControlBlock","ControlComponent","controls","setControls","controlsSub","MemoisedControl","ResultControls","emptyServicesRef","innerControls$","oX","oY","uiType","Controls","root$","ResultLasso","rootSub","Lasso","root","WorkspaceContainerBlock","DraggableWorkspaceBox","Workspace_WorkspaceBlock","workspace_Controls","workspace_Lasso","STORAGE_SERVICES","Workspace","STORAGE_SELECTORS","cntRef","setCntRef","absOffset","setAbsOffset","absOffsetRef","rect","getBoundingClientRect","rootData","WorkspaceContainer","UIStyles","RectangleBlock","backgroundColor","CONTROLS","Array","fill","classType","random","ROOT_CONTROL","Root","initialState","ResultWorkspace","_useStore","_useStore2","StoreContextProvider","workspace","ContentWithDesigner","Designer","App","header","react_router_dom","activeClassName","activeStyle","color","to","appRunner","ReactDOM","render","basename","app_wf_designer_App","document","getElementById","Boolean","window","location","hostname","match","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4a1fe42d.chunk.js","sourcesContent":["export enum RendererType {\r\n    HTML = '<HTML>',\r\n    SVG = '<SVG>',\r\n    CANVAS_2D = 'CANVAS_2D',\r\n    WEBGL = 'WEBGL'\r\n}\r\n\r\nexport enum BlockType {\r\n    Anchor = 'Anchor',\r\n    Box = 'Box',\r\n    Container = 'Container',\r\n    DragFrame = 'DragFrame',\r\n    MagnetCornerFrame = 'MagnetCornerFrame',\r\n    MagnetBorderFrame = 'MagnetBorderFrame',\r\n    SelectedFrame = 'SelectedFrame'\r\n}\r\n\r\nexport interface ContainerProps {\r\n    setRef?: (ref: HTMLDivElement | null) => void,\r\n    style?: React.CSSProperties;\r\n    handlers?: React.DOMAttributes<HTMLDivElement>;\r\n    classModifiers?: string[];\r\n}\r\n","import Home from './Home';\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n\r\nconst Home: React.FC<any> = (props: any) => {\r\n    return (\r\n        <div className=\"container\">\r\n            Home!\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n\r\nconst About: React.FC<any> = (props: any) => {\r\n    return (\r\n        <div className=\"container\">\r\n            About!\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default About;\r\n","import ContentWrapper from './ContentWrapper';\r\n\r\nexport default ContentWrapper;\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Home from './home';\r\nimport About from './about';\r\n\r\nconst ContentWrapper = (WorkspaceComponent: React.ComponentType): React.FC =>\r\n    () => {\r\n        return (\r\n            <div className=\"container content-box\">\r\n                <Switch>\r\n                    <Route exact path=\"/\" component={ Home } />\r\n                    <Route exact path=\"/about\" component={ About } />\r\n                    <Route exact path=\"/workspace\" component={ WorkspaceComponent } />\r\n                </Switch>\r\n            </div>\r\n        );\r\n    };\r\n\r\nexport default ContentWrapper;\r\n","import Header, { HeaderProps as Props } from './Header';\r\n\r\nexport type HeaderProps = Props;\r\nexport default Header;\r\n","import React from 'react';\r\nimport './Header.scss';\r\n\r\nexport type HeaderProps = {\r\n    title: string;\r\n};\r\n\r\nconst Header: React.FC<HeaderProps> = (props) => {\r\n    return (\r\n        <nav>\r\n            <div className=\"flex-item\">\r\n                <h1>{ props.title }</h1>\r\n            </div>\r\n            <div className=\"links-container\">\r\n                { React.Children.map(props.children, (Child) => <div className=\"link-item\">{ Child }</div>) }\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react'\r\nimport { BoxProps, DragFrameProps } from '@designer-core/shared/types';\r\n\r\nconst AnchorDiv = <TProps extends BoxProps>(props: React.PropsWithChildren<DragFrameProps & TProps>) => {\r\n    let [marginLeft, marginTop] = [0, 0];\r\n    const handlers = props.handlers || {};\r\n    const modifiers = props.classModifiers || [];\r\n    return (\r\n        <div\r\n            { ...handlers }\r\n            className={ `block_anchor${modifiers.length ? ' ' + modifiers.map(t => `block_anchor--${t}`).join(' ') : ''}` }\r\n            style={ { marginLeft, marginTop } }>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AnchorDiv;\r\n","import { Subject, BehaviorSubject } from 'rxjs';\r\nimport { CSSProperties } from 'react';\r\n\r\nexport const SELECTING_FRAME_GUID = 'selecting-frame';\r\nexport const ROOT_GUID = 'root';\r\n\r\n\r\nexport type Nullable<T> = T | null;\r\n\r\nexport type ContextPlugin<TMouseContext, TPartContext> = [TPartContext, (mouseContext: TMouseContext) => [React.EffectCallback, React.DependencyList]];\r\n\r\n\r\nexport enum ActiveLevels {\r\n    None = '<none>',\r\n    Hover = '<hover>',\r\n    InGroup = '<in-group>',\r\n    HoverInGroup = '<hover-in-group>',\r\n    JustMove = '<just-move(?)>',\r\n    MoveByHand = '<move-by-hand>',\r\n    MoveByHandInGroup = '<move-by-hand-in-group>',\r\n    MoveInGroup = '<move-in-group>',\r\n    // Resize = '<resize>',\r\n    // ResizeInGroup = '<resize-in-group>'\r\n}\r\n\r\nexport enum ActiveLevelStatus {\r\n    None = 0,\r\n    /**\r\n     *  component is moving\r\n     */\r\n    JustMove = 1,\r\n    /**\r\n     * component is selecting (by hover, for example. NOT IN LASSO)\r\n     */\r\n    JustActive = 2,\r\n    /**\r\n     * component is in group\r\n     */\r\n    InGroup = 3,\r\n    /**\r\n     *  grouped component is moving by hand\r\n     */\r\n    MoveAndSelect = 4,\r\n    /**\r\n     * component is moving as part of moving group\r\n     */\r\n    MoveInGroup = 5,\r\n    /**\r\n     * component is resizing\r\n     */\r\n    Resize = 6\r\n}\r\n\r\nexport type Position = [number, number];\r\n\r\n\r\ninterface BaseProps {\r\n    guid: any;\r\n\r\n    style?: CSSProperties;\r\n    classModifiers?: string[];\r\n    classElements?: string[];\r\n    classBlocks?: string[];\r\n    handlers?: React.DOMAttributes<HTMLElement>;\r\n}\r\n\r\nexport interface BaseBoxProps extends BaseProps {\r\n    position: Position;\r\n    size: Position;\r\n    xy: Position;\r\n    activeLevel: ActiveLevels;\r\n};\r\n\r\nexport interface BoxProps extends BaseProps {\r\n    /**\r\n     * real changing coords\r\n     */\r\n    xy$: BehaviorSubject<Position>;\r\n    /**\r\n     * calculated position stream (may set to empty-stream by wrapping)\r\n     */\r\n    offsetPosition$: BehaviorSubject<Position>;\r\n\r\n    position$: BehaviorSubject<Position>;\r\n    size$: BehaviorSubject<Position>;\r\n\r\n    activeLevel$: BehaviorSubject<ActiveLevels>;\r\n}\r\n\r\nexport interface DragFrameProps {\r\n    activeLevel$: BehaviorSubject<ActiveLevels>;\r\n}\r\n\r\nexport interface DragFrameBlockProps {\r\n    activeLevel: ActiveLevels;\r\n}\r\n\r\nexport type ComponentWrapper<TCompProps, TResultProps> = (Component: React.ComponentType<TCompProps>) => React.ComponentType<TResultProps>;\r\n\r\nexport type ComponentContextWrapper<TCompProps, TResultProps, TContext> = (\r\n    Component: React.ComponentType<TCompProps>,\r\n    Context: React.Context<TContext>\r\n) => React.ComponentType<TResultProps>;\r\n\r\n\r\nexport type MagnetMarkerPosition = [Position, number];\r\n\r\nexport interface MagnetFrameProps {\r\n    markerPosition$: BehaviorSubject<Nullable<MagnetMarkerPosition>>;\r\n    // size: Position;\r\n}\r\n\r\nexport interface MagnetFrameBlockProps {\r\n    markerPosition: Nullable<MagnetMarkerPosition>;\r\n    size: Position;\r\n}\r\n\r\nexport enum MagnetCornerType {\r\n    TopLeft = '<TopLeft>',\r\n    TopLeft_TopLeft = '<TopLeft-TopLeft>',\r\n    TopLeft_TopRight = '<TopLeft-TopRight>',\r\n    TopLeft_LeftTop = '<TopLeft-LeftTop>',\r\n    TopLeft_LeftBottom = '<TopLeft-LeftBottom>',\r\n\r\n    TopRight = '<TopRight>',\r\n    TopRight_TopLeft = '<TopRight-TopLeft>',\r\n    TopRight_TopRight = '<TopRight-TopRight>',\r\n    TopRight_RightTop = '<TopRight-RightTop>',\r\n    TopRight_RightBottom = '<TopRight-RightBottom>',\r\n\r\n    BottomRight = '<BottomRight>',\r\n    BottomRight_RightTop = '<BottomRight-RightTop>',\r\n    BottomRight_RightBottom = '<BottomRight-RightBottom>',\r\n    BottomRight_BottomRight = '<BottomRight-BottomRight>',\r\n    BottomRight_BottomLeft = '<BottomRight-BottomLeft>',\r\n\r\n    BottomLeft = '<BottomLeft>',\r\n    BottomLeft_BottomRight = '<BottomLeft-BottomRight>',\r\n    BottomLeft_BottomLeft = '<BottomLeft-BottomLeft>',\r\n    BottomLeft_LeftBottom = '<BottomLeft-LeftBottom>',\r\n    BottomLeft_LeftTop = '<BottomLeft-LeftTop>',\r\n\r\n    Left_Vertical = '<left-vertical>',\r\n    Right_Vertical = '<right-vertical>',\r\n\r\n    Top_Horizontal = '<top-horizontal>',\r\n    Bottom_Horizontal = '<bottom-horizontal>',\r\n\r\n\r\n    RightTop = '<RightTop>',\r\n    RightBottom = '<RightBottom>',\r\n    LeftTop = '<LeftTop>',\r\n    LeftBottom = '<LeftBottom>',\r\n    None = '<None>',\r\n    // TopRight = 0,\r\n    // TopLeft = 1,\r\n    // BottomRight = 2,\r\n    // BottomLeft = 3,\r\n    // RightTop = 4,\r\n    // RightBottom = 5,\r\n    // LeftTop = 6,\r\n    // LeftBottom = 7,\r\n}\r\n\r\nexport type LinePosition = [Position, Position];\r\n\r\nexport type NearestFrame = { frame: LinePosition, fix: GuidType, magneted: GuidType, magnetType: MagnetCornerType };\r\n\r\nexport interface MagnetCornerProps {\r\n    nearestFrame$: BehaviorSubject<Nullable<NearestFrame>>;\r\n}\r\n\r\nexport interface MagnetCornerFrameBlockProps {\r\n    offset?: number;\r\n    type: MagnetCornerType | null;\r\n    indent: [number, number, number, number];\r\n}\r\n\r\n\r\nexport enum EventType {\r\n    StartDrag = 'StartDrag',\r\n    DragInGroup = 'DragInGroup',\r\n    Move = 'Move',\r\n    Resize = 'Resize',\r\n    StopResize = 'StopResize',\r\n    StopDrag = 'StopDrag',\r\n    Cancel = 'Cancel',\r\n    StartSelecting = 'StartSelecting',\r\n    StopSelecting = 'StopSelecting'\r\n}\r\n\r\nexport type GuidType = Nullable<string>;\r\n\r\nexport interface IStreamData {\r\n    type: EventType;\r\n    ev: MouseEvent;\r\n    elementId: GuidType;\r\n}\r\n\r\nexport interface IStreamControlData {\r\n    elementId: GuidType;\r\n}\r\n\r\nexport interface IObservablesMouse {\r\n    mouseDown: Subject<IStreamData>;\r\n    mouseMove: Subject<IStreamData>;\r\n    mouseUp: Subject<IStreamData>;\r\n    mouseLeave: Subject<IStreamData>;\r\n    mouseStop: Subject<IStreamData>;\r\n};\r\n\r\n\r\nexport interface IObservableDeltaMoves {\r\n    deltaMoves: Subject<[GuidType, Position]>;\r\n}\r\n\r\nexport interface IObservableControl {\r\n    control: BehaviorSubject<GuidType>;\r\n    group: BehaviorSubject<GuidType[]>;\r\n}\r\n\r\nexport interface IObservablesDrag {\r\n    dragStart: Subject<IStreamData>;\r\n    dragStop: Subject<IStreamData>;\r\n    drag: Subject<IStreamData>;\r\n}\r\n\r\nexport interface ILassoStreamData {\r\n    start: Position;\r\n    end: Position;\r\n    trapped: GuidType[];\r\n}\r\n\r\nexport enum TrappedType {\r\n    In = 1,\r\n    Out = -1\r\n}\r\n\r\nexport interface ITrappedItem {\r\n    guid: GuidType;\r\n    trappedType: TrappedType;\r\n}\r\n\r\nexport interface IObservableLasso {\r\n    // for capturing corners of the lasso frame\r\n    lasso: Subject<ILassoStreamData>;\r\n    trapping: Subject<ITrappedItem[]>;\r\n    trapped: BehaviorSubject<GuidType[]>;\r\n}\r\n\r\n\r\n\r\nexport enum MagnetPairDirection {\r\n    In = 1,\r\n    Out = -1\r\n}\r\n\r\nexport interface IMagnetPairIn {\r\n    items: [GuidType, GuidType];\r\n    type: MagnetCornerType;\r\n    direction: MagnetPairDirection.In;\r\n}\r\n\r\nexport interface IMagnetPairOut {\r\n    items: [GuidType];\r\n    direction: MagnetPairDirection.Out;\r\n}\r\n\r\nexport type IMagnetPair = IMagnetPairIn | IMagnetPairOut;\r\n\r\nexport interface IMagnetStreamData {\r\n    magneted: [GuidType, GuidType];\r\n    type: MagnetCornerType;\r\n}\r\n\r\nexport type IMouseStreamContext =\r\n    IObservablesMouse\r\n    & IObservableDeltaMoves\r\n    & IObservableControl\r\n    & IObservablesDrag;\r\n// & IObservableLasso;\r\n\r\nexport enum MouseButtonType {\r\n    Left = 0,\r\n    Middle = 1,\r\n    Right = 2\r\n}\r\n\r\nexport type PropertyType<TObject extends {}, TProp extends keyof TObject> = TObject[TProp];\r\n","import AnchorDiv from './AnchorDiv';\r\nimport { RendererType } from '../types';\r\n\r\nexport const renderBlockTypes: Array<[RendererType.HTML | RendererType.SVG, React.ComponentType<any>]> = [\r\n    [RendererType.HTML, AnchorDiv]\r\n];\r\n\r\nexport default AnchorDiv;\r\n","import React from 'react'\r\nimport './BoxDiv.scss';\r\nimport { BaseBoxProps } from '@designer-core/shared/types';\r\n\r\nconst BoxDiv = (props: React.PropsWithChildren<BaseBoxProps>) => {\r\n    const classModifiers = props.classModifiers || [];\r\n    const classBlocks = props.classBlocks || [];\r\n    const classElements = props.classElements || [];\r\n    const handlers = props.handlers || {};\r\n    const modifiers = [...classModifiers].map(t => `block--${t}`).join(' ');\r\n    const block = classBlocks[0] || '';\r\n    const elements = [...classElements].map(t => block && `${block}_${t}`).join(' ');\r\n    const style = props.style || {};\r\n\r\n    return <div\r\n        { ...handlers }\r\n        className={ `box-item box-item--div${block ? ' ' + block : ''}${modifiers ? ' ' + modifiers : ''}${elements ? ' ' + elements : ''}` }\r\n        style={ { left: props.position[0], top: props.position[1], width: props.size[0], height: props.size[1], ...style } }\r\n    >\r\n        { props.children }\r\n    </div>;\r\n}\r\n\r\nexport default BoxDiv;\r\n","import BoxDiv from './BoxDiv';\r\nimport { RendererType } from '../types';\r\n\r\nexport const renderBlockTypes: Array<[RendererType.HTML | RendererType.SVG, React.ComponentType<any>]> = [\r\n    [RendererType.HTML, BoxDiv]\r\n];\r\n\r\nexport default BoxDiv;\r\n","import React, { useRef, useEffect } from 'react';\r\nimport './Block.scss';\r\nimport { ContainerProps } from '../types';\r\n\r\nconst ContainerDiv = (props: React.PropsWithChildren<ContainerProps>) => {\r\n    const classModifiers = props.classModifiers || [];\r\n    const handlers = props.handlers || {};\r\n    const style = props.style || {};\r\n    const modifiers = classModifiers.map(t => `block--${t}`).join(' ');\r\n    const currentRef = useRef(null);\r\n    useEffect(() => {\r\n        if (currentRef.current && props.setRef) {\r\n            props.setRef(currentRef.current);\r\n        }\r\n    }, [currentRef, props]);\r\n\r\n    return <div\r\n        { ...handlers }\r\n        ref={ currentRef }\r\n        className={ `container block ${modifiers}` }\r\n        style={ { ...style } }\r\n    >\r\n        { props.children }\r\n    </div>;\r\n};\r\n\r\nexport default ContainerDiv;\r\n","import ContainerDiv from './ContainerDiv';\r\nimport { RendererType, ContainerProps } from '../types';\r\n\r\nexport const renderBlockTypes: Array<[RendererType.HTML | RendererType.SVG, React.ComponentType<ContainerProps>]> = [\r\n    [RendererType.HTML, ContainerDiv]\r\n];\r\n\r\nexport default ContainerDiv;\r\n","import React from 'react'\r\nimport { DragFrameBlockProps, ActiveLevels, BaseBoxProps } from '@designer-core/shared/types';\r\n\r\nconst DragFrameDiv = <TProps extends BaseBoxProps>(props: React.PropsWithChildren<DragFrameBlockProps & TProps>) => {\r\n\r\n    const { size, activeLevel } = props;\r\n\r\n    const isFrame = activeLevel !== ActiveLevels.None && activeLevel !== ActiveLevels.InGroup;\r\n\r\n    const delta = isFrame ? 20 : 0;\r\n\r\n    const [width, height] = [size[0] + delta, size[1] + delta];\r\n    const [marginLeft, marginTop] = [-delta / 2, -delta / 2];\r\n\r\n    const borderWidth = 4;\r\n\r\n    const updStyle: React.CSSProperties = {\r\n        width,\r\n        height,\r\n        marginLeft,\r\n        marginTop,\r\n        borderWidth,\r\n        padding: isFrame ? delta / 2 - borderWidth : 0,\r\n    };\r\n\r\n    return <div className={ `block_frame block_frame--${isFrame ? 'drag' : 'no-drag'}` } style={ updStyle }>\r\n        { props.children }\r\n    </div>\r\n}\r\n\r\nexport default DragFrameDiv;\r\n","import { RendererType, BlockType, ContainerProps } from './types';\r\n\r\nimport { renderBlockTypes as renderAnchorTypes } from './Anchor';\r\nimport { renderBlockTypes as renderBoxTypes } from './Box';\r\nimport { renderBlockTypes as renderContainerTypes } from './Container';\r\nimport { renderBlockTypes as renderDragFrameTypes } from './DragFrame';\r\nimport { renderBlockTypes as renderMagnetCornerTypes } from './MagnetCornerFrame';\r\nimport { renderBlockTypes as renderMagnetBorderTypes } from './MagnetFrame';\r\nimport { renderBlockTypes as renderSelectedFrameTypes } from './SelectedFrame';\r\n\r\n\r\ntype RenderTypeBlock<T> = [RendererType, React.ComponentType<T>];\r\n\r\n\r\ntype BlockByType<T> = { [key: string]: RenderTypeBlock<T>[] };\r\n\r\nconst blocks: BlockByType<any> = {\r\n    [BlockType.Anchor]: renderAnchorTypes,\r\n    [BlockType.Box]: renderBoxTypes,\r\n    [BlockType.Container]: renderContainerTypes,\r\n    [BlockType.DragFrame]: renderDragFrameTypes,\r\n    [BlockType.MagnetCornerFrame]: renderMagnetCornerTypes,\r\n    [BlockType.MagnetBorderFrame]: renderMagnetBorderTypes,\r\n    [BlockType.SelectedFrame]: renderSelectedFrameTypes,\r\n};\r\n\r\nconst EmptyBlock: React.ComponentType = () => null;\r\n\r\nexport interface IBlockFactory {\r\n    getBlock<TProps>(blockType: BlockType): React.ComponentType<TProps>;\r\n    getBlock(blockType: BlockType): React.ComponentType<ContainerProps>;\r\n}\r\n\r\nexport const factory = (renderType: RendererType): IBlockFactory => {\r\n    return {\r\n        getBlock: <T>(blockType: BlockType): React.ComponentType<T> => {\r\n            const typedBlocks: RenderTypeBlock<T>[] = blocks[blockType] || [renderType, EmptyBlock] as RenderTypeBlock<T>;\r\n            const typedBlock = typedBlocks[0][1];\r\n            return typedBlock;\r\n            // const blockRenders = blocks\r\n            //     .filter(([_blockType]) => _blockType === blockType)\r\n            //     .map<RenderTypeBlock<T>>(\r\n            //         ([_blockType, renderTypes]) =>\r\n            //             renderTypes.find(([_renderType]) => _renderType === renderType) || [renderType, EmptyBlock] as RenderTypeBlock<T>\r\n            //     );\r\n            // return blockRenders[0] ? blockRenders[0][1] : EmptyBlock;\r\n        }\r\n    };\r\n}; \r\n","import { Position, GuidType, MagnetCornerType } from '@designer-core/shared/types';\r\nimport { IContextMagnet } from './context';\r\nimport { GuidSizePosition, NearestResult } from './types';\r\n\r\ntype Quadro<T> = [T, T, T, T];\r\n\r\nexport enum EdgeType {\r\n    LeftVertical = 'left-vertical',\r\n    RightVertical = 'right-vertical',\r\n    TopHorizontal = 'top-horizontal',\r\n    BottomHorizontal = 'bottom-horizontal',\r\n    None = 'none'\r\n}\r\n\r\n\r\nexport type ClosestEdge = [number, EdgeType, GuidSizePosition | null, number];\r\n\r\n\r\n\r\nexport const MAP_EDGE_TYPE_TO_MAGNET: { [key: string]: MagnetCornerType } = {\r\n    [EdgeType.LeftVertical]: MagnetCornerType.Left_Vertical,\r\n    [EdgeType.RightVertical]: MagnetCornerType.Right_Vertical,\r\n    [EdgeType.TopHorizontal]: MagnetCornerType.Top_Horizontal,\r\n    [EdgeType.BottomHorizontal]: MagnetCornerType.Bottom_Horizontal,\r\n}\r\n\r\n\r\nexport const MAP_MAGNET_TYPE_TO_EDGE: { [key: string]: EdgeType } = {\r\n    [MagnetCornerType.Left_Vertical]: EdgeType.LeftVertical,\r\n    [MagnetCornerType.Right_Vertical]: EdgeType.RightVertical,\r\n    [MagnetCornerType.Top_Horizontal]: EdgeType.TopHorizontal,\r\n    [MagnetCornerType.Bottom_Horizontal]: EdgeType.BottomHorizontal,\r\n}\r\n\r\nconst calcIntersection = (p1: number, p2: number, np1: number, np2: number) => {\r\n    const dp1 = Math.abs(p1 - np1);\r\n    const dp2 = Math.abs(p2 - np2);\r\n    const dp3 = Math.abs(p1 - np2);\r\n    const dp4 = Math.abs(p2 - np1);\r\n    const maxDelta = (\r\n        (p1 < np1 && p2 > np2)\r\n        || (p1 > np1 && p1 < np2 && p2 < np2 && p2 > np1)\r\n        || (p1 < np1 && p2 > np1 && p2 < np2)\r\n        || (p1 > np1 && p1 < np2 && p2 > np2)\r\n    ) ? 0 : Math.min(dp1, dp2, dp3, dp4);\r\n    return maxDelta;\r\n};\r\n\r\n/**\r\n * Method for gettings closest edge between two blocks\r\n * @param CAPTURE_DELTA distance for capturing\r\n * @param currentPoints current block corner points\r\n * @param position position of another block \r\n * @param size size of another block\r\n * @returns [distance, EdgeType, min distance to another edges] tuple array\r\n */\r\nconst getClosestEdge = (CAPTURE_DELTA: number, currentPoints: Quadro<Position>, [x, y]: Position, [sx, sy]: Position, el: any): [number, EdgeType, number][] => {\r\n\r\n    const [c1, c2, c3] = currentPoints; // top-left     top-right   bottom-right    bottom-left (ignored)\r\n\r\n    // select only one edge for magneting!\r\n    let resultDelta = -1;\r\n    let closestEdge: [number, EdgeType, number][] = [];\r\n\r\n    const dLeftVertical = Math.abs(c2[0] - x);\r\n    const dRightVertical = Math.abs(c2[0] - x - sx);\r\n\r\n    const dTopHorizontal = Math.abs(c3[1] - y);\r\n    const dBottomHorizontal = Math.abs(c3[1] - y - sy);\r\n\r\n    let maxDelta = -1;\r\n\r\n\r\n    if (dLeftVertical > -1 && CAPTURE_DELTA > dLeftVertical) {\r\n\r\n        maxDelta = calcIntersection(c2[1], c3[1], y, y + sy);\r\n\r\n        if (maxDelta > -1 && maxDelta < CAPTURE_DELTA) {\r\n            resultDelta = dLeftVertical;\r\n            closestEdge = [[dLeftVertical, EdgeType.LeftVertical, maxDelta]];\r\n            // closestEdge.push([dLeftVertical, EdgeType.LeftVertical, maxDelta]);\r\n        }\r\n    }\r\n\r\n    if (dRightVertical > -1 && CAPTURE_DELTA > dRightVertical && (dRightVertical < resultDelta || resultDelta < 0)) {\r\n\r\n        maxDelta = calcIntersection(c2[1], c3[1], y, y + sy);\r\n\r\n        if (maxDelta > -1 && maxDelta < CAPTURE_DELTA) {\r\n            resultDelta = dRightVertical;\r\n            closestEdge = [[dRightVertical, EdgeType.RightVertical, maxDelta]];\r\n        }\r\n    }\r\n    if (dTopHorizontal > -1 && CAPTURE_DELTA > dTopHorizontal && (dTopHorizontal < resultDelta || resultDelta < 0)) {\r\n\r\n        maxDelta = calcIntersection(c1[0], c2[0], x, x + sx);\r\n\r\n        if (maxDelta > -1 && maxDelta < CAPTURE_DELTA) {\r\n            resultDelta = dTopHorizontal;\r\n            closestEdge = [[dTopHorizontal, EdgeType.TopHorizontal, maxDelta]];\r\n        }\r\n    }\r\n    if (dBottomHorizontal > -1 && CAPTURE_DELTA > dBottomHorizontal && (dBottomHorizontal < resultDelta || resultDelta < 0)) {\r\n\r\n        maxDelta = calcIntersection(c1[0], c2[0], x, x + sx);\r\n\r\n        if (maxDelta > -1 && maxDelta < CAPTURE_DELTA) {\r\n            resultDelta = dBottomHorizontal;\r\n            closestEdge = [[dBottomHorizontal, EdgeType.BottomHorizontal, maxDelta]];\r\n        }\r\n    }\r\n\r\n    return [...closestEdge];\r\n};\r\n\r\n\r\nexport type ItemData = { position: Position, size: Position };\r\n\r\n/**\r\n * reducing iterating function (returns item with closest edge and distance)\r\n * @param CAPTURE_DELTA distance for capturing\r\n * @param currentPoints current block corner points\r\n * @returns iterating function for reducer over items (memo as [distance, edgeType, renewing_memo_status])\r\n */\r\nexport const getClosestEdgeDistanceReducer = <T extends ItemData>(CAPTURE_DELTA: number, currentPoints: Quadro<Position>) => {\r\n    return (_memo: any, el: T, i?: number): [number, EdgeType, number][] => {\r\n        const data = getClosestEdge(CAPTURE_DELTA, currentPoints, el.position, el.size, el);\r\n        return [...data];\r\n    };\r\n};\r\n\r\nexport const getResultSize = (items: Array<[EdgeType, Position]>): Position => {\r\n    return items.reduce(\r\n        (memo, [edgeType, [sx, sy]]) => {\r\n            const resSx = edgeType === EdgeType.LeftVertical || edgeType === EdgeType.RightVertical ? sx : memo[0];\r\n            const resSy = edgeType === EdgeType.TopHorizontal || edgeType === EdgeType.BottomHorizontal ? sy : memo[1];\r\n            return [resSx, resSy];\r\n        },\r\n        [-1, -1] as Position\r\n    );\r\n};\r\n\r\ntype MagnetingEdgesResult = (distance: number, current: GuidSizePosition, closestEdge: [number, EdgeType, GuidSizePosition, number]) => NearestResult[];\r\n\r\n\r\nexport const nearestCalculation = (closestEdges: ClosestEdge[], magnetingEdges: MagnetingEdgesResult) =>\r\n\r\n    (_guid: GuidType, _mouseContext: IContextMagnet, startGuidSizePosition: GuidSizePosition) =>\r\n\r\n        (nearestYes: (_items: [NearestResult[], NearestResult[]]) => void, nearestNo: () => void) => {\r\n\r\n            const nearestData = closestEdges.reduce<[[NearestResult[], NearestResult[]], [number, number]]>(\r\n\r\n                ([[vertResult, horResult], minDistances], [distance, edgeType, closestItem, minDistanceToAnotherEdge], i) => {\r\n\r\n                    if (edgeType !== EdgeType.None && closestItem) {\r\n\r\n                        let isClosestExist = -1;\r\n\r\n                        let minVertical = minDistances[0];\r\n                        let minHorizontal = minDistances[1];\r\n\r\n                        if (edgeType === EdgeType.LeftVertical || edgeType === EdgeType.RightVertical) {\r\n                            if ((minVertical > distance) || minVertical < 0) {\r\n                                minVertical = distance;\r\n                                isClosestExist = 0;\r\n                            }\r\n                        }\r\n                        if (edgeType === EdgeType.TopHorizontal || edgeType === EdgeType.BottomHorizontal) {\r\n                            if ((minHorizontal > distance) || minHorizontal < 0) {\r\n                                minHorizontal = distance;\r\n                                isClosestExist = 1;\r\n                            }\r\n                        }\r\n\r\n                        if (isClosestExist > -1) {\r\n                            const newNearest = magnetingEdges(distance, startGuidSizePosition, [distance, edgeType, closestItem, minDistanceToAnotherEdge]);\r\n                            console.log('%c new nearest: >', 'color: yellow; background-color: #345; border: 1px solid orange;', distance, edgeType, closestItem);\r\n                            return isClosestExist === 0\r\n                                ? [[newNearest, horResult], [minVertical, minHorizontal]]\r\n                                : [[vertResult, newNearest], [minVertical, minHorizontal]];\r\n\r\n                        }\r\n                    }\r\n\r\n                    return [[vertResult, horResult], minDistances];\r\n                },\r\n                [[[], []], [-1, -1]] as [[NearestResult[], NearestResult[]], [number, number]]\r\n            );\r\n\r\n            const nearestVerticalHorizontal = nearestData[0];\r\n            const nearest: [NearestResult[], NearestResult[]] = [nearestVerticalHorizontal[0], nearestVerticalHorizontal[1]];\r\n\r\n            if ((!nearest[0].length && !nearest[1].length)) {\r\n                nearestNo();\r\n            } else {\r\n\r\n                nearestYes(nearest);\r\n            }\r\n\r\n        }\r\n","import DragFrameDiv from './DragFrameDiv';\r\nimport { RendererType } from '../types';\r\n\r\nexport const renderBlockTypes: Array<[RendererType.HTML | RendererType.SVG, React.ComponentType<any>]> = [\r\n    [RendererType.HTML, DragFrameDiv]\r\n];\r\n\r\nexport default DragFrameDiv;\r\n","import React from 'react'\r\nimport { MagnetCornerType, MagnetCornerFrameBlockProps } from '@designer-core/shared/types';\r\n\r\n\r\nconst getCornerMarker = (type: MagnetCornerType, indent: [number, number, number, number], offset?: number) => {\r\n\r\n    const [TOP_INDENT, RIGHT_INDENT, BOTTOM_INDENT, LEFT_INDENT] = indent;\r\n\r\n    let props: Partial<React.CSSProperties> = { width: 20, height: 20 };\r\n    const topLeftCorner: Partial<React.CSSProperties> = { borderTopStyle: 'solid', borderLeftStyle: 'solid' };\r\n    const topRightCorner: Partial<React.CSSProperties> = { borderTopStyle: 'solid', borderRightStyle: 'solid' };\r\n    const bottomLeftCorner: Partial<React.CSSProperties> = { borderBottomStyle: 'solid', borderLeftStyle: 'solid' };\r\n    const bottomRightCorner: Partial<React.CSSProperties> = { borderBottomStyle: 'solid', borderRightStyle: 'solid' };\r\n\r\n    const edgeStyle: Partial<React.CSSProperties> = { borderColor: 'lime' };\r\n\r\n    const verticalLine: Partial<React.CSSProperties> = offset ? { borderLeftStyle: 'solid' } : { borderRightStyle: 'solid' };\r\n    const horizontalLine: Partial<React.CSSProperties> = offset ? { borderBottomStyle: 'solid' } : { borderTopStyle: 'solid' };\r\n\r\n    let helperOffset = {};\r\n\r\n    switch (type) {\r\n\r\n        case MagnetCornerType.TopLeft_LeftBottom:\r\n            props = { ...props, ...topRightCorner, left: -LEFT_INDENT - 20, top: 0 };\r\n            break;\r\n        case MagnetCornerType.TopLeft_LeftTop:\r\n            props = { ...props, ...bottomRightCorner, left: -LEFT_INDENT - 20, top: -20 };\r\n            break;\r\n        case MagnetCornerType.TopLeft_TopLeft:\r\n            props = { ...props, ...bottomRightCorner, left: -20, top: -TOP_INDENT - 20 };\r\n            break;\r\n        case MagnetCornerType.TopLeft_TopRight:\r\n            props = { ...props, ...bottomLeftCorner, left: 0, top: -TOP_INDENT - 20 };\r\n            break;\r\n\r\n        case MagnetCornerType.TopRight_TopLeft:\r\n            props = { ...props, ...bottomRightCorner, right: 0, top: -TOP_INDENT - 20 };\r\n            break;\r\n        case MagnetCornerType.TopRight_TopRight:\r\n            props = { ...props, ...bottomLeftCorner, right: -20, top: -TOP_INDENT - 20 };\r\n            break;\r\n        case MagnetCornerType.TopRight_RightTop:\r\n            props = { ...props, ...bottomLeftCorner, right: -RIGHT_INDENT - 20, top: -20 };\r\n            break;\r\n        case MagnetCornerType.TopRight_RightBottom:\r\n            props = { ...props, ...topLeftCorner, right: -RIGHT_INDENT - 20, top: 0 };\r\n            break;\r\n\r\n\r\n        case MagnetCornerType.BottomRight_RightTop:\r\n            props = { ...props, ...bottomLeftCorner, right: -RIGHT_INDENT - 20, bottom: 0 };\r\n            break;\r\n        case MagnetCornerType.BottomRight_RightBottom:\r\n            props = { ...props, ...topLeftCorner, right: -RIGHT_INDENT - 20, bottom: -20 };\r\n            break;\r\n        case MagnetCornerType.BottomRight_BottomRight:\r\n            props = { ...props, ...topLeftCorner, right: -20, bottom: -BOTTOM_INDENT - 20 };\r\n            break;\r\n        case MagnetCornerType.BottomRight_BottomLeft:\r\n            props = { ...props, ...topRightCorner, right: 0, bottom: -BOTTOM_INDENT - 20 };\r\n            break;\r\n\r\n\r\n        case MagnetCornerType.BottomLeft_BottomRight:\r\n            props = { ...props, ...topLeftCorner, left: 0, bottom: -BOTTOM_INDENT - 20 };\r\n            break;\r\n        case MagnetCornerType.BottomLeft_BottomLeft:\r\n            props = { ...props, ...topRightCorner, left: -20, bottom: -BOTTOM_INDENT - 20 };\r\n            break;\r\n        case MagnetCornerType.BottomLeft_LeftBottom:\r\n            props = { ...props, ...topRightCorner, left: -LEFT_INDENT - 20, bottom: -20 };\r\n            break;\r\n        case MagnetCornerType.BottomLeft_LeftTop:\r\n            props = { ...props, ...bottomRightCorner, left: -LEFT_INDENT - 20, bottom: 0 };\r\n            break;\r\n\r\n\r\n        case MagnetCornerType.Left_Vertical:\r\n            helperOffset = offset ? { width: 1, top: -TOP_INDENT + 5 } : { width: 1, bottom: -BOTTOM_INDENT + 5 };\r\n            props = { ...props, ...edgeStyle, ...verticalLine, left: 0, ...helperOffset };\r\n            break;\r\n\r\n        case MagnetCornerType.Right_Vertical:\r\n            helperOffset = offset ? { width: 1, top: -TOP_INDENT + 5 } : { width: 1, bottom: -BOTTOM_INDENT + 5 };\r\n            props = { ...props, ...edgeStyle, ...verticalLine, right: 0, ...helperOffset };\r\n            break;\r\n\r\n        case MagnetCornerType.Top_Horizontal:\r\n            helperOffset = offset ? { height: 1, left: -LEFT_INDENT + 5 } : { height: 1, right: -RIGHT_INDENT + 5 };\r\n            props = { ...props, ...edgeStyle, ...horizontalLine, top: 0, ...helperOffset };\r\n            break;\r\n\r\n        case MagnetCornerType.Bottom_Horizontal:\r\n            helperOffset = offset ? { height: 1, left: -LEFT_INDENT + 5 } : { height: 1, right: -RIGHT_INDENT + 5 };\r\n            props = { ...props, ...edgeStyle, ...horizontalLine, bottom: 0, ...helperOffset };\r\n            break;\r\n\r\n        case MagnetCornerType.None:\r\n            props.width = 0;\r\n            props.height = 0;\r\n            props.top = 0;\r\n            props.left = 0;\r\n            break;\r\n\r\n        default:\r\n            props.width = 0;\r\n            props.height = 0;\r\n            props.top = 0;\r\n            props.left = 0;\r\n    }\r\n\r\n    return { ...props };\r\n};\r\n\r\n\r\nconst MagnetCornerFrameDiv = (props: MagnetCornerFrameBlockProps) => {\r\n\r\n    const { type, indent, offset } = props;\r\n\r\n    const cornerProps: Partial<React.CSSProperties> = type !== null\r\n        ? getCornerMarker(type, indent, offset)\r\n        : { top: 0, left: 0, width: 0, height: 0 };\r\n\r\n    return <div className={ `block_magnet-corner-frame` } style={ { ...cornerProps } }></div>\r\n}\r\n\r\nexport default MagnetCornerFrameDiv;\r\n","import MagnetCornerFrameDiv from './MagnetCornerFrameDiv';\r\nimport { RendererType } from '../types';\r\n\r\nexport const renderBlockTypes: Array<[RendererType.HTML | RendererType.SVG, React.ComponentType<any>]> = [\r\n    [RendererType.HTML, MagnetCornerFrameDiv]\r\n];\r\n\r\nexport default MagnetCornerFrameDiv;\r\n","import React from 'react'\r\nimport { MagnetFrameBlockProps } from '@designer-core/shared/types';\r\n\r\nconst MagnetFrameDiv = <TProps extends MagnetFrameBlockProps>(props: TProps) => {\r\n\r\n    const { markerPosition, size } = props;\r\n    return <div\r\n        className={ `block_magnet-frame block_magnet-frame--${!markerPosition || markerPosition[1] ? 'disabled' : 'active'}` }\r\n        style={ {\r\n            marginTop: -40,\r\n            marginLeft: -40,\r\n            width: size[0] + 80,\r\n            height: size[1] + 80,\r\n        } }></div>\r\n}\r\n\r\nexport default MagnetFrameDiv;\r\n","import MagnetFrameDiv from './MagnetFrameDiv';\r\nimport { RendererType } from '../types';\r\n\r\nexport const renderBlockTypes: Array<[RendererType.HTML | RendererType.SVG, React.ComponentType<any>]> = [\r\n    [RendererType.HTML, MagnetFrameDiv]\r\n];\r\n\r\n\r\nexport default MagnetFrameDiv;\r\n","import React from 'react'\r\nimport { BaseBoxProps, DragFrameBlockProps, ActiveLevels } from '@designer-core/shared/types';\r\n\r\nconst SelectedFrameBlock = <TProps extends BaseBoxProps>(props: React.PropsWithChildren<DragFrameBlockProps & TProps>) => {\r\n\r\n    const propsLevel = props.activeLevel || ActiveLevels.None;\r\n\r\n    let isFramed =\r\n        propsLevel === ActiveLevels.InGroup\r\n        || propsLevel === ActiveLevels.MoveInGroup\r\n        || propsLevel === ActiveLevels.HoverInGroup\r\n        || propsLevel === ActiveLevels.MoveByHandInGroup;\r\n\r\n    const delta = isFramed ? 10 : 0;\r\n    const width = props.size[0] + delta;\r\n    const height = props.size[1] + delta;\r\n\r\n    let [marginLeft, marginTop] = [-delta / 2, -delta / 2];\r\n\r\n    return <div className={ `block_frame block_frame--${isFramed ? 'selected' : 'not-selected'}` } style={ { width, height, marginLeft, marginTop } }>\r\n        { props.children }\r\n    </div>\r\n}\r\n\r\nexport default SelectedFrameBlock;\r\n","import SelectedFrameDiv from './SelectedFrameDiv';\r\nimport { RendererType } from '../types';\r\n\r\nexport const renderBlockTypes: Array<[RendererType.HTML | RendererType.SVG, React.ComponentType<any>]> = [\r\n    [RendererType.HTML, SelectedFrameDiv]\r\n];\r\n\r\nexport default SelectedFrameDiv;\r\n","import { IBlockFactory, factory } from './blocks';\r\nimport { RendererType } from './blocks/types';\r\n\r\nexport const blockFactory: IBlockFactory = factory(RendererType.HTML);\r\n","import React from 'react';\r\n\r\nimport { BaseBoxProps } from '@designer-core/shared/types';\r\n// import ContainerBlock from '@designer-core/shared/blocks/Container';\r\n// import BoxBlock from '@designer-core/shared/blocks/Box';\r\nimport { blockFactory } from '@designer-core/shared/config';\r\nimport { BlockType, ContainerProps } from '@designer-core/shared/blocks/types';\r\n\r\nconst BoxBlock = blockFactory.getBlock<BaseBoxProps>(BlockType.Box);\r\nconst ContainerBlock = blockFactory.getBlock<ContainerProps>(BlockType.Container);\r\n\r\nconst WorkspaceBlock = (props: React.PropsWithChildren<BaseBoxProps>) => {\r\n\r\n    const { size, xy } = props;\r\n\r\n    return (\r\n        !!size[0] && !!size[1]\r\n            ? <BoxBlock { ...props } classModifiers={ ['silver-bordered'] }>\r\n                <ContainerBlock style={ { width: size[0], height: size[1] } }>\r\n                    { props.children }\r\n                </ContainerBlock>\r\n                <div style={ { fontSize: '12px', position: 'absolute', bottom: 2, right: 2 } }>\r\n                    <div>sx={ size[0] }</div>\r\n                    <div>sy= { size[1] }</div>\r\n                </div>\r\n                <div style={ { fontSize: '12px', position: 'absolute', bottom: 2, left: 2 } }>\r\n                    <div>x={ xy[0] }</div>\r\n                    <div>y= { xy[1] }</div>\r\n                </div>\r\n            </BoxBlock>\r\n            : null\r\n    );\r\n};\r\n\r\nexport default WorkspaceBlock;\r\n","import React, { useMemo, useEffect, useRef } from 'react';\r\nimport {\r\n    ROOT_GUID,\r\n    IMouseStreamContext,\r\n    GuidType,\r\n    IStreamData,\r\n    EventType,\r\n    Nullable,\r\n    ContextPlugin\r\n} from '../types';\r\n\r\nimport { Subject, BehaviorSubject, combineLatest } from 'rxjs';\r\nimport { tap, map, switchMap, takeUntil } from 'rxjs/operators';\r\n\r\n\r\nconst getMouseStreamContainer = <TStartProps extends {}, TContextParts>(\r\n    MouseStreamContext: React.Context<Nullable<IMouseStreamContext & TContextParts>>,\r\n    plugins: ContextPlugin<any, any>[]\r\n) =>\r\n    (StartBlock: React.ComponentType<TStartProps>) => {\r\n\r\n        const Container = (props: React.PropsWithChildren<TStartProps>) => {\r\n\r\n            const pluginsRef = useRef(plugins);\r\n\r\n            const contextParts = useMemo<TContextParts>(() => {\r\n                const result: TContextParts = pluginsRef.current.reduce((memo, el: ContextPlugin<any, TContextParts>) => ({ ...memo, ...el[0] }), {} as TContextParts);\r\n                return result;\r\n            }, [pluginsRef]);\r\n\r\n\r\n            const mouseStreamContext = useMemo<IMouseStreamContext & TContextParts>(() => ({\r\n\r\n                dragStart: new Subject(),\r\n                drag: new Subject(),\r\n                dragStop: new Subject(),\r\n\r\n                control: new BehaviorSubject<GuidType>(null),\r\n                group: new BehaviorSubject<GuidType[]>([]),\r\n                deltaMoves: new Subject(),\r\n\r\n\r\n                mouseDown: new Subject(),\r\n                mouseMove: new Subject(),\r\n                mouseUp: new Subject(),\r\n                mouseLeave: new Subject(),\r\n                mouseStop: new Subject(),\r\n\r\n                ...contextParts\r\n\r\n            }), [contextParts]);\r\n\r\n\r\n            useEffect(() => {\r\n                console.log('%c start launch plugins ', 'color: yellow; background-color: darkgreen');\r\n                const effects = pluginsRef.current.map(([_part, func]) => {\r\n                    const [effect] = func(mouseStreamContext);\r\n                    return effect;\r\n                });\r\n                const mainEffect = () => {\r\n                    const results = effects.map(t => t());\r\n                    return () => {\r\n                        results.forEach(endFunc => endFunc && endFunc());\r\n                    };\r\n                };\r\n                const resultMainEffect = mainEffect();\r\n                return () => {\r\n                    console.log('%c stop launch plugins ', 'color: lime; background-color: darkgreen');\r\n                    resultMainEffect();\r\n                }\r\n            }, [mouseStreamContext, pluginsRef]);\r\n\r\n\r\n            const startMoving$ = useMemo(() => {\r\n                return mouseStreamContext.mouseDown.pipe(\r\n                    tap(ev => console.warn('tap mouseDowen elementid', ev.elementId, ev.type)),\r\n                    map(data => [data.elementId, { ...data }] as [GuidType, IStreamData])\r\n                );\r\n            }, [mouseStreamContext]);\r\n\r\n            //  main stream: stop and start moving\r\n            const movingSource$ = useMemo(() => {\r\n                return startMoving$.pipe(\r\n                    tap(([elementId]) => console.log('start moving!', elementId)),\r\n                    switchMap(\r\n                        data => combineLatest(\r\n                            new BehaviorSubject(data),\r\n                            mouseStreamContext.mouseMove\r\n                        ).pipe(\r\n                            takeUntil(mouseStreamContext.mouseStop.pipe(\r\n                                tap(({ ev }) => {\r\n                                    const elementId = mouseStreamContext.control.getValue();\r\n                                    mouseStreamContext.dragStop.next({ elementId, ev, type: EventType.StopDrag });\r\n                                    mouseStreamContext.control.next(null);\r\n                                })\r\n                            ))\r\n                        )\r\n                    )\r\n                );\r\n            }, [mouseStreamContext, startMoving$]);\r\n\r\n            useEffect(() => {\r\n\r\n                console.warn('\\n\\n effect in stream-container');\r\n\r\n                const movingSubscription = movingSource$.subscribe(([[elementId, start], move]) => {\r\n                    const [startX, startY] = [start.ev.clientX, start.ev.clientY];\r\n                    mouseStreamContext.deltaMoves.next([elementId, [move.ev.clientX - startX, move.ev.clientY - startY]]);\r\n                    mouseStreamContext.drag.next({ ...move, elementId: mouseStreamContext.control.getValue() });\r\n                });\r\n\r\n                const startDragSubscription = startMoving$.subscribe(([elementId, start]) => {\r\n                    mouseStreamContext.dragStart.next({ elementId, type: EventType.StartDrag, ev: start.ev });\r\n                });\r\n\r\n                const stopDragSubsciption = mouseStreamContext.mouseStop.subscribe((_) => {\r\n                    const currControl = mouseStreamContext.control.getValue();\r\n                    console.log('stop listening in main Drag container', currControl);\r\n                });\r\n\r\n\r\n                return () => {\r\n                    console.log('\\n\\n clear in stream-container');\r\n\r\n                    mouseStreamContext.mouseDown.complete();\r\n                    mouseStreamContext.mouseMove.complete();\r\n                    mouseStreamContext.mouseStop.complete();\r\n\r\n                    mouseStreamContext.control.complete();\r\n                    mouseStreamContext.deltaMoves.complete();\r\n\r\n                    movingSubscription.unsubscribe();\r\n                    startDragSubscription.unsubscribe();\r\n                    stopDragSubsciption.unsubscribe();\r\n                };\r\n            }, [mouseStreamContext, movingSource$, startMoving$]);\r\n\r\n            const handlers = useMemo<React.DOMAttributes<HTMLDivElement>>(() => ({\r\n                onMouseDown: (ev: React.MouseEvent<HTMLElement, MouseEvent>) => { },\r\n                onMouseMove: (ev: React.MouseEvent<HTMLElement, MouseEvent>) => {\r\n                    mouseStreamContext.mouseMove.next({ elementId: ROOT_GUID, ev: ev.nativeEvent, type: EventType.Move });\r\n                },\r\n                onMouseUp: (ev: React.MouseEvent<HTMLElement, MouseEvent>) => {\r\n                    mouseStreamContext.mouseUp.next({ elementId: ROOT_GUID, ev: ev.nativeEvent, type: EventType.Cancel });\r\n                    mouseStreamContext.mouseStop.next({ elementId: ROOT_GUID, ev: ev.nativeEvent, type: EventType.Cancel });\r\n                },\r\n                onMouseLeave: (ev: React.MouseEvent<HTMLElement, MouseEvent>) => {\r\n                    mouseStreamContext.mouseLeave.next({ elementId: ROOT_GUID, ev: ev.nativeEvent, type: EventType.Cancel });\r\n                    mouseStreamContext.mouseStop.next({ elementId: ROOT_GUID, ev: ev.nativeEvent, type: EventType.Cancel });\r\n                }\r\n\r\n            }), [mouseStreamContext]);\r\n\r\n            return (\r\n                <StartBlock { ...props } handlers={ handlers }>\r\n                    <MouseStreamContext.Provider value={ mouseStreamContext }>\r\n                        { props.children }\r\n                    </MouseStreamContext.Provider>\r\n                </StartBlock>\r\n            );\r\n        };\r\n\r\n        return Container;\r\n    };\r\n\r\nexport default getMouseStreamContainer;\r\n","import React, { useContext, useEffect, useRef } from 'react';\r\nimport { BehaviorSubject, Subscription, Observable } from 'rxjs';\r\n\r\nimport { withLatestFrom } from 'rxjs/operators';\r\nimport { IStore, IAction, ReducerMapper, ActionName, ActionReducerTuple, UsingReducer, MapStateToProps, ActionFunc } from './storeTypes';\r\nimport { IState } from '@designer-core/shared/stateTypes';\r\n\r\n\r\nconst _INIT_ACTION_ = '_init-action_' as ActionName;\r\n\r\n\r\nclass Store<TState> implements IStore<TState> {\r\n\r\n    change = new BehaviorSubject<IAction<any>>({ type: _INIT_ACTION_, payload: null });\r\n\r\n    private _actionSub: Subscription;\r\n\r\n    constructor(public state: TState, private _reducers: ReducerMapper<TState>[]) {\r\n        this._actionSub = this.change.pipe(\r\n            // tap(action => this._reducers.map((reducer) => reducer(this.state, action)))\r\n        ).subscribe((val) => {\r\n            console.log('action change: ', val);\r\n        });\r\n    }\r\n\r\n    dispatch<TPayload>(action: IAction<TPayload>): Observable<IAction<TPayload>> {\r\n        console.log('--->dispatch action: ', action);\r\n        // this.change.next(action);\r\n        return this.change;\r\n    }\r\n\r\n    close() {\r\n        this.change.complete();\r\n        this._actionSub.unsubscribe();\r\n    }\r\n}\r\n\r\nexport const combineReducers: UsingReducer = <TPayload extends {}>(reducerMappers: ActionReducerTuple<IState, TPayload>[]) =>\r\n    (state: IState, action: IAction<TPayload>) =>\r\n        reducerMappers\r\n            .filter(([actionName, _]) => actionName === action.type)\r\n            .forEach(([_, payloadReducer]) => payloadReducer(state, action.payload));\r\n\r\n\r\nconst StoreContext = React.createContext<IStore<any> | null>(null);\r\n\r\nexport const useSelector = <TState extends {}>(fn: Function) => {\r\n    const store = useContext(StoreContext) as IStore<TState>;\r\n    return fn(store.state);\r\n};\r\n\r\n\r\nexport const connect = <TState, TProps>(selector: MapStateToProps<TState, TProps>) =>\r\n\r\n    (Component: React.ComponentType<TProps>) => {\r\n\r\n        const Result = (props: React.PropsWithChildren<TProps>) => {\r\n\r\n            const propsRef = useRef(props);\r\n\r\n            const store = useContext(StoreContext) as IStore<TState>;\r\n\r\n            console.log(1111, props);\r\n\r\n            useEffect(() => {\r\n\r\n                console.log(222, propsRef.current);\r\n                const [parent$, selectors] = selector(store.state, propsRef.current);\r\n                const sub = store.change.pipe(\r\n                    withLatestFrom(parent$)\r\n                ).subscribe((value) => {\r\n                    selectors.forEach(_selector => _selector(store.state, propsRef.current));\r\n                    console.log('changed pair! >', value);\r\n                });\r\n\r\n                store.change.subscribe(data => {\r\n                    console.log('\\n\\n---------------- CHANGE STORE DATA -----');\r\n                    console.log('data: ', data);\r\n                    console.log('---------------- CHANGE STORE DATA END-----\\n\\n');\r\n                });\r\n                return () => {\r\n                    sub.unsubscribe();\r\n                }\r\n            }, [propsRef, store]);\r\n\r\n            return <Component { ...props }>{ props.children }</Component>;\r\n        };\r\n\r\n        return Result;\r\n    };\r\n\r\n\r\nexport const useAction = <TPayload, TState>(actionFunc: ActionFunc<TPayload>) => {\r\n\r\n\r\n    const Result = (payload: TPayload) => {\r\n\r\n        const store = useContext(StoreContext) as IStore<TState>;\r\n\r\n        const action = actionFunc(payload);\r\n\r\n        useEffect(() => {\r\n\r\n            let sub: Subscription | null = null;\r\n\r\n            if (action instanceof Observable) sub = action.subscribe(_action => store.dispatch(_action));\r\n            else store.dispatch<TPayload>(action);\r\n\r\n            return () => {\r\n                sub && sub.unsubscribe();\r\n            }\r\n        }, [store, action]);\r\n\r\n        // console.log('useAction', action);\r\n\r\n\r\n        // return action instanceof Observable ? action.pipe(switchMap(_action => store.dispatch(_action))) : store.dispatch<TPayload>(action);\r\n    };\r\n\r\n    return Result;\r\n};\r\n\r\n\r\nexport const useStore = <TState extends {}>(initialStore: TState, reducers: ReducerMapper<TState>[]): [IStore<TState>, React.Provider<IStore<TState> | null>] => {\r\n    const store = new Store(initialStore, reducers);\r\n    return [store, StoreContext.Provider];\r\n};\r\n\r\nexport default StoreContext;\r\n","import { BehaviorSubject } from 'rxjs';\r\nimport React, { useEffect, useState, useContext, useMemo } from 'react';\r\nimport { IStore } from '@designer-core/rxRedux/storeTypes';\r\n\r\nimport StoreContext from '@designer-core/rxRedux/storeContext';\r\n\r\n\r\nexport type DataSelector<TIdent, TElement> = (ident?: TIdent) => TElement;\r\n\r\nexport type StorageSelector<TState, TIdent, TElement> = (store: IStore<TState>) => DataSelector<TIdent, TElement>;\r\n\r\nexport interface IStorage {\r\n    send<V>(key: string, value: V): void;\r\n    get<S, V>(key: string, ident?: S): V | void;\r\n}\r\n\r\n\r\nexport type StorageService<TData> = (value: TData) => void | Promise<any>;\r\n\r\nexport type DataService<TState, TData> = (store: IStore<TState>) => StorageService<TData>;\r\n\r\nexport type MsgService<TState, TData> = [string, DataService<TState, TData>];\r\n\r\nexport type MsgSelector<TState, TIdent, TElement> = [string, StorageSelector<TState, TIdent, TElement>];\r\n\r\n\r\nexport class Storage implements IStorage {\r\n\r\n    constructor(private _services: Array<[string, StorageService<any>]>, private _selectors: [string, DataSelector<any, any>][]) { }\r\n\r\n    send<V>(key: string, value: V) {\r\n        this._services.filter(([msg]) => msg === key).forEach(([_msg, service]) => service(value));\r\n    }\r\n    get<S, V>(key: string, ident?: S): V | void {\r\n        const selector = this._selectors.find(([msg, _selector]) => msg === key);\r\n        !selector && console.log(`%c no selector -> ${key} `, 'background-color: magenta; color: yellow');\r\n        return selector && selector[1](ident);\r\n    }\r\n}\r\n\r\n\r\nexport const useSubscribedState = <T extends any>(source$: BehaviorSubject<T>): [T, React.Dispatch<React.SetStateAction<T>>] => {\r\n    const [state, setState] = useState<T>(source$.getValue());\r\n    useEffect(() => {\r\n        const subscription = source$.subscribe(value => setState(value));\r\n        return () => subscription.unsubscribe();\r\n    }, [source$]);\r\n    return [state, setState];\r\n};\r\n\r\nexport const useStorage = <TState extends any>(\r\n    guid: string,\r\n    services: MsgService<TState, any>[],\r\n    selectors: MsgSelector<TState, any, any>[]\r\n): IStorage => {\r\n\r\n    const store = useContext(StoreContext as React.Context<IStore<TState>>);\r\n\r\n    const storage = useMemo(\r\n        () => {\r\n            console.log('%c storage-->', 'color: green', guid, services, selectors);\r\n            return new Storage(\r\n                services.map(([msg, service]) => [msg, service(store)]),\r\n                selectors.map(([msg, selector]) => [msg, selector(store)]),\r\n            )\r\n        },\r\n        [guid, store, services, selectors]\r\n    );\r\n    return storage;\r\n};\r\n","import React, { useEffect, useState, useMemo } from 'react';\r\nimport { BoxProps, BaseBoxProps } from '../types';\r\n\r\n\r\n/**\r\n * @function BlockWrapper provides mapping stream datas to simple Position, XY, Size\r\n * @param Block simple Block gets base properties (xy, position, etc) \r\n */\r\nexport const WrappedBlock = (Block: React.ComponentType<BaseBoxProps>) => {\r\n\r\n    const Result = <TProps extends BoxProps>(props: React.PropsWithChildren<TProps>) => {\r\n\r\n        const { guid, size$, position$, xy$, activeLevel$, ...otherProps } = props;\r\n\r\n        const [xy, setXY] = useState(xy$.getValue());\r\n        const [position, setPosition] = useState(position$.getValue());\r\n        const [size, setSize] = useState(size$.getValue());\r\n        const [activeLevel, setActiveLevel] = useState(activeLevel$.getValue());\r\n\r\n\r\n        useEffect(() => {\r\n            const xySub = xy$.subscribe(([x, y]) => {\r\n                requestAnimationFrame(() => {\r\n                    setXY([x, y]);\r\n                });\r\n            });\r\n            const positionSub = position$.subscribe(([x, y]) => {\r\n                requestAnimationFrame(() => {\r\n                    setPosition([x, y]);\r\n                });\r\n            });\r\n            const sizeSub = size$.subscribe(([sx, sy]) => {\r\n                requestAnimationFrame(() => {\r\n                    setSize([sx, sy]);\r\n                });\r\n            });\r\n\r\n            const activeLevelSub = activeLevel$.subscribe((level) => {\r\n                requestAnimationFrame(() => {\r\n                    setActiveLevel(level);\r\n                });\r\n            });\r\n\r\n            return () => {\r\n                console.log('unsubscribe WrappedBlock', guid);\r\n                positionSub.unsubscribe();\r\n                xySub.unsubscribe();\r\n                sizeSub.unsubscribe();\r\n                activeLevelSub.unsubscribe();\r\n            };\r\n\r\n        }, [guid, size$, position$, xy$, activeLevel$]);\r\n\r\n        return <Block { ...otherProps } guid={ guid } xy={ xy } position={ position } size={ size } activeLevel={ activeLevel } >\r\n            { props.children }\r\n        </Block>;\r\n    };\r\n\r\n    return Result;\r\n}\r\n\r\n/**\r\n * ConnectedBlock provides sending BACK to position$ captured xy stream data and fix started position\r\n * @param BoxBlock simple Block gets base properties (xy, position, etc) \r\n */\r\nconst ConnectedBlock = (BoxBlock: React.ComponentType<BaseBoxProps>) => {\r\n\r\n    const ResultComponent = <TProps extends BoxProps>(props: React.PropsWithChildren<TProps>) => {\r\n\r\n        const { guid, size$, position$, xy$, activeLevel$, ...otherProps } = props;\r\n\r\n        const size = size$.getValue();\r\n        const activeLevel = activeLevel$.getValue();\r\n        const position = useMemo(() => position$.getValue(), [position$]);\r\n\r\n        const [xy, setXY] = useState(xy$.getValue());\r\n\r\n        useEffect(() => {\r\n            const xySub = xy$.subscribe(([x, y]) => {\r\n                requestAnimationFrame(() => {\r\n                    position$.next([x, y]);\r\n                    setXY([x, y]);\r\n                });\r\n            });\r\n            return () => {\r\n                console.log('unsubscribe ConnectedBlock', guid);\r\n                xySub.unsubscribe();\r\n            };\r\n        }, [guid, position$, xy$]);\r\n\r\n        return <BoxBlock { ...otherProps } guid={ guid } xy={ xy } position={ position } size={ size } activeLevel={ activeLevel } >\r\n            { props.children }\r\n        </BoxBlock>;\r\n    };\r\n\r\n    return ResultComponent;\r\n}\r\nexport default ConnectedBlock;\r\n","import React, { useState, useMemo, useEffect, useRef, useContext } from 'react';\r\n\r\nimport { useSubscribedState } from '@designer-core/shared/helpers/storage';\r\n\r\nimport BoxBlock from '@designer-core/shared/blocks/Box';\r\nimport DragFrameBlock from '@designer-core/shared/blocks/DragFrame';\r\nimport AnchorBlock from '@designer-core/shared/blocks/Anchor';\r\n\r\nimport { SELECTING_FRAME_GUID, ROOT_GUID, BoxProps, DragFrameProps, ActiveLevels, Position, IMouseStreamContext } from '@designer-core/shared/types';\r\n\r\nimport { MouseStreamContext } from '../MouseStreams';\r\n\r\nimport { WrappedBlock } from '../ConnectedBlock';\r\nimport { BehaviorSubject, Subject } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\n\r\n\r\ntype DragResultProps<TProps> = DragFrameProps & TProps;\r\n\r\nconst DisplayedBlock = WrappedBlock(BoxBlock);\r\n\r\nconst DragFrameWrapper =\r\n    <TProps extends BoxProps>(Component: React.ComponentType<TProps & Partial<DragFrameProps>>) => {\r\n\r\n        const ResultBlock = (props: React.PropsWithChildren<DragResultProps<TProps>>) => {\r\n\r\n            const { position$, size$, xy$, activeLevel$, ...baseProps } = props;\r\n            const { guid, handlers } = props;\r\n\r\n            const mouseContext = useContext(MouseStreamContext) as IMouseStreamContext;\r\n\r\n            const [isAnchorActive, setAnchorActivation] = useState(false);\r\n\r\n            const [newSize] = useSubscribedState(size$);\r\n\r\n            const activeLevelRef = useRef(activeLevel$.getValue());\r\n\r\n            const emptyPosition$ = useMemo(() => new BehaviorSubject<Position>([0, 0]), []);\r\n\r\n            const propsMouseDown = useMemo(() => {\r\n                return (ev: React.MouseEvent<HTMLDivElement, MouseEvent>) => handlers && handlers.onMouseDown && handlers.onMouseDown(ev)\r\n            }, [handlers]);\r\n\r\n\r\n            useEffect(() => {\r\n\r\n                const emptyPosSub = emptyPosition$.pipe(\r\n                    // because of BehaviorSubject init value is catched in subscription!\r\n                    filter((_, i) => i > 0)\r\n                ).subscribe(([x, y]) => {\r\n                    position$.next([x, y]);\r\n                });\r\n                return () => {\r\n                    emptyPosSub.unsubscribe();\r\n                }\r\n            }, [guid, xy$, position$, emptyPosition$, activeLevel$]);\r\n\r\n            const anchorHandler = useMemo<React.DOMAttributes<HTMLDivElement>>(() => ({\r\n                onMouseDown: (ev: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n                    propsMouseDown(ev);\r\n                }\r\n            }), [propsMouseDown]);\r\n\r\n            const hover$ = useMemo(() => {\r\n                return new Subject<number>();\r\n            }, []);\r\n\r\n            const updHandlers = useMemo<React.DOMAttributes<HTMLDivElement>>(\r\n                () => handlers\r\n                    ? {\r\n                        ...handlers,\r\n                        onMouseEnter: () => {\r\n                            hover$.next(1);\r\n                        },\r\n                        onMouseLeave: () => {\r\n                            hover$.next(-1);\r\n                        },\r\n                        onMouseDown: (ev: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n                            guid === ROOT_GUID && propsMouseDown(ev);\r\n                            guid !== ROOT_GUID && ev.stopPropagation();\r\n                        }\r\n                    }\r\n                    : {},\r\n                [hover$, guid, handlers, propsMouseDown]\r\n            );\r\n\r\n            useEffect(() => {\r\n                const sub = hover$\r\n                    .pipe(\r\n                        filter(_ => !mouseContext.control.getValue() || mouseContext.control.getValue() === guid),\r\n                        filter(type => type === 1 ? [ActiveLevels.None, ActiveLevels.InGroup].includes(activeLevel$.getValue()) : true),\r\n                        filter(type => type === -1 ? [ActiveLevels.Hover, ActiveLevels.HoverInGroup].includes(activeLevel$.getValue()) : true)\r\n                    )\r\n                    .subscribe((type) => {\r\n                        let level = activeLevel$.getValue();\r\n                        if (type === 1) {\r\n                            // Enter\r\n                            activeLevelRef.current = level;\r\n                            level = level === ActiveLevels.None ? ActiveLevels.Hover : level;\r\n                            level = level === ActiveLevels.InGroup ? ActiveLevels.HoverInGroup : level;\r\n                        } else {\r\n                            // Leave\r\n                            level = activeLevelRef.current;\r\n                        }\r\n\r\n                        activeLevel$.next(level);\r\n\r\n                        setAnchorActivation(type === 1);\r\n                    });\r\n                return () => {\r\n                    console.log('unsubscribe DragFrame', guid);\r\n                    sub.unsubscribe();\r\n                };\r\n            }, [guid, hover$, mouseContext, activeLevel$, activeLevelRef]);\r\n\r\n            const activeLevel = activeLevel$.getValue();\r\n\r\n            const hoverableArr = guid !== ROOT_GUID ? ['hoverable'] : [];\r\n            const dragClassModifiers = activeLevel ? [...hoverableArr, 'draggable', 'drag-start'] : [...hoverableArr, 'draggable'];\r\n            const innerClassModifiers = props.classModifiers || [];\r\n            const classModifiers = activeLevel ? [...innerClassModifiers, 'wrapped-by-drag'] : [...innerClassModifiers];\r\n\r\n            const isDraggableComponent = guid !== ROOT_GUID && guid !== SELECTING_FRAME_GUID;\r\n\r\n            return <DisplayedBlock\r\n                { ...props }\r\n                style={ null }\r\n                activeLevel={ activeLevel }\r\n                handlers={ { ...updHandlers } }\r\n                classModifiers={ dragClassModifiers }>\r\n                <DragFrameBlock { ...baseProps } activeLevel={ activeLevel } handlers={ null } size={ [newSize[0], newSize[1]] } xy={ [0, 0] } position={ [0, 0] }>\r\n                    {\r\n                        isDraggableComponent\r\n                        && activeLevel !== ActiveLevels.MoveInGroup\r\n                        && activeLevel !== ActiveLevels.InGroup\r\n                        && <AnchorBlock\r\n                            { ...props }\r\n                            handlers={ { ...anchorHandler } }\r\n                            activeLevel={ activeLevel }\r\n                            classModifiers={ isAnchorActive && isDraggableComponent ? ['active'] : [] }\r\n                        />\r\n                    }\r\n                    <Component\r\n                        { ...props }\r\n                        classModifiers={ classModifiers }\r\n                        position$={ emptyPosition$ }\r\n                    >\r\n                        { props.children }\r\n                    </Component>\r\n                </DragFrameBlock>\r\n            </DisplayedBlock>;\r\n        };\r\n\r\n        return ResultBlock;\r\n    }\r\n\r\nexport default DragFrameWrapper;\r\n","import React, { useContext, useRef, useMemo, useEffect } from 'react';\r\nimport {\r\n    GuidType,\r\n    BoxProps,\r\n    DragFrameProps,\r\n    IMouseStreamContext,\r\n    ActiveLevels,\r\n    EventType,\r\n    Nullable,\r\n    ComponentWrapper\r\n} from '@designer-core/shared/types';\r\n\r\n\r\nimport { filter } from 'rxjs/operators';\r\nimport { Subscription } from 'rxjs';\r\nimport { IState } from '@designer-core/shared/stateTypes';\r\nimport { MsgService, useStorage, } from '@designer-core/shared/helpers/storage';\r\n\r\n\r\nconst getDragWrapComponent = <TProps extends BoxProps & DragFrameProps>(\r\n    DragFrameWrapper: ComponentWrapper<TProps, TProps>\r\n) =>\r\n    <TContext extends IMouseStreamContext>(\r\n        MouseStreamContext: React.Context<Nullable<TContext>>,\r\n        getHandlers: (elementId: GuidType, mContext: TContext) => React.DOMAttributes<HTMLElement>\r\n    ) => (Component: React.ComponentType<TProps>, services: MsgService<IState, any>[], _selectors: any) => {\r\n\r\n        const MovingComponent = DragFrameWrapper(Component);\r\n\r\n        const ResultComponent = (props: React.PropsWithChildren<TProps>) => {\r\n\r\n            const { guid, position$, xy$, activeLevel$ } = props;\r\n\r\n            const mouseContext = useContext(MouseStreamContext) as TContext;\r\n\r\n            const storage = useStorage(`draggable: ${guid}`, services, []);\r\n\r\n            const startPositionRef = useRef(xy$.getValue());\r\n            const activeLevelRef = useRef(activeLevel$.getValue());\r\n\r\n            const handlers = useMemo<React.DOMAttributes<HTMLElement>>(() => {\r\n                return getHandlers(guid, mouseContext);\r\n            }, [guid, mouseContext]);\r\n\r\n            useEffect(() => {\r\n                const moveSubscription: Subscription = mouseContext.deltaMoves.pipe(\r\n                    filter(([elementId]) => guid === elementId)\r\n                ).subscribe(([_elementId, deltaPosition]) => {\r\n\r\n                    const [x, y] = deltaPosition;\r\n                    const [lx, ly] = startPositionRef.current;\r\n                    const [newX, newY] = [x + lx, y + ly];\r\n\r\n                    storage.send('position', [guid, [newX, newY]]);\r\n\r\n                    xy$.next([newX, newY]);\r\n                });\r\n                return () => moveSubscription.unsubscribe();\r\n            }, [mouseContext, storage, guid, xy$]);\r\n\r\n            useEffect(() => {\r\n\r\n                const stopSubscription = mouseContext.dragStop.pipe(\r\n                    filter(({ elementId }) => elementId === guid),\r\n                ).subscribe((_) => {\r\n                    activeLevel$.next(activeLevelRef.current);\r\n                    const [x, y] = position$.getValue();\r\n                    startPositionRef.current = [x, y];\r\n                });\r\n\r\n                const startSubscription = mouseContext.dragStart.pipe(\r\n                    filter(({ elementId }) => elementId === guid)\r\n                ).subscribe(({ type }) => {\r\n\r\n                    activeLevelRef.current = activeLevel$.getValue();\r\n                    // drag as part of selected group!\r\n                    let level = type === EventType.DragInGroup ? ActiveLevels.MoveInGroup : activeLevelRef.current;\r\n                    if (type !== EventType.DragInGroup) {\r\n                        level = level === ActiveLevels.Hover ? ActiveLevels.MoveByHand : level;\r\n                        level = level === ActiveLevels.HoverInGroup ? ActiveLevels.MoveByHandInGroup : level;\r\n                    }\r\n                    activeLevel$.next(level);\r\n\r\n                    const [x, y] = position$.getValue();\r\n                    startPositionRef.current = [x, y];\r\n                });\r\n\r\n\r\n                return () => {\r\n                    startSubscription.unsubscribe();\r\n                    stopSubscription.unsubscribe();\r\n                };\r\n            }, [guid, mouseContext, position$, xy$, activeLevel$, startPositionRef, activeLevelRef]);\r\n\r\n            return (\r\n                <MovingComponent { ...props } handlers={ handlers }>\r\n                    { props.children }\r\n                </MovingComponent>\r\n            );\r\n        };\r\n\r\n        return ResultComponent;\r\n    };\r\n\r\n\r\nexport default getDragWrapComponent;\r\n","import {\r\n    ContextPlugin,\r\n    IObservablesMouse,\r\n    IObservablesDrag,\r\n    IMagnetStreamData,\r\n    IMagnetPair,\r\n    MagnetPairDirection,\r\n    SELECTING_FRAME_GUID,\r\n    ROOT_GUID,\r\n    GuidType,\r\n} from '@designer-core/shared/types';\r\nimport { Subject, BehaviorSubject } from 'rxjs';\r\nimport { tap, switchMap, takeUntil } from 'rxjs/operators';\r\n\r\nexport interface IContextMagnet {\r\n    magneted: BehaviorSubject<IMagnetStreamData[]>;\r\n    magneting: Subject<IMagnetPair>;\r\n    magnetingStart: Subject<GuidType>;\r\n}\r\n\r\nconst contextPart: IContextMagnet = {\r\n    magneted: new BehaviorSubject<IMagnetStreamData[]>([]),\r\n    magneting: new Subject<IMagnetPair>(),\r\n    magnetingStart: new Subject(),\r\n};\r\n\r\nconst getReactEffect = (mouseStreamContext: IContextMagnet & IObservablesDrag & IObservablesMouse): React.EffectCallback => () => {\r\n\r\n    const source$ = mouseStreamContext.magnetingStart.pipe(\r\n        tap((elementId) => elementId !== SELECTING_FRAME_GUID && elementId !== ROOT_GUID),\r\n        switchMap(\r\n            // magneting IN\r\n            //      -> clear previous magnet pair! (we could have multiple pairs with GUID-ONE and many GUIDs TWO)\r\n            // magneting OUT\r\n            //      -> clear all pairs for current (in common case - we have multiple pairs for one GUID, but here - ONE GUID - ONE PAIR)\r\n            _ => mouseStreamContext.magneting.pipe(\r\n                tap(\r\n                    val => {\r\n\r\n                        const magnetedItems = mouseStreamContext.magneted.getValue();\r\n\r\n                        const [fixGuid] = val.items;\r\n                        const magnetingGuid = val.direction === MagnetPairDirection.In ? val.items[1] : null;\r\n\r\n                        const asInPairs: IMagnetStreamData[] = val.direction === MagnetPairDirection.In\r\n                            ? magnetedItems.filter(t => t.magneted[0] !== fixGuid || t.magneted[1] !== magnetingGuid)\r\n                            : [];\r\n\r\n                        const inPairs: IMagnetStreamData[] = val.direction === MagnetPairDirection.In\r\n                            ? [...asInPairs, { magneted: [fixGuid, magnetingGuid], type: val.type }]\r\n                            : [];\r\n\r\n                        const outPairs: IMagnetStreamData[] = val.direction === MagnetPairDirection.Out\r\n                            ? magnetedItems.filter(t => !t.magneted.includes(fixGuid))\r\n                            : [];\r\n\r\n                        mouseStreamContext.magneted.next([...inPairs, ...outPairs]);\r\n                    }\r\n                ),\r\n                takeUntil(mouseStreamContext.mouseStop)\r\n            )\r\n        )\r\n    );\r\n\r\n    const subscribtion = source$.subscribe(_ => { });\r\n\r\n\r\n    return () => {\r\n        subscribtion.unsubscribe();\r\n    }\r\n};\r\n\r\nconst getDeps = (mouseStreamContext: IContextMagnet & IObservablesMouse & IObservablesDrag): React.DependencyList => [mouseStreamContext];\r\n\r\nconst contextPlugin: ContextPlugin<IContextMagnet & IObservablesMouse & IObservablesDrag, IContextMagnet> = [\r\n    { ...contextPart },\r\n    (mouseContext) => [getReactEffect(mouseContext), getDeps(mouseContext)]\r\n];\r\n\r\nexport default contextPlugin;\r\n","import React, { useRef, useState, useContext, useEffect, useMemo } from 'react';\r\nimport {\r\n    SELECTING_FRAME_GUID,\r\n    GuidType,\r\n    Position,\r\n    BoxProps,\r\n    DragFrameProps,\r\n    ComponentWrapper,\r\n    ActiveLevels,\r\n    EventType,\r\n    TrappedType,\r\n    Nullable,\r\n    IObservablesMouse,\r\n    IObservablesDrag,\r\n    IObservableDeltaMoves,\r\n    IObservableControl\r\n} from '@designer-core/shared/types';\r\nimport { filter, tap, switchMap, takeUntil } from 'rxjs/operators';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { IContextLasso } from './context';\r\n\r\nconst getSelectableWrapComponent = <TProps extends BoxProps>(\r\n    SelectedFrameWrapper: ComponentWrapper<TProps, TProps & DragFrameProps>\r\n) =>\r\n    <TContext extends IContextLasso & IObservablesDrag & IObservablesMouse & IObservableDeltaMoves & IObservableControl>(\r\n        MouseStreamContext: React.Context<Nullable<TContext>>\r\n    ) =>\r\n\r\n        (Component: React.ComponentType<TProps>) => {\r\n\r\n            const SelectedFrameComponent = SelectedFrameWrapper(Component);\r\n\r\n            const ResultComponent = (props: React.PropsWithChildren<TProps & Partial<DragFrameProps>>) => {\r\n\r\n                const { activeLevel$, guid, xy$, position$, size$ } = props;\r\n\r\n                const activeLevelRef = useRef(activeLevel$.getValue());\r\n\r\n                const startXYRef = useRef([0, 0]) as React.MutableRefObject<Position>;\r\n                const [inLasso, setInLasso] = useState(false);\r\n                const inLassoRef = useRef(inLasso) as React.MutableRefObject<typeof inLasso>;\r\n                const groupDragRef = useRef(false) as React.MutableRefObject<boolean>;\r\n\r\n                const mouseContext = useContext(MouseStreamContext) as TContext;\r\n\r\n                //  clear group items in Lasso (moving non-group block)\r\n                useEffect(() => {\r\n                    const lassoStartSub = mouseContext.mouseDown.pipe(\r\n                        filter(({ elementId }) =>\r\n                            inLassoRef.current && (\r\n                                (elementId === SELECTING_FRAME_GUID || !mouseContext.group.getValue().includes(elementId))\r\n                                && mouseContext.group.getValue().includes(guid)\r\n                            )\r\n                        )\r\n                    ).subscribe(({ ev }) => {\r\n                        groupDragRef.current = false;\r\n                        mouseContext.dragStop.next({ elementId: guid, ev, type: EventType.StopDrag });\r\n                        mouseContext.group.next(mouseContext.group.getValue().filter(t => t !== guid));\r\n                        inLassoRef.current = false;\r\n\r\n                        activeLevel$.next(ActiveLevels.None);\r\n\r\n                        setInLasso(false);\r\n                    });\r\n                    return () => {\r\n                        lassoStartSub.unsubscribe();\r\n                    }\r\n                }, [guid, mouseContext, activeLevel$, inLassoRef, groupDragRef]);\r\n\r\n                //  clear drag status\r\n                useEffect(() => {\r\n                    const dragGroupStopSub = mouseContext.mouseStop.pipe(\r\n                        filter(_ => groupDragRef.current && inLassoRef.current && mouseContext.group.getValue().includes(guid)),\r\n                    ).subscribe(({ ev }) => {\r\n                        groupDragRef.current = false;\r\n                        mouseContext.dragStop.next({ elementId: guid, ev: ev, type: EventType.StopDrag });\r\n                    });\r\n                    return () => {\r\n                        dragGroupStopSub.unsubscribe();\r\n                    }\r\n                }, [guid, mouseContext, inLassoRef, groupDragRef]);\r\n\r\n                //  changing X-Y position (calculate new position for group)\r\n                useEffect(() => {\r\n                    const groupsSubscription = mouseContext.mouseDown.pipe(\r\n                        filter(({ elementId }) => inLassoRef.current && elementId !== SELECTING_FRAME_GUID && mouseContext.group.getValue().includes(elementId)),\r\n                        tap(_ => startXYRef.current = xy$.getValue()),\r\n                        tap(({ ev, elementId }) => {\r\n                            if (!groupDragRef.current) groupDragRef.current = true;\r\n                            // start drag stream for another items in group!\r\n                            guid !== elementId && mouseContext.dragStart.next({ elementId: guid, ev: ev, type: EventType.DragInGroup });\r\n                        }),\r\n                        switchMap(\r\n                            ({ elementId: startElementId }) => {\r\n                                return mouseContext.deltaMoves.pipe(\r\n                                    filter(([elementId, _]) => elementId === startElementId && elementId === guid),\r\n                                    takeUntil(mouseContext.dragStop.pipe(filter(({ elementId }) => elementId === guid)))\r\n                                )\r\n                            }\r\n                        )\r\n                    ).subscribe(([_elementId, position]) => {\r\n                        const [startX, startY] = startXYRef.current;\r\n                        xy$.next([startX + position[0], startY + position[1]]);\r\n                        mouseContext.group.getValue().forEach(tId => tId !== guid && mouseContext.deltaMoves.next([tId, position]));\r\n                    });\r\n                    return () => {\r\n                        groupsSubscription.unsubscribe();\r\n                    };\r\n                }, [guid, mouseContext, startXYRef, xy$, position$, activeLevel$, inLassoRef, groupDragRef]);\r\n\r\n\r\n                //  set inLasso flag (by intersection calculating)\r\n                useEffect(() => {\r\n                    const lassoSubscription = mouseContext.lasso.subscribe(({ end, start, trapped }) => {\r\n\r\n                        const positionStart = xy$.getValue();\r\n                        const currentSize = size$.getValue();\r\n\r\n                        const positionEnd = [positionStart[0] + currentSize[0], positionStart[1] + currentSize[1]];\r\n                        let inLasso = start[0] < positionStart[0] && end[0] > positionEnd[0];\r\n                        inLasso = inLasso && start[1] < positionStart[1] && end[1] > positionEnd[1];\r\n                        if (inLasso !== inLassoRef.current) {\r\n                            if (end[0] || end[1] || start[0] || start[1]) {\r\n                                inLasso && mouseContext.trapping.next([{ guid, trappedType: TrappedType.In }]);\r\n                                !inLasso && mouseContext.trapping.next([{ guid, trappedType: TrappedType.Out }]);\r\n                                inLassoRef.current = inLasso;\r\n\r\n\r\n                                let level = activeLevel$.getValue();\r\n\r\n                                if (inLasso) {\r\n                                    activeLevelRef.current = activeLevel$.getValue();\r\n\r\n                                    level = level === ActiveLevels.None ? ActiveLevels.InGroup : level;\r\n                                    level = level === ActiveLevels.Hover ? ActiveLevels.HoverInGroup : level;\r\n\r\n                                } else level = activeLevelRef.current;\r\n\r\n                                activeLevel$.next(level);\r\n\r\n                                setInLasso(inLasso);\r\n                            }\r\n                        }\r\n                    });\r\n                    return () => {\r\n                        lassoSubscription.unsubscribe();\r\n                    };\r\n                }, [guid, mouseContext, xy$, size$, activeLevel$, activeLevelRef, inLassoRef]);\r\n\r\n                const _classModifiers = props.classModifiers || [];\r\n                const classModifiers = inLasso ? [..._classModifiers, 'in-lasso-trapped'] : [..._classModifiers];\r\n\r\n                return <SelectedFrameComponent { ...props } classModifiers={ classModifiers }>\r\n                    { props.children }\r\n                </SelectedFrameComponent>;\r\n            };\r\n            return ResultComponent;\r\n        };\r\n\r\n\r\nexport const getSelectableLasso = <TContext extends IContextLasso & IObservablesDrag & IObservableDeltaMoves>(\r\n    MouseStreamContext: React.Context<Nullable<TContext>>\r\n) =>\r\n    <TProps extends BoxProps>(BlockWrapper: React.ComponentType<TProps>) => {\r\n\r\n        const ResultComponent = (props: React.PropsWithChildren<TProps>) => {\r\n\r\n            const { size$, position$, offsetPosition$ } = props;\r\n\r\n            const mouseContext = useContext(MouseStreamContext) as TContext;\r\n\r\n            const fixStartPositionRef = useRef([0, 0]) as React.MutableRefObject<Position>;\r\n            const trappedRef = useRef([]) as React.MutableRefObject<GuidType[]>;\r\n\r\n            const newSize$ = useMemo<BehaviorSubject<Position>>(() => new BehaviorSubject(size$.getValue()), [size$]);\r\n\r\n            const emptyPosition$ = useMemo<BehaviorSubject<Position>>(() => new BehaviorSubject([0, 0]), []);\r\n            const emptyXY$ = useMemo<BehaviorSubject<Position>>(() => new BehaviorSubject([0, 0]), []);\r\n\r\n            useEffect(() => {\r\n\r\n                console.log('%c init sub in Lasso ', 'background-color: yellow; color: red; border: 1px solid black;');\r\n\r\n                const lassoMoveSub = mouseContext.dragStart\r\n                    .pipe(\r\n                        filter(({ elementId }) => SELECTING_FRAME_GUID === elementId),\r\n                        tap(({ ev }) => {\r\n                            const [px, py] = offsetPosition$.getValue();\r\n                            console.log('offsetPosition$', [px, py]);\r\n                            fixStartPositionRef.current = [ev.clientX - px, ev.clientY - py];\r\n                            position$.next([ev.clientX - px, ev.clientY - py]);\r\n                        }),\r\n                        switchMap(_ => mouseContext.deltaMoves.pipe(\r\n                            takeUntil(mouseContext.dragStop.pipe(\r\n                                tap(_ => {\r\n                                    fixStartPositionRef.current = [0, 0];\r\n                                    position$.next([0, 0]);\r\n                                    newSize$.next([0, 0]);\r\n                                    mouseContext.lasso.next({ start: [0, 0], end: [0, 0], trapped: [] });\r\n                                })\r\n                            ))\r\n                        ))\r\n                    )\r\n                    .subscribe(([_, position]) => {\r\n                        const [rx, ry] = position;\r\n                        const [_startX, _startY] = fixStartPositionRef.current;\r\n                        let x = _startX, y = _startY;\r\n                        let sx = rx, sy = ry;\r\n                        if (rx < 0) { sx = -rx; x = _startX + rx; }\r\n                        if (ry < 0) { sy = -ry; y = _startY + ry; }\r\n\r\n                        if (rx < 0 || ry < 0) {\r\n                            position$.next([x, y]);\r\n                        }\r\n                        newSize$.next([sx, sy]);\r\n\r\n                        mouseContext.lasso.next({\r\n                            start: [x, y],\r\n                            end: [x + sx, y + sy],\r\n                            trapped: []\r\n                        });\r\n                    });\r\n\r\n                return () => {\r\n                    console.log('%c unsub in selectable lasso: handlers ', 'color: yellow; background-color: brown;');\r\n                    lassoMoveSub.unsubscribe();\r\n                };\r\n            }, [mouseContext, emptyXY$, newSize$, position$, offsetPosition$, fixStartPositionRef, trappedRef]);\r\n\r\n            return (\r\n                <BlockWrapper\r\n                    { ...props }\r\n                    size$={ newSize$ }\r\n                    xy$={ emptyXY$ }\r\n                    position$={ emptyPosition$ }\r\n                    classModifiers={ ['selectable'] }\r\n                    classBlocks={ ['block'] }\r\n                    classElements={ ['selecting-frame'] }\r\n                >\r\n                    { props.children }\r\n                </BlockWrapper>\r\n            );\r\n        };\r\n\r\n        return ResultComponent;\r\n    };\r\n\r\n\r\nexport default getSelectableWrapComponent;\r\n","import { BehaviorSubject } from 'rxjs';\r\nimport { Position } from './types';\r\n\r\nexport enum UIPrimitive {\r\n    Root = 'root',\r\n    CircleBlock = 'circle',\r\n    RectangleBlock = 'rectangle',\r\n    ConditionBlock = 'condition',\r\n    TimerBlock = 'timer'\r\n}\r\n\r\nexport interface IControlData {\r\n    guid: string;\r\n    id?: string | number;\r\n    position: [number, number];\r\n    size: [number, number];\r\n    style?: React.CSSProperties,\r\n    classType: string;\r\n    uiType: UIPrimitive;\r\n}\r\n\r\nexport interface IRenderer {\r\n    absoluteOffset: Position;\r\n}\r\n\r\nexport interface IState {\r\n    root$: BehaviorSubject<IControlData>;\r\n    controls$: BehaviorSubject<IControlData[]>;\r\n}\r\n","import React, { useContext, useEffect, useRef, useMemo, useCallback } from 'react';\r\nimport { filter } from 'rxjs/operators';\r\n\r\nimport {\r\n    GuidType,\r\n    Position,\r\n    MagnetCornerType,\r\n    BoxProps,\r\n    Nullable,\r\n    NearestFrame,\r\n    MagnetMarkerPosition,\r\n    IMagnetPair,\r\n    MagnetPairDirection,\r\n    IMagnetPairIn,\r\n    ComponentWrapper,\r\n    MagnetFrameProps,\r\n    MagnetCornerProps,\r\n    IObservablesDrag,\r\n    IObservableControl,\r\n} from '@designer-core/shared/types';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { IState, IControlData } from '@designer-core/shared/stateTypes';\r\nimport { MsgSelector, useStorage, MsgService } from '@designer-core/shared/helpers/storage';\r\nimport { IContextMagnet } from './context';\r\nimport { IContextResizer } from '../resizable';\r\n\r\nimport { nearestCalculation, getClosestEdgeDistanceReducer, EdgeType, getResultSize, MAP_EDGE_TYPE_TO_MAGNET, MAP_MAGNET_TYPE_TO_EDGE } from './nearestEdges';\r\n\r\nimport { Indents, GuidSizePosition, NearestResult, CornerData, ClosestData } from './types';\r\n\r\n\r\nconst DETAIL_MAGNET_TYPES: Array<[MagnetCornerType, number, MagnetCornerType]> = [\r\n    [MagnetCornerType.TopLeft, 1, MagnetCornerType.TopLeft_LeftBottom],\r\n    [MagnetCornerType.TopLeft, 2, MagnetCornerType.TopLeft_LeftTop],\r\n    [MagnetCornerType.TopLeft, 3, MagnetCornerType.TopLeft_TopLeft],\r\n    [MagnetCornerType.TopLeft, 4, MagnetCornerType.TopLeft_TopRight],\r\n\r\n    [MagnetCornerType.TopRight, 5, MagnetCornerType.TopRight_TopLeft],\r\n    [MagnetCornerType.TopRight, 6, MagnetCornerType.TopRight_TopRight],\r\n    [MagnetCornerType.TopRight, 7, MagnetCornerType.TopRight_RightTop],\r\n    [MagnetCornerType.TopRight, 8, MagnetCornerType.TopRight_RightBottom],\r\n\r\n    [MagnetCornerType.BottomRight, 9, MagnetCornerType.BottomRight_RightTop],\r\n    [MagnetCornerType.BottomRight, 10, MagnetCornerType.BottomRight_RightBottom],\r\n    [MagnetCornerType.BottomRight, 11, MagnetCornerType.BottomRight_BottomRight],\r\n    [MagnetCornerType.BottomRight, 12, MagnetCornerType.BottomRight_BottomLeft],\r\n\r\n    [MagnetCornerType.BottomLeft, 13, MagnetCornerType.BottomLeft_BottomRight],\r\n    [MagnetCornerType.BottomLeft, 14, MagnetCornerType.BottomLeft_BottomLeft],\r\n    [MagnetCornerType.BottomLeft, 15, MagnetCornerType.BottomLeft_LeftBottom],\r\n    [MagnetCornerType.BottomLeft, 16, MagnetCornerType.BottomLeft_LeftTop],\r\n];\r\n\r\nconst getDetailMagnetType = (magnetType: MagnetCornerType, direction: number): MagnetCornerType => {\r\n    const detail = DETAIL_MAGNET_TYPES.find(([_magnetType, _direction, _resultMagnetType]) => magnetType === _magnetType && direction === _direction);\r\n    return detail ? detail[2] : MagnetCornerType.None;\r\n};\r\n\r\n\r\n\r\nconst MagnetAllEdges = (CAPTURE_DELTA: number, [TOP_INDENT, RIGHT_INDENT, BOTTOM_INDENT, LEFT_INDENT]: Indents) => {\r\n\r\n    return (distance: number, current: GuidSizePosition, closestEdge: [number, EdgeType, GuidSizePosition, number]): NearestResult[] => {\r\n        const [x, y] = current.position;\r\n        const [sx, sy] = current.size;\r\n        const [edgeDistance, edgeType, itemGuidSizePos, minDistanceToAnotherEdge] = closestEdge;\r\n\r\n        const MIN_WIDTH = 50, MIN_HEIGHT = 50;\r\n\r\n        console.log('minDistanceToAnotherEdge', minDistanceToAnotherEdge, itemGuidSizePos.guid);\r\n\r\n        if (edgeDistance < CAPTURE_DELTA && minDistanceToAnotherEdge < CAPTURE_DELTA) {\r\n\r\n            let [resultSx, resultSy] = [sx, sy];\r\n\r\n            const { position: [itemX, itemY], size: [itemSx, itemSy] } = itemGuidSizePos;\r\n\r\n            const [dx, dy] = [itemX - x, itemY - y];\r\n\r\n            switch (edgeType) {\r\n                case EdgeType.LeftVertical:\r\n                    [resultSx, resultSy] = dx > MIN_WIDTH ? [dx, sy] : [sx, sy];\r\n                    break;\r\n                case EdgeType.RightVertical:\r\n                    [resultSx, resultSy] = dx + itemSx > MIN_WIDTH ? [dx + itemSx, sy] : [sx, sy];\r\n                    break;\r\n                case EdgeType.TopHorizontal:\r\n                    [resultSx, resultSy] = dy > MIN_HEIGHT ? [sx, dy] : [sx, sy];\r\n                    break;\r\n                case EdgeType.BottomHorizontal:\r\n                    [resultSx, resultSy] = dy + itemSy > MIN_HEIGHT ? [sx, dy + itemSy] : [sx, sy];\r\n                    break;\r\n                default:\r\n                    [resultSx, resultSy] = [sx, sy];\r\n            }\r\n\r\n            return [\r\n                [itemGuidSizePos.guid, [resultSx, resultSy], itemGuidSizePos.size, MAP_EDGE_TYPE_TO_MAGNET[edgeType] || MagnetCornerType.None]\r\n            ];\r\n        }\r\n\r\n        return [];\r\n    };\r\n};\r\n\r\n\r\nconst MagnetAllCorners = (CAPTURE_DELTA: number, [TOP_INDENT, RIGHT_INDENT, BOTTOM_INDENT, LEFT_INDENT]: Indents) =>\r\n    (distance: number, currentCorner: CornerData, closestCorner: CornerData, resultMagnetType: MagnetCornerType): NearestResult[] => {\r\n\r\n        const closestCornerType = closestCorner[0];\r\n\r\n        const [csx, csy] = currentCorner[1].size;\r\n        const currentCornerType = currentCorner[0];\r\n\r\n        const { guid, position: [x, y], size: [sx, sy] } = closestCorner[1];\r\n        const { position: [cx, cy] } = currentCorner[1];\r\n\r\n        if (distance > CAPTURE_DELTA) return [];\r\n        if (closestCornerType === currentCornerType) return [];\r\n\r\n        let result: NearestResult[] = [];\r\n\r\n        let leftRight = [MagnetCornerType.TopLeft, MagnetCornerType.BottomLeft].indexOf(closestCornerType) > -1 ? 1 : 0;\r\n        let topBottom = [MagnetCornerType.TopLeft, MagnetCornerType.TopRight].indexOf(closestCornerType) > -1 ? 1 : 0;\r\n\r\n        const leftRightPoint = x - leftRight * LEFT_INDENT + (1 - leftRight) * RIGHT_INDENT,\r\n            topBottomPoint = y - topBottom * TOP_INDENT + (1 - topBottom) * BOTTOM_INDENT;\r\n\r\n        let distLeftRightPoint = (leftRightPoint - cx) * (leftRightPoint - cx) + (y - cy) * (y - cy);\r\n        let distTopBottomPoint = (x - cx) * (x - cx) + (topBottomPoint - cy) * (topBottomPoint - cy);\r\n\r\n        // console.log('all-lefts/rights-->', Math.sqrt(distLeftRightPoint), distance, [leftRightPoint, y], [x, y]);\r\n        // console.log('all-tops/bottoms-->', Math.sqrt(distTopBottomPoint), distance, [x, topBottomPoint], [x, y]);\r\n\r\n        // let tempX = 0;\r\n        let tempY = 0;\r\n\r\n        let closeToLeftRight = 1;\r\n\r\n        if (distLeftRightPoint < distTopBottomPoint) {\r\n            // left/right-point\r\n            tempY = y;\r\n        } else {\r\n            // top/bottom-point\r\n            tempY = topBottomPoint;\r\n            closeToLeftRight = 0;\r\n        }\r\n\r\n        let resX = 0, resY = 0, magnetType = closestCornerType;\r\n        let magnetDirection = 0;\r\n\r\n        switch (currentCornerType) {\r\n            case MagnetCornerType.TopRight:\r\n                magnetDirection = topBottom ? 1 : 15;\r\n                magnetDirection = !topBottom && !closeToLeftRight ? (1 - leftRight) * 12 + leftRight * 14 : magnetDirection;\r\n                [resX, resY] = topBottom\r\n                    ? [leftRightPoint - leftRight * csx, y]\r\n                    : [closeToLeftRight * leftRightPoint + (1 - closeToLeftRight) * x - csx, tempY];\r\n                magnetType = getDetailMagnetType(closestCornerType, magnetDirection);\r\n                result = magnetType !== MagnetCornerType.None ? [\r\n                    [guid, [resX, resY], [sx, sy], magnetType]\r\n                ] : [];\r\n                break;\r\n\r\n            case MagnetCornerType.TopLeft:\r\n                magnetDirection = topBottom ? 8 : 10;\r\n                magnetDirection = !topBottom && !closeToLeftRight ? (1 - leftRight) * 11 + leftRight * 13 : magnetDirection;\r\n                [resX, resY] = [8, 10].indexOf(magnetDirection) > -1\r\n                    ? [leftRightPoint, y]\r\n                    : [x, topBottomPoint];\r\n                magnetType = getDetailMagnetType(closestCornerType, magnetDirection);\r\n                result = magnetType !== MagnetCornerType.None ? [\r\n                    [guid, [resX, resY], [sx, sy], magnetType]\r\n                ] : [];\r\n                break;\r\n\r\n\r\n            case MagnetCornerType.BottomRight:\r\n                magnetDirection = closeToLeftRight ? 16 * (1 - topBottom) + 2 * topBottom : 5 * (1 - leftRight) + 3 * leftRight;\r\n                [resX, resY] = closeToLeftRight\r\n                    ? [leftRightPoint - csx, y - csy]\r\n                    : [x - csx, topBottomPoint - csy];\r\n                magnetType = getDetailMagnetType(closestCornerType, magnetDirection);\r\n                result = magnetType !== MagnetCornerType.None ? [\r\n                    [guid, [resX, resY], [sx, sy], magnetType]\r\n                ] : [];\r\n                break;\r\n\r\n\r\n            case MagnetCornerType.BottomLeft:\r\n                magnetDirection = closeToLeftRight ? 9 * (1 - topBottom) + 7 * topBottom : 6 * (1 - leftRight) + 4 * leftRight;\r\n                [resX, resY] = closeToLeftRight\r\n                    ? [leftRightPoint, y - csy]\r\n                    : [x, topBottomPoint - csy];\r\n                magnetType = getDetailMagnetType(closestCornerType, magnetDirection);\r\n                result = magnetType !== MagnetCornerType.None ? [\r\n                    [guid, [resX, resY], [sx, sy], magnetType]\r\n                ] : [];\r\n                break;\r\n\r\n\r\n            default:\r\n        }\r\n\r\n        return [...result];\r\n    };\r\n\r\n\r\n\r\nconst getClosestEdges = (CAPTURE_DELTA: number, [TOP_INDENT, RIGHT_INDENT, BOTTOM_INDENT, LEFT_INDENT]: Indents) =>\r\n    (currentPoints: Array<Position>, otherItems: GuidSizePosition[]): Array<[number, EdgeType, GuidSizePosition | null, number]> => {\r\n        const reducerFn = getClosestEdgeDistanceReducer(CAPTURE_DELTA, [currentPoints[0], currentPoints[1], currentPoints[2], currentPoints[3]]);\r\n        const res = otherItems.reduce(\r\n            (_memo, el, index): Array<[number, EdgeType, GuidSizePosition | null, number]> => {\r\n                const data = reducerFn(_memo, el);\r\n                // const  [distance, edgeTpye, minDistToAnotherEdge, status] = reducerFn(_memo, el);\r\n                const res = data.map(\r\n                    ([distance, edgeTpye, minDistToAnotherEdge]) =>\r\n                        [distance, edgeTpye, el, minDistToAnotherEdge] as [number, EdgeType, GuidSizePosition | null, number]\r\n                );\r\n                return data.length ? [..._memo, ...res] : _memo;\r\n                // return status ? [..._memo, [distance, edgeTpye, el, minDistToAnotherEdge]] : _memo;\r\n            },\r\n            [] as Array<[number, EdgeType, GuidSizePosition | null, number]>\r\n        );\r\n        return res; //[-1, null, null, MagnetCornerType.None];\r\n    };\r\n\r\nconst getClosestPointDistance = (currentPoints: Array<Position | null>, current: GuidSizePosition, item: GuidSizePosition): ClosestData => {\r\n    const { position: [x, y], size: [sx, sy] } = item;\r\n    // const { position: [cx, cy], size: [scx, scy] } = current;\r\n    const corners: [Position, Position, Position, Position] = [\r\n        [x, y], [x + sx, y],\r\n        [x + sx, y + sy], [x, y + sy],\r\n    ];\r\n    // const currentPoints: [Position, Position, Position, Position] = [\r\n    //     [cx, cy], [cx + scx, cy],\r\n    //     [cx + scx, cy + scy], [cx, cy + scy],\r\n    // ];\r\n    const [_distance, _currentCorner, _closestCorner, _cornerSubType] = corners.reduce<ClosestData>(\r\n        (memo, [px, py], i) => {\r\n\r\n            let cornerType = [MagnetCornerType.TopLeft, MagnetCornerType.TopRight, MagnetCornerType.BottomRight, MagnetCornerType.BottomLeft][i];\r\n\r\n            const [distance, position, currentCornerType] =\r\n                currentPoints.reduce<[number, Position, MagnetCornerType]>(\r\n                    (currMemo, crn, j) => {\r\n                        const [cpx, cpy] = crn || [0, 0];\r\n                        const [dx, dy] = [px - cpx, py - cpy];\r\n                        const ndist = dx * dx + dy * dy;\r\n                        let currentCornerType = [MagnetCornerType.TopLeft, MagnetCornerType.TopRight, MagnetCornerType.BottomRight, MagnetCornerType.BottomLeft][j];\r\n                        return crn && (currMemo[0] > ndist || currMemo[0] < 0) ? [ndist, [cpx, cpy], currentCornerType] : currMemo;\r\n                    },\r\n                    [-1, [0, 0] as Position, MagnetCornerType.None]\r\n\r\n                );\r\n            const closestCorner: CornerData = [cornerType, { ...item, position: [px, py] }];\r\n            const currentCorner: CornerData = [currentCornerType, { ...current, position: [position[0], position[1]] }];\r\n            return memo[0] > distance || memo[0] < 0 ? [distance, { ...currentCorner }, { ...closestCorner }, cornerType] : memo;\r\n        },\r\n        [-1, null, null, MagnetCornerType.None]\r\n    );\r\n\r\n    return [Math.round(Math.sqrt(_distance)), _currentCorner, _closestCorner, _cornerSubType];\r\n};\r\n\r\nconst COMPOSE_CORNER_TYPES: { [id: string]: { [sid: string]: MagnetCornerType } } = {\r\n\r\n    [MagnetCornerType.TopLeft]: {\r\n        [MagnetCornerType.TopLeft]: MagnetCornerType.None,\r\n        [MagnetCornerType.TopRight]: MagnetCornerType.LeftTop,\r\n        [MagnetCornerType.BottomRight]: MagnetCornerType.TopLeft,\r\n        [MagnetCornerType.BottomLeft]: MagnetCornerType.TopLeft,\r\n        // [MagnetCornerType.BottomRight]: MagnetCornerType.TopLeft,    1st corner - TOp-LEFT, 2d - BOTTOM-LEFT  => NEWTYPE [TOP-LEFT-LEFT]\r\n    },\r\n    [MagnetCornerType.TopRight]: {\r\n        [MagnetCornerType.TopLeft]: MagnetCornerType.RightTop,\r\n        [MagnetCornerType.TopRight]: MagnetCornerType.None,\r\n        [MagnetCornerType.BottomRight]: MagnetCornerType.TopRight,\r\n        [MagnetCornerType.BottomLeft]: MagnetCornerType.RightTop,\r\n    },\r\n    [MagnetCornerType.BottomLeft]: {\r\n        [MagnetCornerType.TopLeft]: MagnetCornerType.BottomLeft,\r\n        [MagnetCornerType.TopRight]: MagnetCornerType.LeftBottom,\r\n        [MagnetCornerType.BottomRight]: MagnetCornerType.LeftBottom,\r\n        [MagnetCornerType.BottomLeft]: MagnetCornerType.None,\r\n    },\r\n    [MagnetCornerType.BottomRight]: {\r\n        [MagnetCornerType.TopLeft]: MagnetCornerType.RightBottom,\r\n        [MagnetCornerType.TopRight]: MagnetCornerType.BottomRight,\r\n        [MagnetCornerType.BottomRight]: MagnetCornerType.None,\r\n        [MagnetCornerType.BottomLeft]: MagnetCornerType.RightBottom,\r\n    },\r\n};\r\n\r\n\r\nconst getClosestItem = (currentGuid: GuidType, currentPoints: Array<Position | null>, current: GuidSizePosition, items: GuidSizePosition[]): ClosestData => {\r\n    return items\r\n        .filter(({ guid }) => guid !== currentGuid)\r\n        .reduce<ClosestData>(\r\n            (memo, item) => {\r\n                const [distance, currentCorner, closestCorner, cornerType] = getClosestPointDistance(currentPoints, current, item);\r\n                const currentCornerType = currentCorner ? currentCorner[0] : MagnetCornerType.None;\r\n                let resMagnetType = COMPOSE_CORNER_TYPES[cornerType] && COMPOSE_CORNER_TYPES[cornerType][currentCornerType];\r\n                return memo[0] > distance || memo[0] < 0 ? [distance, currentCorner, closestCorner, resMagnetType || MagnetCornerType.None] : memo;\r\n            },\r\n            [-1, null, null, MagnetCornerType.None]\r\n        );\r\n};\r\n\r\n\r\nconst getMagnetWrapComponent = <TProps extends BoxProps>(\r\n    MagnetWrapper: ComponentWrapper<TProps, TProps & MagnetFrameProps & MagnetCornerProps>,\r\n    { CAPTURE_DELTA, Indents }: { CAPTURE_DELTA: number, Indents: Indents }\r\n) => <TContext extends IContextMagnet & IObservablesDrag & IObservableControl & IContextResizer>(\r\n    MouseStreamContext: React.Context<Nullable<TContext>>\r\n) =>\r\n\r\n        (Component: React.ComponentType<TProps>, services: MsgService<IState, any>[], selectors: MsgSelector<IState, any, any>[]) => {\r\n\r\n            const MagnetBlock = MagnetWrapper(Component);\r\n\r\n            const ResultComponent = (props: React.PropsWithChildren<TProps>) => {\r\n\r\n                const { guid, xy$, size$ } = props;\r\n\r\n                const storage = useStorage(`magnetable: ${guid}`, services, selectors);\r\n\r\n                const markerRef = useRef<Nullable<[Position, MagnetCornerType]>>(null);\r\n\r\n                const sizeMarker$ = useMemo(() => new BehaviorSubject<[NearestResult | null, NearestResult | null]>([null, null]), []);\r\n\r\n                const mouseContext = useContext(MouseStreamContext) as TContext;\r\n\r\n                const markerPosition$ = useMemo<BehaviorSubject<Nullable<MagnetMarkerPosition>>>(\r\n                    () => new BehaviorSubject<Nullable<MagnetMarkerPosition>>(null), []\r\n                );\r\n\r\n                const nearestFrame$ = useMemo<BehaviorSubject<Nullable<NearestFrame>>>(\r\n                    () => new BehaviorSubject<Nullable<NearestFrame>>(null), []\r\n                );\r\n\r\n\r\n                // init clear nearestFrame (corner and edge markers) by stopping\r\n                useEffect(() => {\r\n\r\n                    console.log('%c storage--> init_magnetable 1: ', 'color: green; background-color: yellow;', guid);\r\n\r\n                    const magnetOutDrag = mouseContext.dragStop.pipe(\r\n                        filter(({ elementId }) => elementId !== guid)\r\n                    ).subscribe(({ elementId }) => {\r\n                        const nearestFrame = nearestFrame$.getValue();\r\n                        if (nearestFrame && nearestFrame.magneted === elementId) {\r\n                            nearestFrame$.next(null);\r\n                        }\r\n                    });\r\n\r\n                    const magnetOutResize = mouseContext.resizeStop.pipe(\r\n                        filter(({ elementId }) => elementId !== guid)\r\n                    ).subscribe(({ elementId }) => {\r\n                        const nearestFrame = nearestFrame$.getValue();\r\n                        if (nearestFrame && nearestFrame.magneted === elementId) {\r\n                            nearestFrame$.next(null);\r\n                        }\r\n                    });\r\n\r\n                    return () => {\r\n                        magnetOutDrag.unsubscribe();\r\n                        magnetOutResize.unsubscribe();\r\n                    }\r\n                }, [guid, mouseContext, nearestFrame$]);\r\n\r\n                // magnet to Current (we need to show magnet frame border)\r\n                useEffect(() => {\r\n\r\n                    console.log('%c storage--> init_magnetable 2: ', 'color: green; background-color: yellow;', guid);\r\n\r\n                    const magnetInSubscription = mouseContext.magneting.pipe(\r\n                        filter(\r\n                            (data: IMagnetPair) => {\r\n                                const isIn = data.direction === MagnetPairDirection.In;\r\n                                return isIn && guid === data.items[0];\r\n                            }\r\n                        )\r\n                    ).subscribe((data: IMagnetPair) => {\r\n                        const type = (data as IMagnetPairIn).type;\r\n                        const items = (data as IMagnetPairIn).items;\r\n                        const xy = xy$.getValue();\r\n                        const sxy = size$.getValue();\r\n                        const nearestFrame: NearestFrame = {\r\n                            frame: [[xy[0], xy[1]], [sxy[0], sxy[1]]],\r\n                            magnetType: type,\r\n                            magneted: items[1],\r\n                            fix: guid\r\n                        };\r\n                        nearestFrame$.next({ ...nearestFrame });\r\n                    });\r\n\r\n                    return () => {\r\n                        magnetInSubscription.unsubscribe();\r\n                    }\r\n\r\n                }, [guid, mouseContext, xy$, size$, nearestFrame$]);\r\n\r\n\r\n                const dragForNearests = useCallback((nearestYes, nearestNo, currentPoints: Array<Position | null>) => {\r\n\r\n                    let [currx, curry] = xy$.getValue();\r\n                    let [currSx, currSy] = size$.getValue()\r\n\r\n                    const startGuidSizePosition: GuidSizePosition = { guid, position: [currx, curry], size: [currSx, currSy] };\r\n\r\n                    const controls = storage.get<string, IControlData[]>('controls') as IControlData[];\r\n                    const _items = controls\r\n                        .filter(t => t.guid !== guid)\r\n                        .map(({ guid: _guid, position, size }) => ({ guid: _guid, position, size }));\r\n\r\n\r\n                    const nearest: NearestResult[] = [];\r\n\r\n                    const [distance, currentCorner, closestCorner, resultMagnetType] = getClosestItem(guid, currentPoints, startGuidSizePosition, _items);\r\n                    if (currentCorner && closestCorner) {\r\n                        nearest.push(\r\n                            ...MagnetAllCorners(CAPTURE_DELTA, Indents)(distance, currentCorner, closestCorner, resultMagnetType)\r\n                        );\r\n                    }\r\n\r\n                    if (!nearest.length && !!markerRef.current) {\r\n                        mouseContext.magneting.next({ direction: MagnetPairDirection.Out, items: [guid] });\r\n                        nearestNo();\r\n                    }\r\n\r\n                    nearestYes(nearest);\r\n\r\n                }, [guid, mouseContext, size$, xy$, storage]);\r\n\r\n\r\n                const nearestEdgesByResizing = useCallback((nearestYes: any, nearestNo: any, currentPoints: Array<Position>) => {\r\n\r\n                    let [currx, curry] = xy$.getValue();\r\n                    let [currSx, currSy] = size$.getValue()\r\n\r\n                    const startGuidSizePosition: GuidSizePosition = { guid, position: [currx, curry], size: [currSx, currSy] };\r\n\r\n                    const controls = storage.get<string, IControlData[]>('controls') as IControlData[];\r\n                    const _items = controls\r\n                        .filter(t => t.guid !== guid)\r\n                        .map(({ guid: _guid, position, size }) => ({ guid: _guid, position, size }));\r\n\r\n\r\n                    const closestEdges = getClosestEdges(\r\n                        CAPTURE_DELTA, Indents\r\n                    )(currentPoints, _items);\r\n\r\n                    const magnetingEdges = MagnetAllEdges(CAPTURE_DELTA, Indents);\r\n\r\n                    return nearestCalculation(closestEdges, magnetingEdges)(guid, mouseContext, startGuidSizePosition)(nearestYes, nearestNo);\r\n\r\n                }, [guid, mouseContext, storage, xy$, size$]);\r\n\r\n                useEffect(() => {\r\n\r\n                    console.log('%c \\nstart subs nearest >\\n', 'background-color: #111; color: white; border: 1px solid orange;');\r\n\r\n                    const magnetSubscription = mouseContext.magneting.pipe(\r\n                        filter(\r\n                            (data: IMagnetPair) => {\r\n                                const isOut = data.direction === MagnetPairDirection.Out;\r\n                                const magneted = mouseContext.magneted.getValue();\r\n                                const isCurrentOut = isOut && !!magneted.filter(t => t.magneted.includes(guid)).length;\r\n                                isOut && console.log('%c outing-item --->', 'color: yellow; background-color: black; border: orange;', isCurrentOut, guid, magneted, data);\r\n                                return isCurrentOut;\r\n                            }\r\n                        )\r\n                    ).subscribe((data: IMagnetPair) => {\r\n                        console.log('---\\n\\n outing-item MAGNETING_SUB->', data, guid, nearestFrame$.getValue(), markerPosition$.getValue());\r\n                        markerRef.current = null;\r\n                        nearestFrame$.next(null);\r\n                        markerPosition$.next(null);\r\n                    });\r\n\r\n\r\n\r\n                    const dragStopSubscription = mouseContext.dragStop.pipe(\r\n                        filter(({ elementId }) => elementId === guid)\r\n                    ).subscribe(_ => {\r\n                        console.log('stop listening ->', guid, markerRef.current, mouseContext.group.getValue());\r\n                        if (markerRef.current) {\r\n                            const [[markerX, markerY]] = markerRef.current;\r\n                            markerRef.current = null;\r\n                            nearestFrame$.next(null);\r\n\r\n                            // mouseContext.group.getValue().forEach((id) => id === guid && storage.send('position', [id, [markerX, markerY]]));\r\n                            storage.send('position', [guid, [markerX, markerY]]);\r\n\r\n                            markerPosition$.next([[markerX, markerY], 1]);\r\n                        }\r\n                    });\r\n\r\n                    const dragStartSubscription = mouseContext.dragStart.pipe(\r\n                        filter(({ elementId }) => elementId === guid)\r\n                    ).subscribe(_ => {\r\n                        // we have to OUT all of chained items (not just first and second)\r\n                        // may be we should clear all magneted items because of new MOVING!\r\n                        mouseContext.magnetingStart.next(guid);\r\n                        mouseContext.magneting.next({ direction: MagnetPairDirection.Out, items: [guid] });\r\n                    });\r\n\r\n\r\n                    const dragSubscription = mouseContext.drag.pipe(\r\n                        filter(\r\n                            ({ elementId }) =>\r\n                                elementId === guid\r\n                                && mouseContext.group.getValue().findIndex(tGuid => tGuid === elementId) < 0\r\n                        )\r\n                    ).subscribe(_ => {\r\n\r\n\r\n                        let [currx, curry] = xy$.getValue();\r\n                        let [currSx, currSy] = size$.getValue();\r\n\r\n                        const currentPoints: Position[] = [\r\n                            [currx, curry], [currx + currSx, curry],\r\n                            [currx + currSx, curry + currSy], [currx, curry + currSy],\r\n                        ];\r\n\r\n                        dragForNearests(\r\n                            // nearest is here!\r\n                            (nearest: NearestResult[]) => {\r\n                                nearest.forEach(([nearestGuid, magnetPosition, _nearSize, magnetType]) => {\r\n\r\n                                    if (!markerRef.current || markerRef.current[1] !== magnetType) {\r\n\r\n                                        // clear previous \r\n                                        !!mouseContext.magneted.getValue().length\r\n                                            && mouseContext.magneting.next({ direction: MagnetPairDirection.Out, items: [guid] });\r\n\r\n                                        mouseContext.magneting.next({ direction: MagnetPairDirection.In, items: [nearestGuid, guid], type: magnetType });\r\n                                        markerRef.current = [[magnetPosition[0], magnetPosition[1]], magnetType];\r\n                                        markerPosition$.next([[magnetPosition[0], magnetPosition[1]], 0]);\r\n                                    }\r\n                                });\r\n                            },\r\n                            // nearest is out here!\r\n                            () => {\r\n                                markerRef.current = null;\r\n                                nearestFrame$.next(null);\r\n                                markerPosition$.next(null);\r\n                            },\r\n                            currentPoints\r\n                        );\r\n                    });\r\n\r\n\r\n                    const resizeStartSubscription = mouseContext.resizeStart.pipe(\r\n                        filter(({ elementId }) => elementId === guid)\r\n                    ).subscribe(_ => {\r\n                        mouseContext.magnetingStart.next(guid);\r\n                        mouseContext.magneting.next({ direction: MagnetPairDirection.Out, items: [guid] });\r\n                    });\r\n\r\n                    const resizeStopSubscription = mouseContext.resizeStop.pipe(\r\n                        filter(({ elementId }) => elementId === guid)\r\n                    ).subscribe(_ => {\r\n\r\n                        const [nearestVertical, nearestHorizontal] = sizeMarker$.getValue();\r\n\r\n                        console.log('resizing stop! ->', guid, nearestVertical, nearestHorizontal);\r\n\r\n                        if (nearestVertical || nearestHorizontal) {\r\n\r\n                            const currSize = size$.getValue();\r\n\r\n                            const resItems: [EdgeType, Position][] = [nearestVertical, nearestHorizontal].map((nearest) => {\r\n                                return nearest\r\n                                    ? [MAP_MAGNET_TYPE_TO_EDGE[nearest[3]] || EdgeType.None, nearest[1]]\r\n                                    : [EdgeType.None, [-1, -1]];\r\n                            });\r\n\r\n                            const [calcSx, calcSy] = getResultSize(resItems);\r\n\r\n                            const resSx = calcSx > -1 ? calcSx : currSize[0];\r\n                            const resSy = calcSy > -1 ? calcSy : currSize[1];\r\n\r\n                            size$.next([resSx, resSy]);\r\n                            storage.send('size', [guid, [resSx, resSy]]);\r\n\r\n                            sizeMarker$.next([null, null]);\r\n                            nearestFrame$.next(null);\r\n                            markerPosition$.next(null);\r\n                        }\r\n                    });\r\n\r\n                    const resizeSubscription = mouseContext.resize.pipe(\r\n                        filter(([elementId]) => elementId === guid)\r\n                    ).subscribe(([_elementId]) => {\r\n\r\n                        let [currx, curry] = xy$.getValue();\r\n                        let [currSx, currSy] = size$.getValue();\r\n\r\n                        const currentPoints: Array<Position> = [\r\n                            [currx, curry],\r\n                            [currx + currSx, curry],\r\n                            [currx + currSx, curry + currSy],\r\n                            [currx, curry + currSy],\r\n                        ];\r\n\r\n                        // TODO: refqctor to BehaviorSubject usage!\r\n                        nearestEdgesByResizing(\r\n                            // nearest is here!\r\n                            (nearest: [NearestResult[], NearestResult[]]) => {\r\n                                const [prevVertical, prevHorizontal] = sizeMarker$.getValue();\r\n\r\n                                const [nearestVertical, nearestHorizontal] = nearest;\r\n                                let resultVert = prevVertical, resultHor = prevHorizontal;\r\n\r\n                                let newVertHoriz = 0;   // 0 - no updates, 1 - only vert  2 - vert & hor  3 - only hor\r\n\r\n                                // isNewVert - compare previous vertical edge with new nearest vertical edge\r\n                                const isNewVert = prevVertical\r\n                                    && !!nearestVertical.filter(\r\n                                        ([itemGuid, _size, _pos, type]) =>\r\n                                            (itemGuid === prevVertical[0] && type !== prevVertical[3]) || itemGuid !== prevVertical[0]\r\n                                    ).length;\r\n\r\n                                isNewVert && console.log('isNewVert', isNewVert, [prevVertical, prevHorizontal], [nearestVertical && nearestVertical[0], nearestHorizontal && nearestHorizontal[0]]);\r\n\r\n                                // check: new edge (nearest exist, prev - not) exiting edge (prev edge is exist, nearest - not) changed edge (isNewVert)\r\n                                if ((prevVertical && !nearestVertical.length) || (!prevVertical && nearestVertical.length) || isNewVert) {\r\n                                    newVertHoriz = 1;\r\n                                    resultVert = nearestVertical[0];\r\n                                }\r\n\r\n                                const isNewHor = prevHorizontal\r\n                                    && !!nearestHorizontal.filter(\r\n                                        ([itemGuid, _size, _pos, type]) =>\r\n                                            (itemGuid === prevHorizontal[0] && type !== prevHorizontal[3]) || itemGuid !== prevHorizontal[0]\r\n                                    ).length;\r\n\r\n                                if ((prevHorizontal && !nearestHorizontal.length) || (!prevHorizontal && nearestHorizontal.length) || isNewHor) {\r\n                                    newVertHoriz = 3 - newVertHoriz;\r\n                                    resultHor = nearestHorizontal[0];\r\n                                }\r\n\r\n                                if (newVertHoriz) {\r\n\r\n                                    sizeMarker$.next([resultVert || null, resultHor || null]);\r\n\r\n                                    if (resultVert || resultHor) {\r\n\r\n                                        if (prevVertical || prevHorizontal) {\r\n                                            mouseContext.magneting.next({ direction: MagnetPairDirection.Out, items: [guid] });\r\n                                        }\r\n\r\n                                        const resItems = [resultVert, resultHor].filter(t => !!t) as NearestResult[];\r\n                                        let nearestGuids: [GuidType, MagnetCornerType][] = resItems.reduce<[GuidType, MagnetCornerType][]>(\r\n                                            (memo, [_guid, _s, _p, _type]) => {\r\n                                                const isExist = memo.findIndex(([_mg, _mtype]) => _mg === _guid && _mtype === _type) > -1;\r\n                                                return !isExist ? [...memo, [_guid, _type]] : [...memo];\r\n                                            },\r\n                                            []\r\n                                        );\r\n\r\n                                        nearestGuids.forEach(\r\n                                            ([nearestGuid, magnetType]) =>\r\n                                                mouseContext.magneting.next({ direction: MagnetPairDirection.In, items: [nearestGuid, guid], type: magnetType })\r\n                                        );\r\n\r\n                                        markerPosition$.next([[-1, -1], 0]);\r\n\r\n                                    }\r\n\r\n                                }\r\n\r\n                            },\r\n                            // nearest is out here! (for every sizing step changing)\r\n                            () => {\r\n\r\n                                const [vert, horiz] = sizeMarker$.getValue();\r\n\r\n                                if (vert || horiz) {\r\n\r\n                                    const uniueOutingGuids = vert ? [vert[0]] : [];\r\n                                    horiz && !uniueOutingGuids.filter(t => t && t[0] === horiz[0]).length && uniueOutingGuids.push(horiz[0]);\r\n                                    uniueOutingGuids.forEach(_g => mouseContext.magneting.next({ direction: MagnetPairDirection.Out, items: [_g] }));\r\n\r\n                                    markerRef.current = null;\r\n                                    nearestFrame$.next(null);\r\n                                    sizeMarker$.next([null, null]);\r\n                                    markerPosition$.next(null);\r\n                                }\r\n                            },\r\n                            currentPoints\r\n                        );\r\n\r\n\r\n                    });\r\n\r\n                    return () => {\r\n                        magnetSubscription.unsubscribe();\r\n\r\n                        dragSubscription.unsubscribe();\r\n                        dragStartSubscription.unsubscribe();\r\n                        dragStopSubscription.unsubscribe();\r\n\r\n                        resizeSubscription.unsubscribe();\r\n                        resizeStartSubscription.unsubscribe();\r\n                        resizeStopSubscription.unsubscribe();\r\n\r\n                    };\r\n\r\n                }, [guid, mouseContext, storage, xy$, size$, markerPosition$, nearestFrame$, markerRef, sizeMarker$, nearestEdgesByResizing, dragForNearests]);\r\n\r\n                return (\r\n                    <MagnetBlock\r\n                        { ...props }\r\n                        markerPosition$={ markerPosition$ }\r\n                        nearestFrame$={ nearestFrame$ }\r\n                    >\r\n                        { props.children }\r\n                    </MagnetBlock>\r\n                );\r\n            };\r\n\r\n            return ResultComponent;\r\n        };\r\n\r\nexport default getMagnetWrapComponent;\r\n","import context, { IContextMagnet as IContext } from './context';\r\nimport Magnetable from './Magnetable';\r\nimport FrameWrapper, { CAPTURE_DELTA, Indents } from './MagnetFrameWrapper';\r\nimport { NearestResult as Nearest } from './types';\r\n\r\nexport type IContextMagnet = IContext;\r\nexport type NearestResult = Nearest;\r\n\r\nexport { context };\r\n\r\nexport default Magnetable(FrameWrapper, { CAPTURE_DELTA, Indents });\r\n","import React, { useEffect, useState } from 'react';\r\nimport { BoxProps, MagnetFrameProps, MagnetCornerProps, MagnetCornerType } from '@designer-core/shared/types';\r\n\r\nimport MagnetFrameBlock from '@designer-core/shared/blocks/MagnetFrame';\r\n\r\nimport MagnetCornerFrameBlock from '@designer-core/shared/blocks/MagnetCornerFrame';\r\nimport { useSubscribedState } from '@designer-core/shared/helpers/storage';\r\n\r\nconst [TOP_INDENT, RIGHT_INDENT, BOTTOM_INDENT, LEFT_INDENT] = [30, 50, 30, 50];\r\n\r\nexport const CAPTURE_DELTA = 80;\r\nexport const Indents: [number, number, number, number] = [TOP_INDENT, RIGHT_INDENT, BOTTOM_INDENT, LEFT_INDENT];\r\n\r\nconst MagnetWrapper = <TProps extends BoxProps>(Component: React.ComponentType<TProps>) => {\r\n    const ResultBlock = (props: React.PropsWithChildren<MagnetFrameProps & MagnetCornerProps & TProps>) => {\r\n\r\n        const { guid, position$, xy$, markerPosition$, size$, nearestFrame$ } = props;\r\n\r\n        const [markerValue, setMarkerValue] = useState(markerPosition$.getValue());\r\n\r\n        const [size] = useSubscribedState(size$);\r\n        const [nearestFrame] = useSubscribedState(nearestFrame$);\r\n\r\n        useEffect(() => {\r\n            const markerSub = markerPosition$.subscribe(data => {\r\n                if (data && data[1] === 1) {\r\n                    xy$.next([data[0][0], data[0][1]])\r\n                }\r\n                setMarkerValue(data);\r\n            });\r\n            return () => markerSub.unsubscribe();\r\n        }, [guid, markerPosition$, xy$, position$]);\r\n\r\n\r\n        const edges = [MagnetCornerType.Left_Vertical, MagnetCornerType.Right_Vertical, MagnetCornerType.Top_Horizontal, MagnetCornerType.Bottom_Horizontal];\r\n        const isCorner = nearestFrame && edges.indexOf(nearestFrame.magnetType) < 0;\r\n        const isEdge = nearestFrame && edges.indexOf(nearestFrame.magnetType) > -1;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <MagnetFrameBlock size={ [size[0], size[1]] } markerPosition={ markerValue } />\r\n                {\r\n                    isEdge && <MagnetCornerFrameBlock\r\n                        type={ nearestFrame ? nearestFrame.magnetType : null }\r\n                        offset={ 0 }\r\n                        indent={ [TOP_INDENT, RIGHT_INDENT, BOTTOM_INDENT, LEFT_INDENT] } />\r\n                }\r\n                {\r\n                    isEdge && <MagnetCornerFrameBlock\r\n                        type={ nearestFrame ? nearestFrame.magnetType : null }\r\n                        offset={ 1 }\r\n                        indent={ [TOP_INDENT, RIGHT_INDENT, BOTTOM_INDENT, LEFT_INDENT] } />\r\n                }\r\n                {\r\n                    isCorner && <MagnetCornerFrameBlock\r\n                        type={ nearestFrame ? nearestFrame.magnetType : null }\r\n                        indent={ [TOP_INDENT, RIGHT_INDENT, BOTTOM_INDENT, LEFT_INDENT] } />\r\n                }\r\n                <Component { ...props }>\r\n                    { props.children }\r\n                </Component>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n    return ResultBlock;\r\n}\r\n\r\nexport default MagnetWrapper;\r\n","import {\r\n    IStreamData,\r\n    GuidType,\r\n    ContextPlugin,\r\n    IObservablesMouse,\r\n    IObservableControl,\r\n    EventType,\r\n    Position\r\n} from '@designer-core/shared/types';\r\nimport { Subject, combineLatest, BehaviorSubject } from 'rxjs';\r\nimport { tap, switchMap, takeUntil } from 'rxjs/operators';\r\n\r\nexport interface IContextResizer {\r\n    resizeStart: Subject<IStreamData>;\r\n    resizeStop: Subject<IStreamData>;\r\n    resize: Subject<[GuidType, Position]>;\r\n}\r\n\r\nconst contextPart: IContextResizer = {\r\n    resize: new Subject(),\r\n    resizeStart: new Subject(),\r\n    resizeStop: new Subject()\r\n};\r\n\r\nconst getReactEffect = (mouseStreamContext: IContextResizer & IObservablesMouse & IObservableControl): React.EffectCallback => () => {\r\n\r\n    const source$ = mouseStreamContext.resizeStart.pipe(\r\n        tap(({ elementId }) => console.log('start resize!', elementId)),\r\n        tap(({ elementId }) => mouseStreamContext.control.next(elementId)),\r\n        switchMap(\r\n            data => combineLatest(\r\n                new BehaviorSubject(data),\r\n                mouseStreamContext.mouseMove\r\n            ).pipe(\r\n                takeUntil(mouseStreamContext.mouseStop.pipe(\r\n                    tap(({ ev }) => {\r\n                        const elementId = mouseStreamContext.control.getValue();\r\n                        mouseStreamContext.resizeStop.next({ elementId, ev, type: EventType.StopResize });\r\n                        mouseStreamContext.control.next(null);\r\n                    })\r\n                ))\r\n            )\r\n        )\r\n    )\r\n\r\n    const subscription = source$.subscribe(([resizeStart, move]) => {\r\n        const [startX, startY]: Position = [resizeStart.ev.clientX, resizeStart.ev.clientY];\r\n        mouseStreamContext.resize.next([resizeStart.elementId, [move.ev.clientX - startX, move.ev.clientY - startY]]);\r\n    });\r\n\r\n    return () => {\r\n        subscription.unsubscribe();\r\n    }\r\n};\r\n\r\nconst getDeps = (mouseStreamContext: IContextResizer & IObservablesMouse & IObservableControl): React.DependencyList => [mouseStreamContext];\r\n\r\nconst contextPlugin: ContextPlugin<IContextResizer & IObservablesMouse & IObservableControl, IContextResizer> = [\r\n    { ...contextPart },\r\n    (mouseContext) => [getReactEffect(mouseContext), getDeps(mouseContext)]\r\n];\r\n\r\nexport default contextPlugin;\r\n","import context, { IContextResizer as IContext } from './context';\r\nimport Resizable from './Resizable';\r\nimport FrameWrapper from './ResizeFrameWrapper';\r\n\r\nexport type IContextResizer = IContext;\r\n\r\nexport { context };\r\n\r\nexport default Resizable(FrameWrapper);\r\n","import React, { useContext, useRef, useEffect } from 'react';\r\n\r\nimport {\r\n    BoxProps,\r\n    DragFrameProps,\r\n    Nullable,\r\n    ComponentContextWrapper,\r\n} from '@designer-core/shared/types';\r\nimport { MIN_HEIGHT, MIN_WIDTH } from './ResizeFrameWrapper';\r\n\r\nimport { filter } from 'rxjs/operators';\r\nimport { Subscription } from 'rxjs';\r\nimport { IState } from '@designer-core/shared/stateTypes';\r\nimport { MsgService, MsgSelector, useStorage } from '@designer-core/shared/helpers/storage';\r\nimport { IContextResizer } from './context';\r\n\r\n\r\nconst getResizeWrapComponent = <TProps extends BoxProps, TContext extends IContextResizer>(\r\n    ResizeWrapper: ComponentContextWrapper<TProps, TProps & DragFrameProps, TContext>\r\n) =>\r\n    (MouseStreamContext: React.Context<Nullable<TContext>>) =>\r\n\r\n        (Component: React.ComponentType<TProps>, services: MsgService<IState, any>[], selectors: MsgSelector<IState, any, any>[]) => {\r\n\r\n            const ResizingComponent = ResizeWrapper(Component, MouseStreamContext as React.Context<TContext>);\r\n\r\n            const ResultComponent = (props: React.PropsWithChildren<TProps & Partial<DragFrameProps>>) => {\r\n\r\n                const { guid, activeLevel$, size$ } = props;\r\n\r\n                const storage = useStorage(`resizable: ${guid}`, services, selectors);\r\n\r\n                const mouseContext = useContext(MouseStreamContext) as TContext;\r\n\r\n                const fixStartSizeRef = useRef(size$.getValue());\r\n\r\n                useEffect(() => {\r\n\r\n                    const startSubscription = mouseContext.resizeStart.pipe(\r\n                        filter(({ elementId }) => elementId === guid)\r\n                    ).subscribe((_) => {\r\n                        const [sx, sy] = size$.getValue();\r\n                        fixStartSizeRef.current = [sx, sy];\r\n                    });\r\n                    const moveSubscription: Subscription = mouseContext.resize.pipe(\r\n                        filter(([elementId]) => guid === elementId)\r\n                    ).subscribe(([_elementId, position]) => {\r\n\r\n                        const [dx, dy] = position;\r\n                        const [ndx, ndy] = [fixStartSizeRef.current[0] + dx, fixStartSizeRef.current[1] + dy];\r\n\r\n                        if (ndx > MIN_WIDTH || ndy > MIN_HEIGHT) {\r\n\r\n                            const [odx, ody] = size$.getValue();\r\n                            const [nextSx, nextSy] = [ndx > MIN_WIDTH ? ndx : odx, ndy > MIN_HEIGHT ? ndy : ody];\r\n\r\n                            storage.send('size', [guid, [nextSx, nextSy]]);\r\n\r\n                            size$.next([nextSx, nextSy]);\r\n                        }\r\n                    });\r\n                    return () => {\r\n                        console.log('subscription unsub!', guid);\r\n                        moveSubscription.unsubscribe();\r\n                        startSubscription.unsubscribe();\r\n                    };\r\n                }, [guid, mouseContext, storage, activeLevel$, fixStartSizeRef, size$]);\r\n\r\n                return (\r\n                    <ResizingComponent { ...props }>\r\n                        { props.children }\r\n                    </ResizingComponent>\r\n                );\r\n            };\r\n\r\n            return ResultComponent;\r\n        };\r\n\r\nexport default getResizeWrapComponent;\r\n","import React, { useMemo, useContext } from 'react';\r\n\r\nimport { useSubscribedState } from '@designer-core/shared/helpers/storage';\r\n\r\nimport AnchorBlock from '@designer-core/shared/blocks/Anchor';\r\n\r\nimport { ROOT_GUID, BoxProps, DragFrameProps, ActiveLevels, IMouseStreamContext, EventType } from '@designer-core/shared/types';\r\nimport { IContextResizer } from './context';\r\n\r\n\r\nexport const [MIN_WIDTH, MIN_HEIGHT] = [60, 60];\r\n\r\n\r\nconst ResizeWrapper =\r\n    <TProps extends BoxProps, TContext extends IMouseStreamContext & IContextResizer>(\r\n        Component: React.ComponentType<TProps>, MouseStreamContext: React.Context<TContext>\r\n    ) => {\r\n        const ResultBlock = (props: React.PropsWithChildren<DragFrameProps & TProps>) => {\r\n\r\n            const { guid, activeLevel$, handlers } = props;\r\n\r\n            const mouseContext = useContext(MouseStreamContext) as TContext;\r\n\r\n            const [activeLevel] = useSubscribedState(activeLevel$);\r\n\r\n            const updHandlers = useMemo<React.DOMAttributes<HTMLElement>>(\r\n                () => handlers ? { ...handlers, onMouseDown: () => { } } : { onMouseDown: () => { } },\r\n                [handlers]\r\n            );\r\n\r\n            const anchorHandler = useMemo<React.DOMAttributes<HTMLElement>>(() => ({\r\n                onMouseDown: (ev) => {\r\n                    ev.stopPropagation();\r\n                    mouseContext.resizeStart.next({ elementId: guid, ev: ev.nativeEvent, type: EventType.Resize });\r\n                }\r\n            }), [guid, mouseContext]);\r\n\r\n            const componentHandlers = useMemo(() => {\r\n                return guid === ROOT_GUID ? handlers : updHandlers\r\n            }, [guid, handlers, updHandlers]);\r\n\r\n\r\n            const activeLevelArr = activeLevel ? ['resizer', 'active'] : ['resizer'];\r\n\r\n            return (\r\n                <Component { ...props } handlers={ componentHandlers }>\r\n                    { props.children }\r\n                    {\r\n                        (activeLevel === ActiveLevels.Hover || activeLevel === ActiveLevels.HoverInGroup)\r\n                        && <AnchorBlock { ...props } handlers={ { ...anchorHandler } } classModifiers={ [...activeLevelArr] } />\r\n                    }\r\n                </Component>\r\n            );\r\n        };\r\n\r\n        return ResultBlock;\r\n    }\r\n\r\nexport default ResizeWrapper;\r\n","import {\r\n    ContextPlugin,\r\n    IObservablesMouse,\r\n    IObservablesDrag,\r\n    SELECTING_FRAME_GUID,\r\n    ILassoStreamData,\r\n    ITrappedItem,\r\n    TrappedType,\r\n    IObservableControl,\r\n} from '@designer-core/shared/types';\r\nimport { Subject } from 'rxjs';\r\nimport { tap, switchMap, takeUntil, scan } from 'rxjs/operators';\r\n\r\nexport interface IContextLasso {\r\n    lasso: Subject<ILassoStreamData>;\r\n    trapping: Subject<ITrappedItem[]>;\r\n    // trapped: BehaviorSubject<GuidType[]>;\r\n}\r\n\r\nconst contextPart: IContextLasso = {\r\n    lasso: new Subject(),\r\n    trapping: new Subject(),\r\n    // trapped: new BehaviorSubject<GuidType[]>([]),\r\n};\r\n\r\nconst getReactEffect = (mouseStreamContext: IContextLasso & IObservablesDrag & IObservablesMouse & IObservableControl): React.EffectCallback => () => {\r\n\r\n    const source$ = mouseStreamContext.dragStart.pipe(\r\n        tap(({ elementId }) => elementId === SELECTING_FRAME_GUID && mouseStreamContext.group.next([])),\r\n        switchMap(\r\n            _ => mouseStreamContext.trapping.pipe(\r\n                scan((acc, [val]) => {\r\n                    const inAcc = acc.filter(t => val && t.guid === val.guid).length;\r\n                    const toAcc = inAcc ? [] : [val];\r\n                    return val && val.trappedType === TrappedType.In ? [...acc, ...toAcc] : acc.filter(t => val && t.guid !== val.guid);\r\n                }, [] as ITrappedItem[]),\r\n                tap(values => mouseStreamContext.group.next(values.map(x => x.guid))),\r\n                takeUntil(mouseStreamContext.mouseStop)\r\n            )\r\n        )\r\n    );\r\n\r\n    const subscribtion = source$.subscribe(_ => { });\r\n\r\n\r\n    return () => {\r\n        subscribtion.unsubscribe();\r\n    }\r\n};\r\n\r\nconst getDeps = (mouseStreamContext: IContextLasso & IObservablesMouse & IObservablesDrag & IObservableControl): React.DependencyList => [mouseStreamContext];\r\n\r\nconst contextPlugin: ContextPlugin<IContextLasso & IObservablesMouse & IObservablesDrag & IObservableControl, IContextLasso> = [\r\n    { ...contextPart },\r\n    (mouseContext) => [getReactEffect(mouseContext), getDeps(mouseContext)]\r\n];\r\n\r\nexport default contextPlugin;\r\n","import React, { useMemo } from 'react';\r\nimport SelectedFrameBlock from '@designer-core/shared/blocks/SelectedFrame';\r\nimport { BoxProps, DragFrameProps, Position, BaseBoxProps } from '@designer-core/shared/types';\r\n\r\nimport { WrappedBlock } from '@designer-core/shared/wrappers/ConnectedBlock';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\nconst FrameBox = WrappedBlock(SelectedFrameBlock as React.ComponentType<BaseBoxProps>);\r\n\r\nconst SelectedFrameWrapper = <TProps extends BoxProps>(Component: React.ComponentType<TProps>) => {\r\n    const ResultBlock = (props: React.PropsWithChildren<DragFrameProps & TProps>) => {\r\n        const emptyPosition$ = useMemo(() => new BehaviorSubject<Position>([0, 0]), []);\r\n        return <FrameBox { ...props } position$={ emptyPosition$ }>\r\n            <Component { ...props }>{ props.children }</Component>\r\n        </FrameBox>;\r\n    };\r\n    return ResultBlock;\r\n}\r\n\r\nexport default SelectedFrameWrapper;\r\n","import context, { IContextLasso as IContext } from './context';\r\nimport Selectable, { getSelectableLasso } from './Selectable';\r\nimport FrameWrapper from './SelectedFrameWrapper';\r\n\r\nexport type IContextLasso = IContext;\r\n\r\nexport { context };\r\n\r\nexport { getSelectableLasso };\r\n\r\nexport default Selectable(FrameWrapper);\r\n","import React from 'react';\r\n\r\nimport getMouseStreamsContainer from './MouseStreamsContainer';\r\n\r\n\r\n// <new wrappers> (as plugins, may be we should use plugin as tuple [PluginFunction, FrameBlock, context part? ] ) \r\nimport DragFrame from './draggable/DragFrameWrapper';\r\nimport WrapComponentInDraggable from './draggable/Draggable';\r\n\r\nimport MagnetableWithMouseContext, { IContextMagnet, context as magnetContextPlugin } from '@designer-core/shared/plugins/magnetable';\r\nimport ResizableWithMouseContext, { IContextResizer, context as resizerContextPlugin } from '@designer-core/shared/plugins/resizable';\r\nimport SelectableWithMouseContext, { IContextLasso, getSelectableLasso, context as lassoContextPlugin } from '@designer-core/shared/plugins/selectable';\r\n\r\nimport {\r\n    SELECTING_FRAME_GUID,\r\n    GuidType,\r\n    IMouseStreamContext,\r\n    MouseButtonType,\r\n    EventType,\r\n    Nullable,\r\n} from '../types';\r\n\r\nimport { ContainerProps } from '@designer-core/shared/blocks/types';\r\n\r\n\r\n\r\nconst getHandlers = (elementId: GuidType, mouseContext: IMouseStreamContext): React.DOMAttributes<HTMLElement> => {\r\n    return {\r\n        onMouseDown: (ev: React.MouseEvent<HTMLElement, MouseEvent>) => {\r\n            ev.stopPropagation();\r\n            if (ev.button !== MouseButtonType.Left) return;\r\n            const _elementId = ev.ctrlKey ? SELECTING_FRAME_GUID : elementId;\r\n            mouseContext.control.next(_elementId);\r\n            console.log('start on mouseDown', _elementId);\r\n            mouseContext.mouseDown.next({\r\n                ev: ev.nativeEvent,\r\n                type: ev.ctrlKey ? EventType.StartSelecting : EventType.StartDrag,\r\n                elementId: _elementId\r\n            });\r\n        },\r\n        onMouseUp: (ev: React.MouseEvent<HTMLElement, MouseEvent>) => {\r\n            // drop to another Control (aka Container)\r\n        }\r\n    };\r\n};\r\n\r\n\r\ntype PluginTypes = IContextResizer & IContextMagnet & IContextLasso;\r\n\r\n\r\nexport const MouseStreamContext = React.createContext<Nullable<IMouseStreamContext & PluginTypes>>(null);\r\n\r\ntype NamedContainer = ContainerProps & { guid: GuidType };\r\n\r\nexport const MouseStreamContainer = getMouseStreamsContainer<NamedContainer, PluginTypes>(\r\n    MouseStreamContext,\r\n    [\r\n        resizerContextPlugin,\r\n        magnetContextPlugin,\r\n        lassoContextPlugin\r\n    ]\r\n);\r\n\r\n\r\nexport const Draggable = WrapComponentInDraggable(DragFrame)(MouseStreamContext, getHandlers);\r\n\r\n// plugins\r\nexport const Magnetable = MagnetableWithMouseContext(MouseStreamContext);\r\nexport const Resizable = ResizableWithMouseContext(MouseStreamContext);\r\nexport const Selectable = SelectableWithMouseContext(MouseStreamContext);\r\nexport const SelectingLasso = getSelectableLasso(MouseStreamContext);\r\n","import * as React from 'react';\r\nimport { MouseStreamContainer } from '@designer-core/shared/wrappers/MouseStreams';\r\nimport { ROOT_GUID } from '@designer-core/shared/types';\r\nimport ContainerBlock from '@designer-core/shared/blocks/Container';\r\nimport { blockFactory } from '@designer-core/shared/config';\r\nimport { BlockType, ContainerProps } from '@designer-core/shared/blocks/types';\r\n\r\ninterface IStartContainer {\r\n    setRef: (ref: HTMLDivElement | null) => void;\r\n}\r\n\r\nconst ContainerBlock2 = blockFactory.getBlock<ContainerProps>(BlockType.Container);\r\n\r\nconst StartWorkspaceBlock = MouseStreamContainer(ContainerBlock);\r\n\r\nconst Result = (props: React.PropsWithChildren<IStartContainer>) => {\r\n    return <StartWorkspaceBlock { ...props } guid={ ROOT_GUID } classModifiers={ ['silver-bordered', 'relative-hidden'] }>\r\n        { props.children }\r\n    </StartWorkspaceBlock>\r\n};\r\n\r\nexport default Result;\r\n","import React from 'react';\r\nimport './Control.scss';\r\n\r\n// import ContainerBlock from '@designer-core/shared/blocks/Container';\r\nimport { BoxProps, BaseBoxProps } from '@designer-core/shared/types';\r\n\r\n\r\nimport { blockFactory } from '@designer-core/shared/config';\r\nimport { BlockType, ContainerProps } from '@designer-core/shared/blocks/types';\r\n\r\nconst ContainerBlock = blockFactory.getBlock<ContainerProps>(BlockType.Container);\r\n\r\nexport interface ControlProps extends BoxProps {\r\n    name: string;\r\n}\r\n\r\nconst ControlBlock = (props: React.PropsWithChildren<BaseBoxProps & { name: string }>) => {\r\n\r\n    const { xy, size } = props;\r\n\r\n    return <ContainerBlock { ...props } classModifiers={ props.classModifiers ? ['orange-bordered', ...props.classModifiers] : ['orange-bordered'] }>\r\n        <div className=\"content-wrapper\" style={ props.style }>\r\n            <div style={ { fontSize: '14px' } }>{ props.name }</div>\r\n        </div>\r\n        { props.children }\r\n        <div style={ { fontSize: '12px', position: 'absolute', bottom: 2, right: 2 } }>\r\n            <div>sx={ size[0] }</div>\r\n            <div>sy= { size[1] }</div>\r\n        </div>\r\n        <div style={ { fontSize: '12px', position: 'absolute', bottom: 2, left: 2 } }>\r\n            <div>x={ xy[0] }</div>\r\n            <div>y= { xy[1] }</div>\r\n        </div>\r\n    </ContainerBlock>;\r\n};\r\n\r\nexport default ControlBlock;\r\n","import { DataService, MsgService, StorageSelector, MsgSelector } from '@designer-core/shared/helpers/storage';\r\nimport { IState, IControlData } from '@designer-core/shared/stateTypes';\r\nimport { Position, GuidType } from '@designer-core/shared/types';\r\n\r\nconst positionService: DataService<IState, [GuidType, Position]> = (store) => ([guid, value]) => {\r\n    store.state.controls$.next(\r\n        store.state.controls$.getValue().map(t => t.guid === guid ? { ...t, position: [value[0], value[1]] } : { ...t })\r\n    );\r\n};\r\nconst sizeService: DataService<IState, [GuidType, Position]> = (store) => ([guid, value]) => {\r\n    store.state.controls$.next(\r\n        store.state.controls$.getValue().map(t => t.guid === guid ? { ...t, size: [value[0], value[1]] } : { ...t })\r\n    );\r\n};\r\n\r\nexport const storageServices: MsgService<IState, [GuidType, Position]>[] = [\r\n    ['position', positionService],\r\n    ['size', sizeService],\r\n];\r\n\r\n\r\nconst dataSelector: StorageSelector<IState, null, IControlData[]> = (store) => (/* ident for other selectors */) => {\r\n    return store.state.controls$.getValue();\r\n};\r\n\r\nexport const storageSelectors: MsgSelector<IState, any, IControlData | IControlData[]>[] = [\r\n    ['controls', dataSelector]\r\n];\r\n","import React from 'react';\r\n\r\nimport ControlBlock, { ControlProps } from './ControlBlock';\r\n\r\nimport { Draggable, Magnetable, Selectable, Resizable } from '@designer-core/shared/wrappers/MouseStreams';\r\n\r\nimport ConnectedBlock from '@designer-core/shared/wrappers/ConnectedBlock';\r\nimport { BaseBoxProps } from '@designer-core/shared/types';\r\n\r\n// import BoxBlock from '@designer-core/shared/blocks/Box';\r\n\r\nimport { blockFactory } from '@designer-core/shared/config';\r\nimport { BlockType } from '@designer-core/shared/blocks/types';\r\n\r\n\r\nimport { storageServices, storageSelectors } from './services';\r\n\r\n\r\nexport type Props = ControlProps;\r\n\r\ntype BaseNamedBoxProps = BaseBoxProps & { name: string };\r\n\r\nconst BoxBlock = blockFactory.getBlock<BaseNamedBoxProps>(BlockType.Box);\r\n\r\n\r\nconst DisplayedControlBlock = (props: BaseNamedBoxProps) => {\r\n    return <BoxBlock { ...props } >\r\n        <ControlBlock { ...props } position={ [0, 0] } />\r\n    </BoxBlock>;\r\n};\r\n\r\n\r\nconst ResultControl = Draggable(\r\n    Magnetable(\r\n        Selectable(\r\n            Resizable(\r\n                ConnectedBlock(DisplayedControlBlock as React.ComponentType<BaseBoxProps>),\r\n                storageServices,\r\n                []\r\n            )\r\n        ),\r\n        storageServices,\r\n        storageSelectors\r\n    ),\r\n    storageServices,\r\n    []\r\n);\r\n\r\nexport default ResultControl;\r\n","import React, { Fragment, useEffect, useState } from 'react';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { Props as ControlProps } from './Control';\r\nimport { Position } from '@designer-core/shared/types';\r\n\r\n\r\nexport interface Props {\r\n    component: React.ComponentType<ControlProps>,\r\n    controls$: BehaviorSubject<ControlProps[]>,\r\n    offsetPosition$: BehaviorSubject<Position>;\r\n}\r\n\r\nconst Container: React.FC<Props> = (props: Props) => {\r\n\r\n    const { component: ControlComponent, controls$ } = props;\r\n\r\n    const [controls, setControls] = useState<ControlProps[]>([]);\r\n\r\n    useEffect(() => {\r\n        const controlsSub = controls$.pipe().subscribe(items => {\r\n            setControls([...items]);\r\n        });\r\n        return () => controlsSub.unsubscribe();\r\n    }, [controls$]);\r\n\r\n    return <Fragment>\r\n        {\r\n            controls.map(t => <ControlComponent key={ `${t.guid}-${t.name}` } { ...t } />)\r\n        }\r\n    </Fragment>\r\n};\r\n\r\nexport default Container;\r\n","import React, { useMemo, useEffect, useRef } from 'react';\r\n\r\nimport { IState, IControlData } from '@designer-core/shared/stateTypes';\r\n\r\nimport ResultControl, { Props as ControlProps } from './Control';\r\nimport ControlsContainer, { Props } from './Controls';\r\n\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { Position, ActiveLevels } from '@designer-core/shared/types';\r\nimport { useStorage, MsgService } from '@designer-core/shared/helpers/storage';\r\nimport { storageSelectors } from './Control/services';\r\n\r\nexport type ControlsCntProps = Props;\r\n\r\n\r\nconst MemoisedControl = React.memo(ResultControl);\r\n\r\nexport interface IControlsContainerProps {\r\n    offsetPosition$: BehaviorSubject<Position>;\r\n}\r\n\r\nconst ResultControls = (props: IControlsContainerProps) => {\r\n\r\n\r\n    const { offsetPosition$ } = props;\r\n\r\n    const emptyServicesRef = useRef<MsgService<IState, any>[]>([]);\r\n    const storage = useStorage<IState>('stored-workspace', emptyServicesRef.current, storageSelectors);\r\n\r\n    const innerControls$ = useMemo<BehaviorSubject<ControlProps[]>>(() => new BehaviorSubject<ControlProps[]>([]), []);\r\n\r\n    useEffect(() => {\r\n\r\n        const [oX, oY] = offsetPosition$.getValue();\r\n\r\n        const controls = storage.get<null, IControlData[]>('controls') as IControlData[];\r\n\r\n        innerControls$.next(\r\n            controls.map<ControlProps>(\r\n                t => ({\r\n                    guid: t.guid,\r\n                    name: `${t.uiType}-${t.guid}`,\r\n                    activeLevel$: new BehaviorSubject<ActiveLevels>(ActiveLevels.None),\r\n                    xy$: new BehaviorSubject([t.position[0], t.position[1]]),\r\n                    position$: new BehaviorSubject([t.position[0], t.position[1]]),\r\n                    size$: new BehaviorSubject([t.size[0], t.size[1]]),\r\n                    style: t.style,\r\n                    offsetPosition$: new BehaviorSubject([oX, oY]),\r\n                })\r\n            )\r\n        );\r\n\r\n\r\n    }, [storage, innerControls$, offsetPosition$]);\r\n\r\n    return <ControlsContainer\r\n        component={ MemoisedControl }\r\n        controls$={ innerControls$ }\r\n        offsetPosition$={ new BehaviorSubject([0, 0]) }\r\n    />;\r\n};\r\n\r\nexport default ResultControls;\r\n","import { StorageSelector, MsgSelector, MsgService } from '@designer-core/shared/helpers/storage';\r\nimport { IState, IControlData } from '@designer-core/shared/stateTypes';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n\r\nconst dataSelector: StorageSelector<IState, null, BehaviorSubject<IControlData>> = (store) => (/* ident for other selectors */) => {\r\n    return store.state.root$;\r\n};\r\n\r\nexport const storageServices: MsgService<IState, any>[] = [];\r\nexport const emptyStorageSelectors: MsgSelector<IState, any, any>[] = [];\r\n\r\nexport const storageSelectors: MsgSelector<IState, any, BehaviorSubject<IControlData>>[] = [\r\n    ['observerable-data', dataSelector]\r\n];\r\n","import { Draggable, SelectingLasso } from '@designer-core/shared/wrappers/MouseStreams';\r\nimport { WrappedBlock } from '@designer-core/shared/wrappers/ConnectedBlock';\r\n\r\n// import BoxBlock from '@designer-core/shared/blocks/Box';\r\n\r\nimport { storageServices, emptyStorageSelectors } from './services';\r\n\r\nimport { blockFactory } from '@designer-core/shared/config';\r\nimport { BlockType } from '@designer-core/shared/blocks/types';\r\nimport { BaseBoxProps } from '@designer-core/shared/types';\r\n\r\n\r\nconst Component = Draggable(\r\n    SelectingLasso(\r\n        WrappedBlock(blockFactory.getBlock<BaseBoxProps>(BlockType.Box))\r\n    ),\r\n    storageServices,\r\n    emptyStorageSelectors\r\n);\r\n// const Component = Draggable(\r\n//     SelectingLasso(\r\n//         WrappedBlock(BoxBlock)\r\n//     ),\r\n//     storageServices,\r\n//     emptyStorageSelectors\r\n// );\r\n\r\nexport default Component;\r\n","import React, { useEffect, useMemo } from 'react';\r\nimport StoredLasso from './Lasso';\r\nimport { SELECTING_FRAME_GUID, ActiveLevels, Position } from '@designer-core/shared/types';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { IControlData } from '@designer-core/shared/stateTypes';\r\n\r\nimport { storageSelectors, storageServices } from './services';\r\nimport { useStorage } from '@designer-core/shared/helpers/storage';\r\n\r\n\r\nexport interface Props {\r\n    offsetPosition$: BehaviorSubject<Position>;\r\n}\r\n\r\n\r\nconst ResultLasso: React.FC<Props> = (props: Props) => {\r\n\r\n    const { offsetPosition$ } = props;\r\n    const storage = useStorage('root-for-lasso', storageServices, storageSelectors);\r\n\r\n    const activeLevel$ = useMemo(() => new BehaviorSubject<ActiveLevels>(ActiveLevels.None), []);\r\n    const position$ = useMemo(() => new BehaviorSubject<Position>([0, 0]), []);\r\n    const xy$ = useMemo(() => new BehaviorSubject<Position>([0, 0]), []);\r\n    const size$ = useMemo(() => new BehaviorSubject<Position>([0, 0]), []);\r\n\r\n    useEffect(() => {\r\n        console.log('%c init effect inside result-lasso ', 'color: red; background-color: silver;');\r\n        const [startX, startY] = offsetPosition$.getValue();\r\n        const root$ = storage.get('observerable-data') as Observable<IControlData>;\r\n        const rootSub = root$.subscribe(({ position }) => offsetPosition$.next([startX + position[0], startY + position[1]]));\r\n        return () => rootSub.unsubscribe();\r\n    }, [storage, offsetPosition$]);\r\n\r\n    return <StoredLasso\r\n        guid={ SELECTING_FRAME_GUID }\r\n        activeLevel$={ activeLevel$ }\r\n        offsetPosition$={ offsetPosition$ }\r\n        position$={ position$ }\r\n        xy$={ xy$ }\r\n        size$={ size$ } />\r\n};\r\n\r\nexport default ResultLasso;\r\n","import { DataService, StorageSelector, MsgService, MsgSelector } from '@designer-core/shared/helpers/storage';\r\nimport { IState, IControlData } from '@designer-core/shared/stateTypes';\r\nimport { Position, GuidType } from '@designer-core/shared/types';\r\n\r\nconst positionService: DataService<IState, [GuidType, Position]> = (store) => ([_guid, value]) => {\r\n    const root = store.state.root$.getValue();\r\n    store.state.root$.next({ ...root, position: [value[0], value[1]] });\r\n};\r\nconst sizeService: DataService<IState, [GuidType, Position]> = (store) => ([_guid, value]) => {\r\n    const root = store.state.root$.getValue();\r\n    store.state.root$.next({ ...root, size: [value[0], value[1]] })\r\n};\r\n\r\n\r\nconst dataSelector: StorageSelector<IState, null, IControlData> = (store) => (/* ident for other selectors */) => {\r\n    return store.state.root$.getValue();\r\n};\r\n\r\n\r\n\r\n\r\nexport const storageServices: MsgService<IState, any>[] = [\r\n    ['position', positionService],\r\n    ['size', sizeService],\r\n];\r\n\r\nexport const storageSelectors: MsgSelector<IState, any, any>[] = [\r\n    ['data', dataSelector]\r\n];\r\n","import React, { useState, useEffect, useRef } from 'react';\r\n\r\nimport { IState, IControlData } from '@designer-core/shared/stateTypes';\r\n\r\nimport WorkspaceContainerBlock from './WorkspaceBlock';\r\nimport StartWorkspaceBlock from './WorkspaceContainer';\r\nimport ConnectedBlock from '@designer-core/shared/wrappers/ConnectedBlock';\r\n\r\nimport StoredResultControls from './Controls';\r\nimport StoredLasso from './Lasso';\r\n\r\nimport {\r\n    Draggable,\r\n    Resizable,\r\n} from '@designer-core/shared/wrappers/MouseStreams';\r\n\r\nimport { ROOT_GUID, BoxProps, Position, ActiveLevels } from '@designer-core/shared/types';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\nimport { storageServices as STORAGE_SERVICES, storageSelectors as STORAGE_SELECTORS } from './services';\r\nimport { MsgService, useStorage } from '@designer-core/shared/helpers/storage';\r\n\r\n\r\nexport type WorkspaceProps = BoxProps;\r\n\r\n\r\nconst WorkspaceBlock = ConnectedBlock(WorkspaceContainerBlock);\r\n\r\nconst Workspace = (props: React.PropsWithChildren<WorkspaceProps>) => {\r\n\r\n    return (\r\n        <WorkspaceBlock { ...props }>\r\n            <StoredResultControls offsetPosition$={ props.offsetPosition$ } />\r\n            <StoredLasso offsetPosition$={ props.offsetPosition$ } />\r\n            { props.children }\r\n        </WorkspaceBlock>\r\n    );\r\n};\r\n\r\n\r\nconst DraggableWorkspaceBox = Draggable(\r\n    Resizable(Workspace, STORAGE_SERVICES, []),\r\n    STORAGE_SERVICES, []\r\n);\r\n\r\n\r\n//  workspace inside fixed Container\r\nconst StoredWorkspace: React.FC = () => {\r\n\r\n    const emptyServicesRef = useRef<MsgService<IState, any>[]>([]);\r\n    const storage = useStorage<IState>('stored-workspace', emptyServicesRef.current, STORAGE_SELECTORS);\r\n\r\n    const [cntRef, setCntRef] = useState<HTMLElement | null>(null);\r\n    const [absOffset, setAbsOffset] = useState<Position | null>(null);\r\n    const absOffsetRef = useRef<Position | null>(null);\r\n\r\n\r\n    useEffect(() => {\r\n        if (cntRef && !absOffsetRef.current) {\r\n            const rect: ClientRect = cntRef.getBoundingClientRect();\r\n            absOffsetRef.current = [rect.left, rect.top];\r\n            console.log('cntRef effect!', absOffsetRef.current);\r\n            setAbsOffset([rect.left, rect.top]);\r\n        }\r\n    }, [cntRef, absOffsetRef]);\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            console.log('destroy workspace!');\r\n        };\r\n    }, []);\r\n\r\n    const rootData = storage.get<null, IControlData>('data') as IControlData;\r\n    const { size, position } = rootData;\r\n\r\n    console.log('%c render inside workspace', 'color: yellow; background-color: red');\r\n\r\n    return <StartWorkspaceBlock setRef={ setCntRef }>\r\n        {\r\n            absOffset &&\r\n            <DraggableWorkspaceBox\r\n                xy$={ new BehaviorSubject([position[0], position[1]]) }\r\n                position$={ new BehaviorSubject([position[0], position[1]]) }\r\n                size$={ new BehaviorSubject([size[0], size[1]]) }\r\n                activeLevel$={ new BehaviorSubject<ActiveLevels>(ActiveLevels.None) }\r\n                offsetPosition$={ new BehaviorSubject([absOffset[0], absOffset[1]]) }\r\n                guid={ ROOT_GUID } />\r\n        }\r\n    </StartWorkspaceBlock>;\r\n};\r\n\r\nexport default StoredWorkspace;\r\n","import Workspace, { WorkspaceProps as Props } from './Workspace';\r\n\r\nexport type WorkspaceProps = Props;\r\n\r\nexport default Workspace;\r\n","import { ActionName, ActionFunc } from '../../storeTypes';\r\nimport { Position } from '@designer-core/shared/types';\r\n\r\nexport const UPDATE_ROOT_POSITION = 'update-root-position' as ActionName;\r\nexport const UPDATE_CONTROL_POSITION = 'update-control-position' as ActionName;\r\n\r\nexport const updateRootPosition: ActionFunc<Position> = (payload) => {\r\n    return { payload, type: UPDATE_ROOT_POSITION };\r\n};\r\n","import { ROOT_GUID } from '@designer-core/shared/types';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { UIPrimitive, IControlData, IState } from '@designer-core/shared/stateTypes';\r\n\r\nimport { UpdateRootPosition } from './reducers/root';\r\n\r\nconst UIStyles: { [key: string]: React.CSSProperties } = {\r\n    [UIPrimitive.RectangleBlock]: { backgroundColor: '#213c58' }\r\n};\r\nconst CONTROLS = [\r\n    ...new Array(4)\r\n        // ...new Array(53)\r\n        // ...new Array(Math.round(Math.random() * 4 + 3))\r\n        .fill(0)\r\n        .map<IControlData>((_, i) => ({\r\n            guid: `test-${i}`,\r\n            classType: 'testClass',\r\n            uiType: UIPrimitive.RectangleBlock,\r\n            position: [Math.round(Math.random() * 450 + i * 20), Math.round(Math.random() * 250 + i * 20)],\r\n            size: [Math.round(Math.random() * 150 + 80), Math.round(Math.random() * 90 + 70)],\r\n            style: UIStyles[UIPrimitive.RectangleBlock]\r\n        }))\r\n];\r\nconst ROOT_CONTROL: IControlData = {\r\n    guid: ROOT_GUID,\r\n    classType: 'Root',\r\n    position: [10, 10],\r\n    size: [700, 500],\r\n    uiType: UIPrimitive.Root\r\n};\r\n\r\n\r\nexport const initialState: IState = {\r\n    controls$: new BehaviorSubject<IControlData[]>([...CONTROLS]),\r\n    root$: new BehaviorSubject<IControlData>({ ...ROOT_CONTROL }),\r\n};\r\n\r\n\r\nexport default [UpdateRootPosition];\r\n","import React from 'react';\n\nimport Workspace from './workspace';\nimport { useStore } from './rxRedux/storeContext';\nimport { initialState } from './rxRedux/controls';\n\nconst ResultWorkspace: React.FC = () => {\n    const [store, StoreContextProvider] = useStore(initialState, []);\n    return <StoreContextProvider value={ store }>\n        <Workspace />\n    </StoreContextProvider>;\n};\n\nexport default ResultWorkspace;\n","import React from 'react';\nimport { hot } from 'react-hot-loader';\nimport { NavLink } from 'react-router-dom';\n\nimport ContentWrapper from './content-wrapper';\nimport Header from './header';\n\nimport Designer from '@designer-core/App';\n\nimport './App.scss';\n\nconst ContentWithDesigner = ContentWrapper(Designer);\n\nconst App: React.FC = () => {\n    return (\n        <div className=\"App\">\n            <Header title=\"Designer\">\n                <NavLink activeClassName=\"link-item--active\" exact activeStyle={ { color: 'orange' } } to=\"/\">Home</NavLink> \\\\\n                <NavLink activeClassName=\"link-item--active\" activeStyle={ { color: 'orange' } } to=\"/about\">About</NavLink> \\\\\n                <NavLink activeClassName=\"link-item--active\" activeStyle={ { color: 'orange' } } to=\"/workspace\">Workspace</NavLink>\n            </Header>\n            <ContentWithDesigner />\n        </div>\n    );\n}\n\nexport default hot(module)(App);\n","import appRunner from './app/wf-designer';\n\nexport default appRunner;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport App from './App';\n\nimport { BrowserRouter } from 'react-router-dom';\n\nconst run = () => {\n    ReactDOM.render(\n        <BrowserRouter basename=\"./\">\n            <App />\n        </BrowserRouter>,\n        document.getElementById('root')\n    );\n};\n\nexport default run;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n            window.location.href\n        );\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import appRunner from './app';\nimport * as serviceWorker from './serviceWorker';\n\nappRunner();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}