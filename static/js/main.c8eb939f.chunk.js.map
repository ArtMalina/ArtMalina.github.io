{"version":3,"sources":["app/designer-core/shared/blocks/types.ts","app/wf-designer/content-wrapper/home/index.tsx","app/wf-designer/content-wrapper/home/Home.tsx","app/wf-designer/content-wrapper/about/index.tsx","app/wf-designer/content-wrapper/index.tsx","app/wf-designer/content-wrapper/ContentWrapper.tsx","app/wf-designer/header/index.tsx","app/wf-designer/header/Header.tsx","app/designer-core/shared/types.ts","app/designer-core/shared/blocks/Anchor/AnchorDiv.tsx","app/designer-core/shared/blocks/Anchor/index.ts","app/designer-core/shared/blocks/Box/BoxDiv.tsx","app/designer-core/shared/blocks/Box/index.ts","app/designer-core/shared/blocks/Container/ContainerDiv.tsx","app/designer-core/shared/blocks/Container/index.ts","app/designer-core/shared/blocks/DragFrame/DragFrameDiv.tsx","app/designer-core/shared/blocks/index.ts","app/designer-core/shared/plugins/magnetable/nearestEdges.ts","app/designer-core/shared/blocks/DragFrame/index.ts","app/designer-core/shared/blocks/MagnetCornerFrame/MagnetCornerFrameDiv.tsx","app/designer-core/shared/blocks/MagnetCornerFrame/index.ts","app/designer-core/shared/blocks/MagnetFrame/MagnetFrameDiv.tsx","app/designer-core/shared/blocks/MagnetFrame/index.ts","app/designer-core/shared/blocks/SelectedFrame/SelectedFrameDiv.tsx","app/designer-core/shared/blocks/SelectedFrame/index.ts","app/designer-core/shared/config.ts","app/designer-core/workspace/WorkspaceBlock.tsx","app/designer-core/shared/wrappers/MouseStreamsContainer.tsx","app/designer-core/rxRedux/storeContext.tsx","app/designer-core/shared/helpers/storage.tsx","app/designer-core/shared/wrappers/ConnectedBlock.tsx","app/designer-core/shared/wrappers/draggable/DragFrameWrapper.tsx","app/designer-core/shared/wrappers/draggable/Draggable.tsx","app/designer-core/shared/plugins/magnetable/context.tsx","app/designer-core/shared/plugins/selectable/Selectable.tsx","app/designer-core/shared/stateTypes.ts","app/designer-core/shared/plugins/magnetable/Magnetable.tsx","app/designer-core/shared/plugins/magnetable/index.ts","app/designer-core/shared/plugins/magnetable/MagnetFrameWrapper.tsx","app/designer-core/shared/plugins/resizable/context.tsx","app/designer-core/shared/plugins/resizable/ResizeFrameWrapper.tsx","app/designer-core/shared/plugins/resizable/index.ts","app/designer-core/shared/plugins/resizable/Resizable.tsx","app/designer-core/shared/plugins/selectable/context.tsx","app/designer-core/shared/plugins/selectable/SelectedFrameWrapper.tsx","app/designer-core/shared/plugins/selectable/index.ts","app/designer-core/shared/wrappers/MouseStreams.tsx","app/designer-core/workspace/WorkspaceContainer.tsx","app/designer-core/workspace/Controls/Control/ControlBlock.tsx","app/designer-core/workspace/Controls/Control/services.ts","app/designer-core/workspace/Controls/Control/index.tsx","app/designer-core/workspace/Controls/Controls.tsx","app/designer-core/workspace/Controls/index.tsx","app/designer-core/workspace/Lasso/services.ts","app/designer-core/workspace/Lasso/Lasso.tsx","app/designer-core/workspace/Lasso/index.tsx","app/designer-core/workspace/services.ts","app/designer-core/workspace/Workspace.tsx","app/designer-core/workspace/index.ts","app/designer-core/rxRedux/controls/actions/index.ts","app/designer-core/rxRedux/controls/index.ts","app/designer-core/App.tsx","app/wf-designer/App.tsx","app.ts","app/wf-designer/index.tsx","serviceWorker.ts","index.tsx"],"names":["RendererType","BlockType","Home","props","react_default","a","createElement","className","About","ContentWrapper","WorkspaceComponent","react_router","exact","path","component","Header","title","React","Children","map","children","Child","ActiveLevels","ActiveLevelStatus","MagnetCornerType","EventType","TrappedType","MagnetPairDirection","MouseButtonType","AnchorDiv","handlers","modifiers","classModifiers","icon","Object","assign","concat","length","t","join","style","marginLeft","marginTop","renderBlockTypes","HTML","BoxDiv","classBlocks","classElements","toConsumableArray","block","elements","objectSpread","left","position","top","width","size","height","ContainerDiv","currentRef","useRef","useEffect","current","setRef","ref","renderType","EdgeType","DragFrameDiv","activeLevel","isFrame","None","InGroup","delta","updStyle","borderWidth","padding","console","log","borderStyle","MagnetCornerFrameDiv","type","indent","offset","cornerProps","_indent","slicedToArray","TOP_INDENT","RIGHT_INDENT","BOTTOM_INDENT","LEFT_INDENT","topLeftCorner","borderTopStyle","borderLeftStyle","topRightCorner","borderRightStyle","bottomLeftCorner","borderBottomStyle","bottomRightCorner","edgeStyle","borderColor","verticalLine","horizontalLine","helperOffset","TopLeft_LeftBottom","TopLeft_LeftTop","TopLeft_TopLeft","TopLeft_TopRight","TopRight_TopLeft","right","TopRight_TopRight","TopRight_RightTop","TopRight_RightBottom","BottomRight_RightTop","bottom","BottomRight_RightBottom","BottomRight_BottomRight","BottomRight_BottomLeft","BottomLeft_BottomRight","BottomLeft_BottomLeft","BottomLeft_LeftBottom","BottomLeft_LeftTop","Left_Vertical","Right_Vertical","Top_Horizontal","Bottom_Horizontal","getCornerMarker","MagnetFrameDiv","markerPosition","SelectedFrameBlock","propsLevel","isFramed","MoveInGroup","HoverInGroup","MoveByHandInGroup","SelectedFrameDiv","blocks","_blocks","defineProperty","Anchor","renderAnchorTypes","Box","renderBoxTypes","Container","renderContainerTypes","DragFrame","renderDragFrameTypes","MagnetCornerFrame","renderMagnetCornerTypes","MagnetBorderFrame","renderMagnetBorderTypes","SelectedFrame","renderSelectedFrameTypes","EmptyBlock","blockFactory","getBlock","blockType","BoxBlock","ContainerBlock","WorkspaceBlock","xy","WorkspaceBlock_BoxBlock","fontSize","getMouseStreamContainer","MouseStreamContext","plugins","StartBlock","pluginsRef","contextParts","useMemo","reduce","memo","el","mouseStreamContext","dragStart","Subject","drag","dragStop","control","BehaviorSubject","group","deltaMoves","mouseDown","mouseMove","mouseUp","mouseLeave","mouseStop","effects","_ref","_ref2","_func","func","resultMainEffect","results","forEach","endFunc","mainEffect","startMoving$","pipe","tap","ev","warn","elementId","data","movingSource$","_ref3","switchMap","combineLatest","takeUntil","_ref5","getValue","next","StopDrag","movingSubscription","subscribe","_ref6","_ref7","_ref7$","start","move","_ref8","clientX","clientY","startX","startY","startDragSubscription","_ref9","_ref10","StartDrag","stopDragSubsciption","_","currControl","complete","unsubscribe","onMouseDown","onMouseMove","nativeEvent","Move","onMouseUp","Cancel","onMouseLeave","Provider","value","_INIT_ACTION_","Store","state","_reducers","classCallCheck","this","change","payload","_actionSub","val","action","StoreContext","createContext","Storage","_services","_selectors","createClass","key","filter","_ref4","service","ident","selector","find","msg","useSubscribedState","source$","_useState","useState","_useState2","setState","subscription","useStorage","guid","services","selectors","store","useContext","WrappedBlock","Block","size$","position$","xy$","activeLevel$","otherProps","objectWithoutProperties","setXY","_useState3","_useState4","setPosition","_useState5","_useState6","setSize","_useState7","_useState8","setActiveLevel","xySub","x","y","requestAnimationFrame","positionSub","sizeSub","sx","sy","activeLevelSub","level","ConnectedBlock","_useState9","_useState10","DisplayedBlock","DRAG_ICON","viewBox","xmlns","fill","fillRule","d","DragFrameWrapper","Component","options","baseProps","mouseContext","isAnchorActive","setAnchorActivation","_useSubscribedState","newSize","activeLevelRef","setActiveLevelState","emptyPosition$","propsMouseDown","emptyPosSub","i","anchorHandler","hover$","updHandlers","onMouseEnter","stopPropagation","sub","includes","Hover","hoverableArr","dragClassModifiers","MoveByHand","innerClassModifiers","isDraggableComponent","optionsModifiers","baseClassModifiers","blocks_Anchor","getDragWrapComponent","getHandlers","MovingComponent","storage","startPositionRef","moveSubscription","deltaPosition","_deltaPosition","_startPositionRef$cur","newX","newY","send","stopSubscription","_position$$getValue","_position$$getValue2","startSubscription","DragInGroup","_position$$getValue3","_position$$getValue4","contextPart","magneted","magneting","magnetingStart","getDeps","contextPlugin","subscribtion","magnetedItems","fixGuid","items","magnetingGuid","direction","In","asInPairs","inPairs","outPairs","Out","UIPrimitive","MAP_EDGE_TYPE_TO_MAGNET","_MAP_EDGE_TYPE_TO_MAG","LeftVertical","RightVertical","TopHorizontal","BottomHorizontal","MAP_MAGNET_TYPE_TO_EDGE","_MAP_MAGNET_TYPE_TO_E","calcIntersection","p1","p2","np1","np2","dp1","Math","abs","dp2","dp3","dp4","min","getClosestEdgeDistanceReducer","CAPTURE_DELTA","currentPoints","_memo","_currentPoints","c1","c2","c3","resultDelta","closestEdge","dLeftVertical","dRightVertical","dTopHorizontal","dBottomHorizontal","maxDelta","getClosestEdge","DETAIL_MAGNET_TYPES","TopLeft","TopRight","BottomRight","BottomLeft","getDetailMagnetType","magnetType","detail","_magnetType","_direction","COMPOSE_CORNER_TYPES","_COMPOSE_CORNER_TYPES","_MagnetCornerType$Top","LeftTop","_MagnetCornerType$Top2","RightTop","_MagnetCornerType$Bot","LeftBottom","_MagnetCornerType$Bot2","RightBottom","getClosestItem","currentGuid","_ref31","item","_getClosestPointDista","_item$position","_item$size","_corners$reduce","_ref27","_ref28","px","py","cornerType","_currentPoints$reduce","currMemo","crn","j","_ref29","_ref30","cpx","cpy","dx","dy","ndist","currentCornerType","_currentPoints$reduce2","distance","closestCorner","currentCorner","_corners$reduce2","_distance","_currentCorner","_closestCorner","_cornerSubType","round","sqrt","getClosestPointDistance","_getClosestPointDista2","resMagnetType","Magnetable","MagnetWrapper","_ref32","Indents","MagnetBlock","markerRef","sizeMarker$","markerPosition$","nearestFrame$","magnetOutDrag","_ref33","_ref34","nearestFrame","magnetOutResize","resizeStop","_ref35","_ref36","magnetInSubscription","sxy","frame","fix","dragForNearests","useCallback","nearestYes","nearestNo","_xy$$getValue","_xy$$getValue2","currx","curry","_size$$getValue","_size$$getValue2","currSx","currSy","startGuidSizePosition","_items","get","_ref37","nearest","_getClosestItem","_getClosestItem2","resultMagnetType","push","apply","_ref13","_ref14","closestCornerType","_currentCorner$1$size","csx","csy","_closestCorner$","_closestCorner$$posit","_closestCorner$$size","_currentCorner$1$posi","cx","cy","result","leftRight","indexOf","topBottom","leftRightPoint","topBottomPoint","tempY","closeToLeftRight","resX","resY","magnetDirection","_ref15","_ref16","_ref17","_ref18","_ref19","_ref20","_ref21","_ref22","MagnetAllCorners","nearestEdgesByResizing","_xy$$getValue3","_xy$$getValue4","_size$$getValue3","_size$$getValue4","_ref38","closestEdges","magnetingEdges","_guid","_mouseContext","nearestVerticalHorizontal","_ref9$","vertResult","horResult","minDistances","edgeType","closestItem","minDistanceToAnotherEdge","isClosestExist","minVertical","minHorizontal","newNearest","nearestCalculation","_ref23","_ref24","otherItems","reducerFn","index","res","_ref25","_ref26","edgeTpye","minDistToAnotherEdge","getClosestEdges","_current$position","_current$size","_closestEdge","edgeDistance","itemGuidSizePos","resultSx","resultSy","_itemGuidSizePos$posi","itemX","itemY","_itemGuidSizePos$size","itemSx","itemSy","_ref11","_ref12","MagnetAllEdges","magnetSubscription","isOut","isCurrentOut","dragStopSubscription","_ref39","_markerRef$current","_markerRef$current$","markerX","markerY","dragStartSubscription","_ref40","dragSubscription","_ref41","findIndex","tGuid","_xy$$getValue5","_xy$$getValue6","_size$$getValue5","_size$$getValue6","_ref42","_ref43","nearestGuid","magnetPosition","resizeStartSubscription","resizeStart","_ref44","resizeStopSubscription","_ref45","_sizeMarker$$getValue","_sizeMarker$$getValue2","nearestVertical","nearestHorizontal","currSize","resItems","_getResultSize","_ref6$","_getResultSize2","calcSx","calcSy","resSx","resSy","resizeSubscription","resize","_ref46","_ref48","_xy$$getValue7","_xy$$getValue8","_size$$getValue7","_size$$getValue8","_sizeMarker$$getValue3","_sizeMarker$$getValue4","prevVertical","prevHorizontal","_nearest","resultVert","resultHor","newVertHoriz","isNewVert","_ref50","_ref51","itemGuid","isNewHor","_ref52","_ref53","_ref54","_ref55","_type","_ref56","_ref57","_mg","_mtype","_ref58","_ref59","_sizeMarker$$getValue5","_sizeMarker$$getValue6","vert","horiz","uniueOutingGuids","_g","markerValue","setMarkerValue","_useSubscribedState3","markerSub","edges","isCorner","isEdge","Fragment","MagnetFrame","StopResize","RESIZE_ICON","stroke","strokeWidth","strokeMiterlimit","x1","y1","x2","y2","points","Resizable","ResizeWrapper","ResizingComponent","fixStartSizeRef","_position","ndx","ndy","odx","ody","nextSx","nextSy","Resize","componentHandlers","activeLevelArr","lasso","trapping","scan","acc","toAcc","trappedType","values","getSelectableWrapComponent","SelectedFrameWrapper","SelectedFrameComponent","startXYRef","inLasso","setInLasso","inLassoRef","groupDragRef","lassoStartSub","dragGroupStopSub","groupsSubscription","startElementId","_startXYRef$current","tId","lassoSubscription","end","positionStart","trapped","currentSize","positionEnd","_classModifiers","FrameBox","Selectable","MouseStreamContainer","getMouseStreamsContainer","resizerContextPlugin","magnetContextPlugin","lassoContextPlugin","Draggable","WrapComponentInDraggable","button","Left","_elementId","ctrlKey","StartSelecting","MagnetableWithMouseContext","ResizableWithMouseContext","SelectableWithMouseContext","SelectingLasso","BlockWrapper","offsetPosition$","fixStartPositionRef","trappedRef","newSize$","emptyXY$","lassoMoveSub","_offsetPosition$$getV","_offsetPosition$$getV2","rx","ry","_fixStartPositionRef$","_startX","_startY","StartWorkspaceBlock","Result","react","ControlBlock","ControlBlock_ContainerBlock","name","storageServices","controls$","storageSelectors","ResultControl","Control_BoxBlock","Control_ControlBlock","ControlComponent","controls","setControls","controlsSub","MemoisedControl","ResultControls","emptyServicesRef","innerControls$","oX","oY","uiType","Controls","root$","ResultLasso","rootSub","Lasso","root","WorkspaceContainerBlock","DraggableWorkspaceBox","Workspace_WorkspaceBlock","workspace_Controls","workspace_Lasso","STORAGE_SERVICES","Workspace","STORAGE_SELECTORS","cntRef","setCntRef","absOffset","setAbsOffset","absOffsetRef","rect","getBoundingClientRect","rootData","WorkspaceContainer","UIStyles","RectangleBlock","backgroundColor","boxShadow","color","CONTROLS","Array","classType","random","ROOT_CONTROL","Root","initialState","ResultWorkspace","_useStore","_useStore2","StoreContextProvider","workspace","ContentWithDesigner","Designer","App","header","react_router_dom","activeClassName","activeStyle","to","appRunner","ReactDOM","render","basename","app_wf_designer_App","document","getElementById","Boolean","window","location","hostname","match","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c8eb939f.chunk.js","sourcesContent":["export enum RendererType {\r\n    HTML = '<HTML>',\r\n    SVG = '<SVG>',\r\n    CANVAS_2D = 'CANVAS_2D',\r\n    WEBGL = 'WEBGL'\r\n}\r\n\r\nexport enum BlockType {\r\n    Anchor = 'Anchor',\r\n    Box = 'Box',\r\n    Container = 'Container',\r\n    DragFrame = 'DragFrame',\r\n    MagnetCornerFrame = 'MagnetCornerFrame',\r\n    MagnetBorderFrame = 'MagnetBorderFrame',\r\n    SelectedFrame = 'SelectedFrame'\r\n}\r\n\r\nexport interface ContainerProps {\r\n    setRef?: (ref: HTMLDivElement | null) => void,\r\n    style?: React.CSSProperties;\r\n    handlers?: React.DOMAttributes<HTMLDivElement>;\r\n    classModifiers?: string[];\r\n}\r\n","import Home from './Home';\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n\r\nconst Home: React.FC<any> = (props: any) => {\r\n    return (\r\n        <div className=\"container\">\r\n            Home!\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n\r\nconst About: React.FC<any> = (props: any) => {\r\n    return (\r\n        <div className=\"container\">\r\n            About!\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default About;\r\n","import ContentWrapper from './ContentWrapper';\r\n\r\nexport default ContentWrapper;\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Home from './home';\r\nimport About from './about';\r\n\r\nconst ContentWrapper = (WorkspaceComponent: React.ComponentType): React.FC =>\r\n    () => {\r\n        return (\r\n            <div className=\"container content-box\">\r\n                <Switch>\r\n                    <Route exact path=\"/\" component={ Home } />\r\n                    <Route exact path=\"/about\" component={ About } />\r\n                    <Route exact path=\"/workspace\" component={ WorkspaceComponent } />\r\n                </Switch>\r\n            </div>\r\n        );\r\n    };\r\n\r\nexport default ContentWrapper;\r\n","import Header, { HeaderProps as Props } from './Header';\r\n\r\nexport type HeaderProps = Props;\r\nexport default Header;\r\n","import React from 'react';\r\nimport './Header.scss';\r\n\r\nexport type HeaderProps = {\r\n    title: string;\r\n};\r\n\r\nconst Header: React.FC<HeaderProps> = (props) => {\r\n    return (\r\n        <nav>\r\n            <div className=\"flex-item\">\r\n                <h1>{ props.title }</h1>\r\n            </div>\r\n            <div className=\"links-container\">\r\n                { React.Children.map(props.children, (Child) => <div className=\"link-item\">{ Child }</div>) }\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import { Subject, BehaviorSubject } from 'rxjs';\r\nimport React, { CSSProperties } from 'react';\r\n\r\nexport const SELECTING_FRAME_GUID = 'selecting-frame';\r\nexport const ROOT_GUID = 'root';\r\n\r\n\r\nexport type Nullable<T> = T | null;\r\n\r\nexport type ContextPlugin<TMouseContext, TPartContext> = [TPartContext, (mouseContext: TMouseContext) => [React.EffectCallback, React.DependencyList]];\r\n\r\n\r\nexport enum ActiveLevels {\r\n    None = '<none>',\r\n    Hover = '<hover>',\r\n    InGroup = '<in-group>',\r\n    HoverInGroup = '<hover-in-group>',\r\n    JustMove = '<just-move(?)>',\r\n    MoveByHand = '<move-by-hand>',\r\n    MoveByHandInGroup = '<move-by-hand-in-group>',\r\n    MoveInGroup = '<move-in-group>',\r\n    // Resize = '<resize>',\r\n    // ResizeInGroup = '<resize-in-group>'\r\n}\r\n\r\nexport enum ActiveLevelStatus {\r\n    None = 0,\r\n    /**\r\n     *  component is moving\r\n     */\r\n    JustMove = 1,\r\n    /**\r\n     * component is selecting (by hover, for example. NOT IN LASSO)\r\n     */\r\n    JustActive = 2,\r\n    /**\r\n     * component is in group\r\n     */\r\n    InGroup = 3,\r\n    /**\r\n     *  grouped component is moving by hand\r\n     */\r\n    MoveAndSelect = 4,\r\n    /**\r\n     * component is moving as part of moving group\r\n     */\r\n    MoveInGroup = 5,\r\n    /**\r\n     * component is resizing\r\n     */\r\n    Resize = 6\r\n}\r\n\r\nexport type Position = [number, number];\r\n\r\n\r\ninterface BaseProps {\r\n    guid: any;\r\n\r\n    style?: CSSProperties;\r\n    classModifiers?: string[];\r\n    classElements?: string[];\r\n    classBlocks?: string[];\r\n    handlers?: React.DOMAttributes<HTMLElement>;\r\n}\r\n\r\nexport interface BaseBoxProps extends BaseProps {\r\n    position: Position;\r\n    size: Position;\r\n    xy: Position;\r\n    activeLevel: ActiveLevels;\r\n};\r\n\r\nexport interface BoxProps extends BaseProps {\r\n    /**\r\n     * real changing coords\r\n     */\r\n    xy$: BehaviorSubject<Position>;\r\n    /**\r\n     * calculated position stream (may set to empty-stream by wrapping)\r\n     */\r\n    offsetPosition$: BehaviorSubject<Position>;\r\n\r\n    position$: BehaviorSubject<Position>;\r\n    size$: BehaviorSubject<Position>;\r\n\r\n    activeLevel$: BehaviorSubject<ActiveLevels>;\r\n}\r\n\r\nexport interface DragFrameProps {\r\n    activeLevel$: BehaviorSubject<ActiveLevels>;\r\n    icon?: React.ReactNode;\r\n}\r\n\r\nexport interface DragFrameBlockProps {\r\n    activeLevel: ActiveLevels;\r\n}\r\n\r\n\r\nexport type PluginWrapperOptions = {\r\n    modifiers?: string[];\r\n};\r\n\r\nexport type ComponentWrapper<TCompProps, TResultProps> = (Component: React.ComponentType<TCompProps>, options?: PluginWrapperOptions) => React.ComponentType<TResultProps>;\r\n\r\nexport type ComponentContextWrapper<TCompProps, TResultProps, TContext> = (\r\n    Component: React.ComponentType<TCompProps>,\r\n    Context: React.Context<TContext>\r\n) => React.ComponentType<TResultProps>;\r\n\r\n\r\nexport type MagnetMarkerPosition = [Position, number];\r\n\r\nexport interface MagnetFrameProps {\r\n    markerPosition$: BehaviorSubject<Nullable<MagnetMarkerPosition>>;\r\n    // size: Position;\r\n}\r\n\r\nexport interface MagnetFrameBlockProps {\r\n    markerPosition: Nullable<MagnetMarkerPosition>;\r\n    size: Position;\r\n}\r\n\r\nexport enum MagnetCornerType {\r\n    TopLeft = '<TopLeft>',\r\n    TopLeft_TopLeft = '<TopLeft-TopLeft>',\r\n    TopLeft_TopRight = '<TopLeft-TopRight>',\r\n    TopLeft_LeftTop = '<TopLeft-LeftTop>',\r\n    TopLeft_LeftBottom = '<TopLeft-LeftBottom>',\r\n\r\n    TopRight = '<TopRight>',\r\n    TopRight_TopLeft = '<TopRight-TopLeft>',\r\n    TopRight_TopRight = '<TopRight-TopRight>',\r\n    TopRight_RightTop = '<TopRight-RightTop>',\r\n    TopRight_RightBottom = '<TopRight-RightBottom>',\r\n\r\n    BottomRight = '<BottomRight>',\r\n    BottomRight_RightTop = '<BottomRight-RightTop>',\r\n    BottomRight_RightBottom = '<BottomRight-RightBottom>',\r\n    BottomRight_BottomRight = '<BottomRight-BottomRight>',\r\n    BottomRight_BottomLeft = '<BottomRight-BottomLeft>',\r\n\r\n    BottomLeft = '<BottomLeft>',\r\n    BottomLeft_BottomRight = '<BottomLeft-BottomRight>',\r\n    BottomLeft_BottomLeft = '<BottomLeft-BottomLeft>',\r\n    BottomLeft_LeftBottom = '<BottomLeft-LeftBottom>',\r\n    BottomLeft_LeftTop = '<BottomLeft-LeftTop>',\r\n\r\n    Left_Vertical = '<left-vertical>',\r\n    Right_Vertical = '<right-vertical>',\r\n\r\n    Top_Horizontal = '<top-horizontal>',\r\n    Bottom_Horizontal = '<bottom-horizontal>',\r\n\r\n\r\n    RightTop = '<RightTop>',\r\n    RightBottom = '<RightBottom>',\r\n    LeftTop = '<LeftTop>',\r\n    LeftBottom = '<LeftBottom>',\r\n    None = '<None>',\r\n    // TopRight = 0,\r\n    // TopLeft = 1,\r\n    // BottomRight = 2,\r\n    // BottomLeft = 3,\r\n    // RightTop = 4,\r\n    // RightBottom = 5,\r\n    // LeftTop = 6,\r\n    // LeftBottom = 7,\r\n}\r\n\r\nexport type LinePosition = [Position, Position];\r\n\r\nexport type NearestFrame = { frame: LinePosition, fix: GuidType, magneted: GuidType, magnetType: MagnetCornerType };\r\n\r\nexport interface MagnetCornerProps {\r\n    nearestFrame$: BehaviorSubject<Nullable<NearestFrame>>;\r\n}\r\n\r\nexport interface MagnetCornerFrameBlockProps {\r\n    offset?: number;\r\n    type: MagnetCornerType | null;\r\n    indent: [number, number, number, number];\r\n}\r\n\r\n\r\nexport enum EventType {\r\n    StartDrag = 'StartDrag',\r\n    DragInGroup = 'DragInGroup',\r\n    Move = 'Move',\r\n    Resize = 'Resize',\r\n    StopResize = 'StopResize',\r\n    StopDrag = 'StopDrag',\r\n    Cancel = 'Cancel',\r\n    StartSelecting = 'StartSelecting',\r\n    StopSelecting = 'StopSelecting'\r\n}\r\n\r\nexport type GuidType = Nullable<string>;\r\n\r\nexport interface IStreamData {\r\n    type: EventType;\r\n    ev: MouseEvent;\r\n    elementId: GuidType;\r\n}\r\n\r\nexport interface IStreamControlData {\r\n    elementId: GuidType;\r\n}\r\n\r\nexport interface IObservablesMouse {\r\n    mouseDown: Subject<IStreamData>;\r\n    mouseMove: Subject<IStreamData>;\r\n    mouseUp: Subject<IStreamData>;\r\n    mouseLeave: Subject<IStreamData>;\r\n    mouseStop: Subject<IStreamData>;\r\n};\r\n\r\n\r\nexport interface IObservableDeltaMoves {\r\n    deltaMoves: Subject<[GuidType, Position]>;\r\n}\r\n\r\nexport interface IObservableControl {\r\n    control: BehaviorSubject<GuidType>;\r\n    group: BehaviorSubject<GuidType[]>;\r\n}\r\n\r\nexport interface IObservablesDrag {\r\n    dragStart: Subject<IStreamData>;\r\n    dragStop: Subject<IStreamData>;\r\n    drag: Subject<IStreamData>;\r\n}\r\n\r\nexport interface ILassoStreamData {\r\n    start: Position;\r\n    end: Position;\r\n    trapped: GuidType[];\r\n}\r\n\r\nexport enum TrappedType {\r\n    In = 1,\r\n    Out = -1\r\n}\r\n\r\nexport interface ITrappedItem {\r\n    guid: GuidType;\r\n    trappedType: TrappedType;\r\n}\r\n\r\nexport interface IObservableLasso {\r\n    // for capturing corners of the lasso frame\r\n    lasso: Subject<ILassoStreamData>;\r\n    trapping: Subject<ITrappedItem[]>;\r\n    trapped: BehaviorSubject<GuidType[]>;\r\n}\r\n\r\n\r\n\r\nexport enum MagnetPairDirection {\r\n    In = 1,\r\n    Out = -1\r\n}\r\n\r\nexport interface IMagnetPairIn {\r\n    items: [GuidType, GuidType];\r\n    type: MagnetCornerType;\r\n    direction: MagnetPairDirection.In;\r\n}\r\n\r\nexport interface IMagnetPairOut {\r\n    items: [GuidType];\r\n    direction: MagnetPairDirection.Out;\r\n}\r\n\r\nexport type IMagnetPair = IMagnetPairIn | IMagnetPairOut;\r\n\r\nexport interface IMagnetStreamData {\r\n    magneted: [GuidType, GuidType];\r\n    type: MagnetCornerType;\r\n}\r\n\r\nexport type IMouseStreamContext =\r\n    IObservablesMouse\r\n    & IObservableDeltaMoves\r\n    & IObservableControl\r\n    & IObservablesDrag;\r\n// & IObservableLasso;\r\n\r\nexport enum MouseButtonType {\r\n    Left = 0,\r\n    Middle = 1,\r\n    Right = 2\r\n}\r\n\r\nexport type PropertyType<TObject extends {}, TProp extends keyof TObject> = TObject[TProp];\r\n","import React from 'react'\r\nimport { BoxProps, DragFrameProps } from '@designer-core/shared/types';\r\nimport './Anchor.scss';\r\n\r\nconst AnchorDiv = <TProps extends BoxProps>(props: React.PropsWithChildren<DragFrameProps & TProps>) => {\r\n    let [marginLeft, marginTop] = [0, 0];\r\n    const handlers = props.handlers || {};\r\n    const modifiers = props.classModifiers || [];\r\n    const icon = props.icon;\r\n    return (\r\n        <div\r\n            { ...handlers }\r\n            className={ `block_anchor${modifiers.length ? ' ' + modifiers.map(t => `block_anchor--${t}`).join(' ') : ''}` }\r\n            style={ { marginLeft, marginTop } }>\r\n            { icon }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AnchorDiv;\r\n","import AnchorDiv from './AnchorDiv';\r\nimport { RendererType } from '../types';\r\n\r\nexport const renderBlockTypes: Array<[RendererType.HTML | RendererType.SVG, React.ComponentType<any>]> = [\r\n    [RendererType.HTML, AnchorDiv]\r\n];\r\n\r\nexport default AnchorDiv;\r\n","import React from 'react'\r\nimport './BoxDiv.scss';\r\nimport { BaseBoxProps } from '@designer-core/shared/types';\r\n\r\nconst BoxDiv = (props: React.PropsWithChildren<BaseBoxProps>) => {\r\n    const classModifiers = props.classModifiers || [];\r\n    const classBlocks = props.classBlocks || [];\r\n    const classElements = props.classElements || [];\r\n    const handlers = props.handlers || {};\r\n    const modifiers = [...classModifiers].map(t => `block--${t}`).join(' ');\r\n    const block = classBlocks[0] || '';\r\n    const elements = [...classElements].map(t => block && `${block}_${t}`).join(' ');\r\n    const style = props.style || {};\r\n\r\n    return <div\r\n        { ...handlers }\r\n        className={ `box-item box-item--div${block ? ' ' + block : ''}${modifiers ? ' ' + modifiers : ''}${elements ? ' ' + elements : ''}` }\r\n        style={ { left: props.position[0], top: props.position[1], width: props.size[0], height: props.size[1], ...style } }\r\n    >\r\n        { props.children }\r\n    </div>;\r\n}\r\n\r\nexport default BoxDiv;\r\n","import BoxDiv from './BoxDiv';\r\nimport { RendererType } from '../types';\r\n\r\nexport const renderBlockTypes: Array<[RendererType.HTML | RendererType.SVG, React.ComponentType<any>]> = [\r\n    [RendererType.HTML, BoxDiv]\r\n];\r\n\r\nexport default BoxDiv;\r\n","import React, { useRef, useEffect } from 'react';\r\nimport './Block.scss';\r\nimport { ContainerProps } from '../types';\r\n\r\nconst ContainerDiv = (props: React.PropsWithChildren<ContainerProps>) => {\r\n    const classModifiers = props.classModifiers || [];\r\n    const handlers = props.handlers || {};\r\n    const style = props.style || {};\r\n    const modifiers = classModifiers.map(t => `block--${t}`).join(' ');\r\n    const currentRef = useRef(null);\r\n    useEffect(() => {\r\n        if (currentRef.current && props.setRef) {\r\n            props.setRef(currentRef.current);\r\n        }\r\n    }, [currentRef, props]);\r\n\r\n    return <div\r\n        { ...handlers }\r\n        ref={ currentRef }\r\n        className={ `container block ${modifiers}` }\r\n        style={ { ...style } }\r\n    >\r\n        { props.children }\r\n    </div>;\r\n};\r\n\r\nexport default ContainerDiv;\r\n","import ContainerDiv from './ContainerDiv';\r\nimport { RendererType, ContainerProps } from '../types';\r\n\r\nexport const renderBlockTypes: Array<[RendererType.HTML | RendererType.SVG, React.ComponentType<ContainerProps>]> = [\r\n    [RendererType.HTML, ContainerDiv]\r\n];\r\n\r\nexport default ContainerDiv;\r\n","import React from 'react'\r\nimport { DragFrameBlockProps, ActiveLevels, BaseBoxProps } from '@designer-core/shared/types';\r\n\r\nconst DragFrameDiv = <TProps extends BaseBoxProps>(props: React.PropsWithChildren<DragFrameBlockProps & TProps>) => {\r\n\r\n    const { size, activeLevel } = props;\r\n\r\n    const isFrame = activeLevel !== ActiveLevels.None && activeLevel !== ActiveLevels.InGroup;\r\n\r\n    const delta = isFrame ? 20 : 0;\r\n\r\n    const [width, height] = [size[0] + delta, size[1] + delta];\r\n    const [marginLeft, marginTop] = [-delta / 2, -delta / 2];\r\n\r\n    const borderWidth = 4;\r\n\r\n    const updStyle: React.CSSProperties = {\r\n        width,\r\n        height,\r\n        marginLeft,\r\n        marginTop,\r\n        borderWidth,\r\n        padding: isFrame ? delta / 2 - borderWidth : 0,\r\n    };\r\n\r\n    console.log('drag base frame', props);\r\n\r\n    const modifiers = props.classModifiers ? props.classModifiers.map(t => `block_frame--${t}`).join(' ') : '';\r\n\r\n    return <div className={ `block_frame block_frame--${isFrame ? 'drag' : 'no-drag'}${modifiers ? ' ' + modifiers : ''}` } style={ updStyle }>\r\n        { isFrame && <div className=\"block_frame__border--crop\" style={ { position: 'absolute', marginLeft, marginTop: delta / 2, width: size[0] + delta / 2 + 2, height: size[1] - delta, borderWidth, borderStyle: 'none solid' } }></div> }\r\n        { isFrame && <div className=\"block_frame__border--crop\" style={ { position: 'absolute', marginTop, marginLeft: delta / 2, height: size[1] + delta / 2 + 2, width: size[0] - delta, borderWidth, borderStyle: 'solid none' } }></div> }\r\n        { props.children }\r\n    </div>\r\n}\r\n\r\nexport default DragFrameDiv;\r\n","import { RendererType, BlockType, ContainerProps } from './types';\r\n\r\nimport { renderBlockTypes as renderAnchorTypes } from './Anchor';\r\nimport { renderBlockTypes as renderBoxTypes } from './Box';\r\nimport { renderBlockTypes as renderContainerTypes } from './Container';\r\nimport { renderBlockTypes as renderDragFrameTypes } from './DragFrame';\r\nimport { renderBlockTypes as renderMagnetCornerTypes } from './MagnetCornerFrame';\r\nimport { renderBlockTypes as renderMagnetBorderTypes } from './MagnetFrame';\r\nimport { renderBlockTypes as renderSelectedFrameTypes } from './SelectedFrame';\r\n\r\n\r\ntype RenderTypeBlock<T> = [RendererType, React.ComponentType<T>];\r\n\r\n\r\ntype BlockByType<T> = { [key: string]: RenderTypeBlock<T>[] };\r\n\r\nconst blocks: BlockByType<any> = {\r\n    [BlockType.Anchor]: renderAnchorTypes,\r\n    [BlockType.Box]: renderBoxTypes,\r\n    [BlockType.Container]: renderContainerTypes,\r\n    [BlockType.DragFrame]: renderDragFrameTypes,\r\n    [BlockType.MagnetCornerFrame]: renderMagnetCornerTypes,\r\n    [BlockType.MagnetBorderFrame]: renderMagnetBorderTypes,\r\n    [BlockType.SelectedFrame]: renderSelectedFrameTypes,\r\n};\r\n\r\nconst EmptyBlock: React.ComponentType = () => null;\r\n\r\nexport interface IBlockFactory {\r\n    getBlock<TProps>(blockType: BlockType): React.ComponentType<TProps>;\r\n    getBlock(blockType: BlockType): React.ComponentType<ContainerProps>;\r\n}\r\n\r\nexport const factory = (renderType: RendererType): IBlockFactory => {\r\n    return {\r\n        getBlock: <T>(blockType: BlockType): React.ComponentType<T> => {\r\n            const typedBlocks: RenderTypeBlock<T>[] = blocks[blockType] || [renderType, EmptyBlock] as RenderTypeBlock<T>;\r\n            const typedBlock = typedBlocks[0][1];\r\n            return typedBlock;\r\n            // const blockRenders = blocks\r\n            //     .filter(([_blockType]) => _blockType === blockType)\r\n            //     .map<RenderTypeBlock<T>>(\r\n            //         ([_blockType, renderTypes]) =>\r\n            //             renderTypes.find(([_renderType]) => _renderType === renderType) || [renderType, EmptyBlock] as RenderTypeBlock<T>\r\n            //     );\r\n            // return blockRenders[0] ? blockRenders[0][1] : EmptyBlock;\r\n        }\r\n    };\r\n}; \r\n","import { Position, GuidType, MagnetCornerType } from '@designer-core/shared/types';\r\nimport { IContextMagnet } from './context';\r\nimport { GuidSizePosition, NearestResult } from './types';\r\n\r\ntype Quadro<T> = [T, T, T, T];\r\n\r\nexport enum EdgeType {\r\n    LeftVertical = 'left-vertical',\r\n    RightVertical = 'right-vertical',\r\n    TopHorizontal = 'top-horizontal',\r\n    BottomHorizontal = 'bottom-horizontal',\r\n    None = 'none'\r\n}\r\n\r\n\r\nexport type ClosestEdge = [number, EdgeType, GuidSizePosition | null, number];\r\n\r\n\r\n\r\nexport const MAP_EDGE_TYPE_TO_MAGNET: { [key: string]: MagnetCornerType } = {\r\n    [EdgeType.LeftVertical]: MagnetCornerType.Left_Vertical,\r\n    [EdgeType.RightVertical]: MagnetCornerType.Right_Vertical,\r\n    [EdgeType.TopHorizontal]: MagnetCornerType.Top_Horizontal,\r\n    [EdgeType.BottomHorizontal]: MagnetCornerType.Bottom_Horizontal,\r\n}\r\n\r\n\r\nexport const MAP_MAGNET_TYPE_TO_EDGE: { [key: string]: EdgeType } = {\r\n    [MagnetCornerType.Left_Vertical]: EdgeType.LeftVertical,\r\n    [MagnetCornerType.Right_Vertical]: EdgeType.RightVertical,\r\n    [MagnetCornerType.Top_Horizontal]: EdgeType.TopHorizontal,\r\n    [MagnetCornerType.Bottom_Horizontal]: EdgeType.BottomHorizontal,\r\n}\r\n\r\nconst calcIntersection = (p1: number, p2: number, np1: number, np2: number) => {\r\n    const dp1 = Math.abs(p1 - np1);\r\n    const dp2 = Math.abs(p2 - np2);\r\n    const dp3 = Math.abs(p1 - np2);\r\n    const dp4 = Math.abs(p2 - np1);\r\n    const maxDelta = (\r\n        (p1 < np1 && p2 > np2)\r\n        || (p1 > np1 && p1 < np2 && p2 < np2 && p2 > np1)\r\n        || (p1 < np1 && p2 > np1 && p2 < np2)\r\n        || (p1 > np1 && p1 < np2 && p2 > np2)\r\n    ) ? 0 : Math.min(dp1, dp2, dp3, dp4);\r\n    return maxDelta;\r\n};\r\n\r\n/**\r\n * Method for gettings closest edge between two blocks\r\n * @param CAPTURE_DELTA distance for capturing\r\n * @param currentPoints current block corner points\r\n * @param position position of another block \r\n * @param size size of another block\r\n * @returns [distance, EdgeType, min distance to another edges] tuple array\r\n */\r\nconst getClosestEdge = (CAPTURE_DELTA: number, currentPoints: Quadro<Position>, [x, y]: Position, [sx, sy]: Position, el: any): [number, EdgeType, number][] => {\r\n\r\n    const [c1, c2, c3] = currentPoints; // top-left     top-right   bottom-right    bottom-left (ignored)\r\n\r\n    // select only one edge for magneting!\r\n    let resultDelta = -1;\r\n    let closestEdge: [number, EdgeType, number][] = [];\r\n\r\n    const dLeftVertical = Math.abs(c2[0] - x);\r\n    const dRightVertical = Math.abs(c2[0] - x - sx);\r\n\r\n    const dTopHorizontal = Math.abs(c3[1] - y);\r\n    const dBottomHorizontal = Math.abs(c3[1] - y - sy);\r\n\r\n    let maxDelta = -1;\r\n\r\n\r\n    if (dLeftVertical > -1 && CAPTURE_DELTA > dLeftVertical) {\r\n\r\n        maxDelta = calcIntersection(c2[1], c3[1], y, y + sy);\r\n\r\n        if (maxDelta > -1 && maxDelta < CAPTURE_DELTA) {\r\n            resultDelta = dLeftVertical;\r\n            closestEdge = [[dLeftVertical, EdgeType.LeftVertical, maxDelta]];\r\n            // closestEdge.push([dLeftVertical, EdgeType.LeftVertical, maxDelta]);\r\n        }\r\n    }\r\n\r\n    if (dRightVertical > -1 && CAPTURE_DELTA > dRightVertical && (dRightVertical < resultDelta || resultDelta < 0)) {\r\n\r\n        maxDelta = calcIntersection(c2[1], c3[1], y, y + sy);\r\n\r\n        if (maxDelta > -1 && maxDelta < CAPTURE_DELTA) {\r\n            resultDelta = dRightVertical;\r\n            closestEdge = [[dRightVertical, EdgeType.RightVertical, maxDelta]];\r\n        }\r\n    }\r\n    if (dTopHorizontal > -1 && CAPTURE_DELTA > dTopHorizontal && (dTopHorizontal < resultDelta || resultDelta < 0)) {\r\n\r\n        maxDelta = calcIntersection(c1[0], c2[0], x, x + sx);\r\n\r\n        if (maxDelta > -1 && maxDelta < CAPTURE_DELTA) {\r\n            resultDelta = dTopHorizontal;\r\n            closestEdge = [[dTopHorizontal, EdgeType.TopHorizontal, maxDelta]];\r\n        }\r\n    }\r\n    if (dBottomHorizontal > -1 && CAPTURE_DELTA > dBottomHorizontal && (dBottomHorizontal < resultDelta || resultDelta < 0)) {\r\n\r\n        maxDelta = calcIntersection(c1[0], c2[0], x, x + sx);\r\n\r\n        if (maxDelta > -1 && maxDelta < CAPTURE_DELTA) {\r\n            resultDelta = dBottomHorizontal;\r\n            closestEdge = [[dBottomHorizontal, EdgeType.BottomHorizontal, maxDelta]];\r\n        }\r\n    }\r\n\r\n    return [...closestEdge];\r\n};\r\n\r\n\r\nexport type ItemData = { position: Position, size: Position };\r\n\r\n/**\r\n * reducing iterating function (returns item with closest edge and distance)\r\n * @param CAPTURE_DELTA distance for capturing\r\n * @param currentPoints current block corner points\r\n * @returns iterating function for reducer over items (memo as [distance, edgeType, renewing_memo_status])\r\n */\r\nexport const getClosestEdgeDistanceReducer = <T extends ItemData>(CAPTURE_DELTA: number, currentPoints: Quadro<Position>) => {\r\n    return (_memo: any, el: T, i?: number): [number, EdgeType, number][] => {\r\n        const data = getClosestEdge(CAPTURE_DELTA, currentPoints, el.position, el.size, el);\r\n        return [...data];\r\n    };\r\n};\r\n\r\nexport const getResultSize = (items: Array<[EdgeType, Position]>): Position => {\r\n    return items.reduce(\r\n        (memo, [edgeType, [sx, sy]]) => {\r\n            const resSx = edgeType === EdgeType.LeftVertical || edgeType === EdgeType.RightVertical ? sx : memo[0];\r\n            const resSy = edgeType === EdgeType.TopHorizontal || edgeType === EdgeType.BottomHorizontal ? sy : memo[1];\r\n            return [resSx, resSy];\r\n        },\r\n        [-1, -1] as Position\r\n    );\r\n};\r\n\r\ntype MagnetingEdgesResult = (distance: number, current: GuidSizePosition, closestEdge: [number, EdgeType, GuidSizePosition, number]) => NearestResult[];\r\n\r\n\r\nexport const nearestCalculation = (closestEdges: ClosestEdge[], magnetingEdges: MagnetingEdgesResult) =>\r\n\r\n    (_guid: GuidType, _mouseContext: IContextMagnet, startGuidSizePosition: GuidSizePosition) =>\r\n\r\n        (nearestYes: (_items: [NearestResult[], NearestResult[]]) => void, nearestNo: () => void) => {\r\n\r\n            const nearestData = closestEdges.reduce<[[NearestResult[], NearestResult[]], [number, number]]>(\r\n\r\n                ([[vertResult, horResult], minDistances], [distance, edgeType, closestItem, minDistanceToAnotherEdge], i) => {\r\n\r\n                    if (edgeType !== EdgeType.None && closestItem) {\r\n\r\n                        let isClosestExist = -1;\r\n\r\n                        let minVertical = minDistances[0];\r\n                        let minHorizontal = minDistances[1];\r\n\r\n                        if (edgeType === EdgeType.LeftVertical || edgeType === EdgeType.RightVertical) {\r\n                            if ((minVertical > distance) || minVertical < 0) {\r\n                                minVertical = distance;\r\n                                isClosestExist = 0;\r\n                            }\r\n                        }\r\n                        if (edgeType === EdgeType.TopHorizontal || edgeType === EdgeType.BottomHorizontal) {\r\n                            if ((minHorizontal > distance) || minHorizontal < 0) {\r\n                                minHorizontal = distance;\r\n                                isClosestExist = 1;\r\n                            }\r\n                        }\r\n\r\n                        if (isClosestExist > -1) {\r\n                            const newNearest = magnetingEdges(distance, startGuidSizePosition, [distance, edgeType, closestItem, minDistanceToAnotherEdge]);\r\n                            console.log('%c new nearest: >', 'color: yellow; background-color: #345; border: 1px solid orange;', distance, edgeType, closestItem);\r\n                            return isClosestExist === 0\r\n                                ? [[newNearest, horResult], [minVertical, minHorizontal]]\r\n                                : [[vertResult, newNearest], [minVertical, minHorizontal]];\r\n\r\n                        }\r\n                    }\r\n\r\n                    return [[vertResult, horResult], minDistances];\r\n                },\r\n                [[[], []], [-1, -1]] as [[NearestResult[], NearestResult[]], [number, number]]\r\n            );\r\n\r\n            const nearestVerticalHorizontal = nearestData[0];\r\n            const nearest: [NearestResult[], NearestResult[]] = [nearestVerticalHorizontal[0], nearestVerticalHorizontal[1]];\r\n\r\n            if ((!nearest[0].length && !nearest[1].length)) {\r\n                nearestNo();\r\n            } else {\r\n\r\n                nearestYes(nearest);\r\n            }\r\n\r\n        }\r\n","import DragFrameDiv from './DragFrameDiv';\r\nimport { RendererType } from '../types';\r\n\r\nexport const renderBlockTypes: Array<[RendererType.HTML | RendererType.SVG, React.ComponentType<any>]> = [\r\n    [RendererType.HTML, DragFrameDiv]\r\n];\r\n\r\nexport default DragFrameDiv;\r\n","import React from 'react'\r\nimport { MagnetCornerType, MagnetCornerFrameBlockProps } from '@designer-core/shared/types';\r\n\r\n\r\nconst getCornerMarker = (type: MagnetCornerType, indent: [number, number, number, number], offset?: number) => {\r\n\r\n    const [TOP_INDENT, RIGHT_INDENT, BOTTOM_INDENT, LEFT_INDENT] = indent;\r\n\r\n    let props: Partial<React.CSSProperties> = { width: 20, height: 20 };\r\n    const topLeftCorner: Partial<React.CSSProperties> = { borderTopStyle: 'solid', borderLeftStyle: 'solid' };\r\n    const topRightCorner: Partial<React.CSSProperties> = { borderTopStyle: 'solid', borderRightStyle: 'solid' };\r\n    const bottomLeftCorner: Partial<React.CSSProperties> = { borderBottomStyle: 'solid', borderLeftStyle: 'solid' };\r\n    const bottomRightCorner: Partial<React.CSSProperties> = { borderBottomStyle: 'solid', borderRightStyle: 'solid' };\r\n\r\n    const edgeStyle: Partial<React.CSSProperties> = { borderColor: 'lime' };\r\n\r\n    const verticalLine: Partial<React.CSSProperties> = offset ? { borderLeftStyle: 'solid' } : { borderRightStyle: 'solid' };\r\n    const horizontalLine: Partial<React.CSSProperties> = offset ? { borderBottomStyle: 'solid' } : { borderTopStyle: 'solid' };\r\n\r\n    let helperOffset = {};\r\n\r\n    switch (type) {\r\n\r\n        case MagnetCornerType.TopLeft_LeftBottom:\r\n            props = { ...props, ...topRightCorner, left: -LEFT_INDENT - 20, top: 0 };\r\n            break;\r\n        case MagnetCornerType.TopLeft_LeftTop:\r\n            props = { ...props, ...bottomRightCorner, left: -LEFT_INDENT - 20, top: -20 };\r\n            break;\r\n        case MagnetCornerType.TopLeft_TopLeft:\r\n            props = { ...props, ...bottomRightCorner, left: -20, top: -TOP_INDENT - 20 };\r\n            break;\r\n        case MagnetCornerType.TopLeft_TopRight:\r\n            props = { ...props, ...bottomLeftCorner, left: 0, top: -TOP_INDENT - 20 };\r\n            break;\r\n\r\n        case MagnetCornerType.TopRight_TopLeft:\r\n            props = { ...props, ...bottomRightCorner, right: 0, top: -TOP_INDENT - 20 };\r\n            break;\r\n        case MagnetCornerType.TopRight_TopRight:\r\n            props = { ...props, ...bottomLeftCorner, right: -20, top: -TOP_INDENT - 20 };\r\n            break;\r\n        case MagnetCornerType.TopRight_RightTop:\r\n            props = { ...props, ...bottomLeftCorner, right: -RIGHT_INDENT - 20, top: -20 };\r\n            break;\r\n        case MagnetCornerType.TopRight_RightBottom:\r\n            props = { ...props, ...topLeftCorner, right: -RIGHT_INDENT - 20, top: 0 };\r\n            break;\r\n\r\n\r\n        case MagnetCornerType.BottomRight_RightTop:\r\n            props = { ...props, ...bottomLeftCorner, right: -RIGHT_INDENT - 20, bottom: 0 };\r\n            break;\r\n        case MagnetCornerType.BottomRight_RightBottom:\r\n            props = { ...props, ...topLeftCorner, right: -RIGHT_INDENT - 20, bottom: -20 };\r\n            break;\r\n        case MagnetCornerType.BottomRight_BottomRight:\r\n            props = { ...props, ...topLeftCorner, right: -20, bottom: -BOTTOM_INDENT - 20 };\r\n            break;\r\n        case MagnetCornerType.BottomRight_BottomLeft:\r\n            props = { ...props, ...topRightCorner, right: 0, bottom: -BOTTOM_INDENT - 20 };\r\n            break;\r\n\r\n\r\n        case MagnetCornerType.BottomLeft_BottomRight:\r\n            props = { ...props, ...topLeftCorner, left: 0, bottom: -BOTTOM_INDENT - 20 };\r\n            break;\r\n        case MagnetCornerType.BottomLeft_BottomLeft:\r\n            props = { ...props, ...topRightCorner, left: -20, bottom: -BOTTOM_INDENT - 20 };\r\n            break;\r\n        case MagnetCornerType.BottomLeft_LeftBottom:\r\n            props = { ...props, ...topRightCorner, left: -LEFT_INDENT - 20, bottom: -20 };\r\n            break;\r\n        case MagnetCornerType.BottomLeft_LeftTop:\r\n            props = { ...props, ...bottomRightCorner, left: -LEFT_INDENT - 20, bottom: 0 };\r\n            break;\r\n\r\n\r\n        case MagnetCornerType.Left_Vertical:\r\n            helperOffset = offset ? { width: 1, top: -TOP_INDENT + 5 } : { width: 1, bottom: -BOTTOM_INDENT + 5 };\r\n            props = { ...props, ...edgeStyle, ...verticalLine, left: 0, ...helperOffset };\r\n            break;\r\n\r\n        case MagnetCornerType.Right_Vertical:\r\n            helperOffset = offset ? { width: 1, top: -TOP_INDENT + 5 } : { width: 1, bottom: -BOTTOM_INDENT + 5 };\r\n            props = { ...props, ...edgeStyle, ...verticalLine, right: 0, ...helperOffset };\r\n            break;\r\n\r\n        case MagnetCornerType.Top_Horizontal:\r\n            helperOffset = offset ? { height: 1, left: -LEFT_INDENT + 5 } : { height: 1, right: -RIGHT_INDENT + 5 };\r\n            props = { ...props, ...edgeStyle, ...horizontalLine, top: 0, ...helperOffset };\r\n            break;\r\n\r\n        case MagnetCornerType.Bottom_Horizontal:\r\n            helperOffset = offset ? { height: 1, left: -LEFT_INDENT + 5 } : { height: 1, right: -RIGHT_INDENT + 5 };\r\n            props = { ...props, ...edgeStyle, ...horizontalLine, bottom: 0, ...helperOffset };\r\n            break;\r\n\r\n        case MagnetCornerType.None:\r\n            props.width = 0;\r\n            props.height = 0;\r\n            props.top = 0;\r\n            props.left = 0;\r\n            break;\r\n\r\n        default:\r\n            props.width = 0;\r\n            props.height = 0;\r\n            props.top = 0;\r\n            props.left = 0;\r\n    }\r\n\r\n    return { ...props };\r\n};\r\n\r\n\r\nconst MagnetCornerFrameDiv = (props: MagnetCornerFrameBlockProps) => {\r\n\r\n    const { type, indent, offset } = props;\r\n\r\n    const cornerProps: Partial<React.CSSProperties> = type !== null\r\n        ? getCornerMarker(type, indent, offset)\r\n        : { top: 0, left: 0, width: 0, height: 0 };\r\n\r\n    return <div className={ `block_magnet-corner-frame` } style={ { ...cornerProps } }></div>\r\n}\r\n\r\nexport default MagnetCornerFrameDiv;\r\n","import MagnetCornerFrameDiv from './MagnetCornerFrameDiv';\r\nimport { RendererType } from '../types';\r\n\r\nexport const renderBlockTypes: Array<[RendererType.HTML | RendererType.SVG, React.ComponentType<any>]> = [\r\n    [RendererType.HTML, MagnetCornerFrameDiv]\r\n];\r\n\r\nexport default MagnetCornerFrameDiv;\r\n","import React from 'react'\r\nimport { MagnetFrameBlockProps } from '@designer-core/shared/types';\r\n\r\nconst MagnetFrameDiv = <TProps extends MagnetFrameBlockProps>(props: TProps) => {\r\n\r\n    const { markerPosition, size } = props;\r\n    return <div\r\n        className={ `block_magnet-frame block_magnet-frame--${!markerPosition || markerPosition[1] ? 'disabled' : 'active'}` }\r\n        style={ {\r\n            marginTop: -40,\r\n            marginLeft: -40,\r\n            width: size[0] + 80,\r\n            height: size[1] + 80,\r\n        } }></div>\r\n}\r\n\r\nexport default MagnetFrameDiv;\r\n","import MagnetFrameDiv from './MagnetFrameDiv';\r\nimport { RendererType } from '../types';\r\n\r\nexport const renderBlockTypes: Array<[RendererType.HTML | RendererType.SVG, React.ComponentType<any>]> = [\r\n    [RendererType.HTML, MagnetFrameDiv]\r\n];\r\n\r\n\r\nexport default MagnetFrameDiv;\r\n","import React from 'react'\r\nimport { BaseBoxProps, DragFrameBlockProps, ActiveLevels } from '@designer-core/shared/types';\r\n\r\nconst SelectedFrameBlock = <TProps extends BaseBoxProps>(props: React.PropsWithChildren<DragFrameBlockProps & TProps>) => {\r\n\r\n    const propsLevel = props.activeLevel || ActiveLevels.None;\r\n\r\n    let isFramed =\r\n        propsLevel === ActiveLevels.InGroup\r\n        || propsLevel === ActiveLevels.MoveInGroup\r\n        || propsLevel === ActiveLevels.HoverInGroup\r\n        || propsLevel === ActiveLevels.MoveByHandInGroup;\r\n\r\n    const delta = isFramed ? 10 : 0;\r\n    const width = props.size[0] + delta;\r\n    const height = props.size[1] + delta;\r\n\r\n    let [marginLeft, marginTop] = [-delta / 2, -delta / 2];\r\n\r\n    return <div className={ `block_frame block_frame--${isFramed ? 'selected' : 'not-selected'}` } style={ { width, height, marginLeft, marginTop } }>\r\n        { props.children }\r\n    </div>\r\n}\r\n\r\nexport default SelectedFrameBlock;\r\n","import SelectedFrameDiv from './SelectedFrameDiv';\r\nimport { RendererType } from '../types';\r\n\r\nexport const renderBlockTypes: Array<[RendererType.HTML | RendererType.SVG, React.ComponentType<any>]> = [\r\n    [RendererType.HTML, SelectedFrameDiv]\r\n];\r\n\r\nexport default SelectedFrameDiv;\r\n","import { IBlockFactory, factory } from './blocks';\r\nimport { RendererType } from './blocks/types';\r\n\r\nexport const blockFactory: IBlockFactory = factory(RendererType.HTML);\r\n","import React from 'react';\r\n\r\nimport { BaseBoxProps } from '@designer-core/shared/types';\r\n// import ContainerBlock from '@designer-core/shared/blocks/Container';\r\n// import BoxBlock from '@designer-core/shared/blocks/Box';\r\nimport { blockFactory } from '@designer-core/shared/config';\r\nimport { BlockType, ContainerProps } from '@designer-core/shared/blocks/types';\r\n\r\nconst BoxBlock = blockFactory.getBlock<BaseBoxProps>(BlockType.Box);\r\nconst ContainerBlock = blockFactory.getBlock<ContainerProps>(BlockType.Container);\r\n\r\nconst WorkspaceBlock = (props: React.PropsWithChildren<BaseBoxProps>) => {\r\n\r\n    const { size, xy } = props;\r\n\r\n    return (\r\n        !!size[0] && !!size[1]\r\n            ? <BoxBlock { ...props } classModifiers={ ['silver-bordered'] }>\r\n                <ContainerBlock style={ { width: size[0], height: size[1] } }>\r\n                    { props.children }\r\n                </ContainerBlock>\r\n                <div style={ { fontSize: '12px', position: 'absolute', bottom: 2, right: 2 } }>\r\n                    <div>sx={ size[0] }</div>\r\n                    <div>sy= { size[1] }</div>\r\n                </div>\r\n                <div style={ { fontSize: '12px', position: 'absolute', bottom: 2, left: 2 } }>\r\n                    <div>x={ xy[0] }</div>\r\n                    <div>y= { xy[1] }</div>\r\n                </div>\r\n            </BoxBlock>\r\n            : null\r\n    );\r\n};\r\n\r\nexport default WorkspaceBlock;\r\n","import React, { useMemo, useEffect, useRef } from 'react';\r\nimport {\r\n    ROOT_GUID,\r\n    IMouseStreamContext,\r\n    GuidType,\r\n    IStreamData,\r\n    EventType,\r\n    Nullable,\r\n    ContextPlugin\r\n} from '../types';\r\n\r\nimport { Subject, BehaviorSubject, combineLatest } from 'rxjs';\r\nimport { tap, map, switchMap, takeUntil } from 'rxjs/operators';\r\n\r\n\r\nconst getMouseStreamContainer = <TStartProps extends {}, TContextParts>(\r\n    MouseStreamContext: React.Context<Nullable<IMouseStreamContext & TContextParts>>,\r\n    plugins: ContextPlugin<any, any>[]\r\n) =>\r\n    (StartBlock: React.ComponentType<TStartProps>) => {\r\n\r\n        const Container = (props: React.PropsWithChildren<TStartProps>) => {\r\n\r\n            const pluginsRef = useRef(plugins);\r\n\r\n            const contextParts = useMemo<TContextParts>(() => {\r\n                const result: TContextParts = pluginsRef.current.reduce((memo, el: ContextPlugin<any, TContextParts>) => ({ ...memo, ...el[0] }), {} as TContextParts);\r\n                return result;\r\n            }, [pluginsRef]);\r\n\r\n\r\n            const mouseStreamContext = useMemo<IMouseStreamContext & TContextParts>(() => ({\r\n\r\n                dragStart: new Subject(),\r\n                drag: new Subject(),\r\n                dragStop: new Subject(),\r\n\r\n                control: new BehaviorSubject<GuidType>(null),\r\n                group: new BehaviorSubject<GuidType[]>([]),\r\n                deltaMoves: new Subject(),\r\n\r\n\r\n                mouseDown: new Subject(),\r\n                mouseMove: new Subject(),\r\n                mouseUp: new Subject(),\r\n                mouseLeave: new Subject(),\r\n                mouseStop: new Subject(),\r\n\r\n                ...contextParts\r\n\r\n            }), [contextParts]);\r\n\r\n\r\n            useEffect(() => {\r\n                console.log('%c start launch plugins ', 'color: yellow; background-color: darkgreen');\r\n                const effects = pluginsRef.current.map(([_part, func]) => {\r\n                    const [effect] = func(mouseStreamContext);\r\n                    return effect;\r\n                });\r\n                const mainEffect = () => {\r\n                    const results = effects.map(t => t());\r\n                    return () => {\r\n                        results.forEach(endFunc => endFunc && endFunc());\r\n                    };\r\n                };\r\n                const resultMainEffect = mainEffect();\r\n                return () => {\r\n                    console.log('%c stop launch plugins ', 'color: lime; background-color: darkgreen');\r\n                    resultMainEffect();\r\n                }\r\n            }, [mouseStreamContext, pluginsRef]);\r\n\r\n\r\n            const startMoving$ = useMemo(() => {\r\n                return mouseStreamContext.mouseDown.pipe(\r\n                    tap(ev => console.warn('tap mouseDowen elementid', ev.elementId, ev.type)),\r\n                    map(data => [data.elementId, { ...data }] as [GuidType, IStreamData])\r\n                );\r\n            }, [mouseStreamContext]);\r\n\r\n            //  main stream: stop and start moving\r\n            const movingSource$ = useMemo(() => {\r\n                return startMoving$.pipe(\r\n                    tap(([elementId]) => console.log('start moving!', elementId)),\r\n                    switchMap(\r\n                        data => combineLatest(\r\n                            new BehaviorSubject(data),\r\n                            mouseStreamContext.mouseMove\r\n                        ).pipe(\r\n                            takeUntil(mouseStreamContext.mouseStop.pipe(\r\n                                tap(({ ev }) => {\r\n                                    const elementId = mouseStreamContext.control.getValue();\r\n                                    mouseStreamContext.dragStop.next({ elementId, ev, type: EventType.StopDrag });\r\n                                    mouseStreamContext.control.next(null);\r\n                                })\r\n                            ))\r\n                        )\r\n                    )\r\n                );\r\n            }, [mouseStreamContext, startMoving$]);\r\n\r\n            useEffect(() => {\r\n\r\n                console.warn('\\n\\n effect in stream-container');\r\n\r\n                const movingSubscription = movingSource$.subscribe(([[elementId, start], move]) => {\r\n                    const [startX, startY] = [start.ev.clientX, start.ev.clientY];\r\n                    mouseStreamContext.deltaMoves.next([elementId, [move.ev.clientX - startX, move.ev.clientY - startY]]);\r\n                    mouseStreamContext.drag.next({ ...move, elementId: mouseStreamContext.control.getValue() });\r\n                });\r\n\r\n                const startDragSubscription = startMoving$.subscribe(([elementId, start]) => {\r\n                    mouseStreamContext.dragStart.next({ elementId, type: EventType.StartDrag, ev: start.ev });\r\n                });\r\n\r\n                const stopDragSubsciption = mouseStreamContext.mouseStop.subscribe((_) => {\r\n                    const currControl = mouseStreamContext.control.getValue();\r\n                    console.log('stop listening in main Drag container', currControl);\r\n                });\r\n\r\n\r\n                return () => {\r\n                    console.log('\\n\\n clear in stream-container');\r\n\r\n                    mouseStreamContext.mouseDown.complete();\r\n                    mouseStreamContext.mouseMove.complete();\r\n                    mouseStreamContext.mouseStop.complete();\r\n\r\n                    mouseStreamContext.control.complete();\r\n                    mouseStreamContext.deltaMoves.complete();\r\n\r\n                    movingSubscription.unsubscribe();\r\n                    startDragSubscription.unsubscribe();\r\n                    stopDragSubsciption.unsubscribe();\r\n                };\r\n            }, [mouseStreamContext, movingSource$, startMoving$]);\r\n\r\n            const handlers = useMemo<React.DOMAttributes<HTMLDivElement>>(() => ({\r\n                onMouseDown: (ev: React.MouseEvent<HTMLElement, MouseEvent>) => { },\r\n                onMouseMove: (ev: React.MouseEvent<HTMLElement, MouseEvent>) => {\r\n                    mouseStreamContext.mouseMove.next({ elementId: ROOT_GUID, ev: ev.nativeEvent, type: EventType.Move });\r\n                },\r\n                onMouseUp: (ev: React.MouseEvent<HTMLElement, MouseEvent>) => {\r\n                    mouseStreamContext.mouseUp.next({ elementId: ROOT_GUID, ev: ev.nativeEvent, type: EventType.Cancel });\r\n                    mouseStreamContext.mouseStop.next({ elementId: ROOT_GUID, ev: ev.nativeEvent, type: EventType.Cancel });\r\n                },\r\n                onMouseLeave: (ev: React.MouseEvent<HTMLElement, MouseEvent>) => {\r\n                    mouseStreamContext.mouseLeave.next({ elementId: ROOT_GUID, ev: ev.nativeEvent, type: EventType.Cancel });\r\n                    mouseStreamContext.mouseStop.next({ elementId: ROOT_GUID, ev: ev.nativeEvent, type: EventType.Cancel });\r\n                }\r\n\r\n            }), [mouseStreamContext]);\r\n\r\n            return (\r\n                <StartBlock { ...props } handlers={ handlers }>\r\n                    <MouseStreamContext.Provider value={ mouseStreamContext }>\r\n                        { props.children }\r\n                    </MouseStreamContext.Provider>\r\n                </StartBlock>\r\n            );\r\n        };\r\n\r\n        return Container;\r\n    };\r\n\r\nexport default getMouseStreamContainer;\r\n","import React, { useContext, useEffect, useRef } from 'react';\r\nimport { BehaviorSubject, Subscription, Observable } from 'rxjs';\r\n\r\nimport { withLatestFrom } from 'rxjs/operators';\r\nimport { IStore, IAction, ReducerMapper, ActionName, ActionReducerTuple, UsingReducer, MapStateToProps, ActionFunc } from './storeTypes';\r\nimport { IState } from '@designer-core/shared/stateTypes';\r\n\r\n\r\nconst _INIT_ACTION_ = '_init-action_' as ActionName;\r\n\r\n\r\nclass Store<TState> implements IStore<TState> {\r\n\r\n    change = new BehaviorSubject<IAction<any>>({ type: _INIT_ACTION_, payload: null });\r\n\r\n    private _actionSub: Subscription;\r\n\r\n    constructor(public state: TState, private _reducers: ReducerMapper<TState>[]) {\r\n        this._actionSub = this.change.pipe(\r\n            // tap(action => this._reducers.map((reducer) => reducer(this.state, action)))\r\n        ).subscribe((val) => {\r\n            console.log('action change: ', val);\r\n        });\r\n    }\r\n\r\n    dispatch<TPayload>(action: IAction<TPayload>): Observable<IAction<TPayload>> {\r\n        console.log('--->dispatch action: ', action);\r\n        // this.change.next(action);\r\n        return this.change;\r\n    }\r\n\r\n    close() {\r\n        this.change.complete();\r\n        this._actionSub.unsubscribe();\r\n    }\r\n}\r\n\r\nexport const combineReducers: UsingReducer = <TPayload extends {}>(reducerMappers: ActionReducerTuple<IState, TPayload>[]) =>\r\n    (state: IState, action: IAction<TPayload>) =>\r\n        reducerMappers\r\n            .filter(([actionName, _]) => actionName === action.type)\r\n            .forEach(([_, payloadReducer]) => payloadReducer(state, action.payload));\r\n\r\n\r\nconst StoreContext = React.createContext<IStore<any> | null>(null);\r\n\r\nexport const useSelector = <TState extends {}>(fn: Function) => {\r\n    const store = useContext(StoreContext) as IStore<TState>;\r\n    return fn(store.state);\r\n};\r\n\r\n\r\nexport const connect = <TState, TProps>(selector: MapStateToProps<TState, TProps>) =>\r\n\r\n    (Component: React.ComponentType<TProps>) => {\r\n\r\n        const Result = (props: React.PropsWithChildren<TProps>) => {\r\n\r\n            const propsRef = useRef(props);\r\n\r\n            const store = useContext(StoreContext) as IStore<TState>;\r\n\r\n            console.log(1111, props);\r\n\r\n            useEffect(() => {\r\n\r\n                console.log(222, propsRef.current);\r\n                const [parent$, selectors] = selector(store.state, propsRef.current);\r\n                const sub = store.change.pipe(\r\n                    withLatestFrom(parent$)\r\n                ).subscribe((value) => {\r\n                    selectors.forEach(_selector => _selector(store.state, propsRef.current));\r\n                    console.log('changed pair! >', value);\r\n                });\r\n\r\n                store.change.subscribe(data => {\r\n                    console.log('\\n\\n---------------- CHANGE STORE DATA -----');\r\n                    console.log('data: ', data);\r\n                    console.log('---------------- CHANGE STORE DATA END-----\\n\\n');\r\n                });\r\n                return () => {\r\n                    sub.unsubscribe();\r\n                }\r\n            }, [propsRef, store]);\r\n\r\n            return <Component { ...props }>{ props.children }</Component>;\r\n        };\r\n\r\n        return Result;\r\n    };\r\n\r\n\r\nexport const useAction = <TPayload, TState>(actionFunc: ActionFunc<TPayload>) => {\r\n\r\n\r\n    const Result = (payload: TPayload) => {\r\n\r\n        const store = useContext(StoreContext) as IStore<TState>;\r\n\r\n        const action = actionFunc(payload);\r\n\r\n        useEffect(() => {\r\n\r\n            let sub: Subscription | null = null;\r\n\r\n            if (action instanceof Observable) sub = action.subscribe(_action => store.dispatch(_action));\r\n            else store.dispatch<TPayload>(action);\r\n\r\n            return () => {\r\n                sub && sub.unsubscribe();\r\n            }\r\n        }, [store, action]);\r\n\r\n        // console.log('useAction', action);\r\n\r\n\r\n        // return action instanceof Observable ? action.pipe(switchMap(_action => store.dispatch(_action))) : store.dispatch<TPayload>(action);\r\n    };\r\n\r\n    return Result;\r\n};\r\n\r\n\r\nexport const useStore = <TState extends {}>(initialStore: TState, reducers: ReducerMapper<TState>[]): [IStore<TState>, React.Provider<IStore<TState> | null>] => {\r\n    const store = new Store(initialStore, reducers);\r\n    return [store, StoreContext.Provider];\r\n};\r\n\r\nexport default StoreContext;\r\n","import { BehaviorSubject } from 'rxjs';\r\nimport React, { useEffect, useState, useContext, useMemo } from 'react';\r\nimport { IStore } from '@designer-core/rxRedux/storeTypes';\r\n\r\nimport StoreContext from '@designer-core/rxRedux/storeContext';\r\n\r\n\r\nexport type DataSelector<TIdent, TElement> = (ident?: TIdent) => TElement;\r\n\r\nexport type StorageSelector<TState, TIdent, TElement> = (store: IStore<TState>) => DataSelector<TIdent, TElement>;\r\n\r\nexport interface IStorage {\r\n    send<V>(key: string, value: V): void;\r\n    get<S, V>(key: string, ident?: S): V | void;\r\n}\r\n\r\n\r\nexport type StorageService<TData> = (value: TData) => void | Promise<any>;\r\n\r\nexport type DataService<TState, TData> = (store: IStore<TState>) => StorageService<TData>;\r\n\r\nexport type MsgService<TState, TData> = [string, DataService<TState, TData>];\r\n\r\nexport type MsgSelector<TState, TIdent, TElement> = [string, StorageSelector<TState, TIdent, TElement>];\r\n\r\n\r\nexport class Storage implements IStorage {\r\n\r\n    constructor(private _services: Array<[string, StorageService<any>]>, private _selectors: [string, DataSelector<any, any>][]) { }\r\n\r\n    send<V>(key: string, value: V) {\r\n        this._services.filter(([msg]) => msg === key).forEach(([_msg, service]) => service(value));\r\n    }\r\n    get<S, V>(key: string, ident?: S): V | void {\r\n        const selector = this._selectors.find(([msg, _selector]) => msg === key);\r\n        !selector && console.log(`%c no selector -> ${key} `, 'background-color: magenta; color: yellow');\r\n        return selector && selector[1](ident);\r\n    }\r\n}\r\n\r\n\r\nexport const useSubscribedState = <T extends any>(source$: BehaviorSubject<T>): [T, React.Dispatch<React.SetStateAction<T>>] => {\r\n    const [state, setState] = useState<T>(source$.getValue());\r\n    useEffect(() => {\r\n        const subscription = source$.subscribe(value => setState(value));\r\n        return () => subscription.unsubscribe();\r\n    }, [source$]);\r\n    return [state, setState];\r\n};\r\n\r\nexport const useStorage = <TState extends any>(\r\n    guid: string,\r\n    services: MsgService<TState, any>[],\r\n    selectors: MsgSelector<TState, any, any>[]\r\n): IStorage => {\r\n\r\n    const store = useContext(StoreContext as React.Context<IStore<TState>>);\r\n\r\n    const storage = useMemo(\r\n        () => {\r\n            console.log('%c storage-->', 'color: green', guid, services, selectors);\r\n            return new Storage(\r\n                services.map(([msg, service]) => [msg, service(store)]),\r\n                selectors.map(([msg, selector]) => [msg, selector(store)]),\r\n            )\r\n        },\r\n        [guid, store, services, selectors]\r\n    );\r\n    return storage;\r\n};\r\n","import React, { useEffect, useState, useMemo } from 'react';\r\nimport { BoxProps, BaseBoxProps } from '../types';\r\n\r\n\r\n/**\r\n * @function BlockWrapper provides mapping stream datas to simple Position, XY, Size\r\n * @param Block simple Block gets base properties (xy, position, etc) \r\n */\r\nexport const WrappedBlock = (Block: React.ComponentType<BaseBoxProps>) => {\r\n\r\n    const Result = <TProps extends BoxProps>(props: React.PropsWithChildren<TProps>) => {\r\n\r\n        const { guid, size$, position$, xy$, activeLevel$, ...otherProps } = props;\r\n\r\n        const [xy, setXY] = useState(xy$.getValue());\r\n        const [position, setPosition] = useState(position$.getValue());\r\n        const [size, setSize] = useState(size$.getValue());\r\n        const [activeLevel, setActiveLevel] = useState(activeLevel$.getValue());\r\n\r\n\r\n        useEffect(() => {\r\n            const xySub = xy$.subscribe(([x, y]) => {\r\n                requestAnimationFrame(() => {\r\n                    setXY([x, y]);\r\n                });\r\n            });\r\n            const positionSub = position$.subscribe(([x, y]) => {\r\n                requestAnimationFrame(() => {\r\n                    setPosition([x, y]);\r\n                });\r\n            });\r\n            const sizeSub = size$.subscribe(([sx, sy]) => {\r\n                requestAnimationFrame(() => {\r\n                    setSize([sx, sy]);\r\n                });\r\n            });\r\n\r\n            const activeLevelSub = activeLevel$.subscribe((level) => {\r\n                requestAnimationFrame(() => {\r\n                    setActiveLevel(level);\r\n                });\r\n            });\r\n\r\n            return () => {\r\n                console.log('unsubscribe WrappedBlock', guid);\r\n                positionSub.unsubscribe();\r\n                xySub.unsubscribe();\r\n                sizeSub.unsubscribe();\r\n                activeLevelSub.unsubscribe();\r\n            };\r\n\r\n        }, [guid, size$, position$, xy$, activeLevel$]);\r\n\r\n        return <Block { ...otherProps } guid={ guid } xy={ xy } position={ position } size={ size } activeLevel={ activeLevel } >\r\n            { props.children }\r\n        </Block>;\r\n    };\r\n\r\n    return Result;\r\n}\r\n\r\n/**\r\n * ConnectedBlock provides sending BACK to position$ captured xy stream data and fix started position\r\n * @param BoxBlock simple Block gets base properties (xy, position, etc) \r\n */\r\nconst ConnectedBlock = (BoxBlock: React.ComponentType<BaseBoxProps>) => {\r\n\r\n    const ResultComponent = <TProps extends BoxProps>(props: React.PropsWithChildren<TProps>) => {\r\n\r\n        const { guid, size$, position$, xy$, activeLevel$, ...otherProps } = props;\r\n\r\n        const size = size$.getValue();\r\n        const activeLevel = activeLevel$.getValue();\r\n        const position = useMemo(() => position$.getValue(), [position$]);\r\n\r\n        const [xy, setXY] = useState(xy$.getValue());\r\n\r\n        useEffect(() => {\r\n            const xySub = xy$.subscribe(([x, y]) => {\r\n                requestAnimationFrame(() => {\r\n                    position$.next([x, y]);\r\n                    setXY([x, y]);\r\n                });\r\n            });\r\n            return () => {\r\n                console.log('unsubscribe ConnectedBlock', guid);\r\n                xySub.unsubscribe();\r\n            };\r\n        }, [guid, position$, xy$]);\r\n\r\n        return <BoxBlock { ...otherProps } guid={ guid } xy={ xy } position={ position } size={ size } activeLevel={ activeLevel } >\r\n            { props.children }\r\n        </BoxBlock>;\r\n    };\r\n\r\n    return ResultComponent;\r\n}\r\nexport default ConnectedBlock;\r\n","import React, { useState, useMemo, useEffect, useRef, useContext } from 'react';\r\n\r\nimport { useSubscribedState } from '@designer-core/shared/helpers/storage';\r\n\r\nimport BoxBlock from '@designer-core/shared/blocks/Box';\r\nimport DragFrameBlock from '@designer-core/shared/blocks/DragFrame';\r\nimport AnchorBlock from '@designer-core/shared/blocks/Anchor';\r\n\r\nimport { SELECTING_FRAME_GUID, ROOT_GUID, BoxProps, DragFrameProps, ActiveLevels, Position, IMouseStreamContext, PluginWrapperOptions } from '@designer-core/shared/types';\r\n\r\nimport { MouseStreamContext } from '../MouseStreams';\r\n\r\nimport { WrappedBlock } from '../ConnectedBlock';\r\nimport { BehaviorSubject, Subject } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\n\r\n\r\ntype DragResultProps<TProps> = DragFrameProps & TProps;\r\n\r\nconst DisplayedBlock = WrappedBlock(BoxBlock);\r\n\r\nconst DRAG_ICON = <svg className=\"anchor_icon anchor_icon--move\" viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\">\r\n    <path fillRule=\"evenodd\" d=\"M7.646.146a.5.5 0 0 1 .708 0l2 2a.5.5 0 0 1-.708.708L8.5 1.707V5.5a.5.5 0 0 1-1 0V1.707L6.354 2.854a.5.5 0 1 1-.708-.708l2-2zM8 10a.5.5 0 0 1 .5.5v3.793l1.146-1.147a.5.5 0 0 1 .708.708l-2 2a.5.5 0 0 1-.708 0l-2-2a.5.5 0 0 1 .708-.708L7.5 14.293V10.5A.5.5 0 0 1 8 10zM.146 8.354a.5.5 0 0 1 0-.708l2-2a.5.5 0 1 1 .708.708L1.707 7.5H5.5a.5.5 0 0 1 0 1H1.707l1.147 1.146a.5.5 0 0 1-.708.708l-2-2zM10 8a.5.5 0 0 1 .5-.5h3.793l-1.147-1.146a.5.5 0 0 1 .708-.708l2 2a.5.5 0 0 1 0 .708l-2 2a.5.5 0 0 1-.708-.708L14.293 8.5H10.5A.5.5 0 0 1 10 8z\" />\r\n</svg>;\r\n\r\nconst DragFrameWrapper =\r\n    <TProps extends BoxProps>(Component: React.ComponentType<TProps & Partial<DragFrameProps>>, options?: PluginWrapperOptions) => {\r\n\r\n        const ResultBlock = (props: React.PropsWithChildren<DragResultProps<TProps>>) => {\r\n\r\n            const { position$, size$, xy$, activeLevel$, ...baseProps } = props;\r\n            const { guid, handlers } = props;\r\n\r\n            const mouseContext = useContext(MouseStreamContext) as IMouseStreamContext;\r\n\r\n            const [isAnchorActive, setAnchorActivation] = useState(false);\r\n\r\n            const [newSize] = useSubscribedState(size$);\r\n\r\n            const activeLevelRef = useRef(activeLevel$.getValue());\r\n\r\n            const [activeLevel, setActiveLevelState] = useState(activeLevel$.getValue());\r\n\r\n            const emptyPosition$ = useMemo(() => new BehaviorSubject<Position>([0, 0]), []);\r\n\r\n            const propsMouseDown = useMemo(() => {\r\n                return (ev: React.MouseEvent<HTMLDivElement, MouseEvent>) => handlers && handlers.onMouseDown && handlers.onMouseDown(ev)\r\n            }, [handlers]);\r\n\r\n\r\n            useEffect(() => {\r\n\r\n                const emptyPosSub = emptyPosition$.pipe(\r\n                    // because of BehaviorSubject init value is catched in subscription!\r\n                    filter((_, i) => i > 0)\r\n                ).subscribe(([x, y]) => {\r\n                    position$.next([x, y]);\r\n                });\r\n                return () => {\r\n                    emptyPosSub.unsubscribe();\r\n                }\r\n            }, [guid, xy$, position$, emptyPosition$, activeLevel$]);\r\n\r\n            const anchorHandler = useMemo<React.DOMAttributes<HTMLDivElement>>(() => ({\r\n                onMouseDown: (ev: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n                    propsMouseDown(ev);\r\n                }\r\n            }), [propsMouseDown]);\r\n\r\n            const hover$ = useMemo(() => {\r\n                return new Subject<number>();\r\n            }, []);\r\n\r\n            const updHandlers = useMemo<React.DOMAttributes<HTMLDivElement>>(\r\n                () => handlers\r\n                    ? {\r\n                        ...handlers,\r\n                        onMouseEnter: () => {\r\n                            hover$.next(1);\r\n                        },\r\n                        onMouseLeave: () => {\r\n                            hover$.next(-1);\r\n                        },\r\n                        onMouseDown: (ev: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n                            guid === ROOT_GUID && propsMouseDown(ev);\r\n                            guid !== ROOT_GUID && ev.stopPropagation();\r\n                        }\r\n                    }\r\n                    : {},\r\n                [hover$, guid, handlers, propsMouseDown]\r\n            );\r\n\r\n            useEffect(() => {\r\n                const sub = hover$\r\n                    .pipe(\r\n                        filter(_ => !mouseContext.control.getValue() || mouseContext.control.getValue() === guid),\r\n                        filter(type => type === 1 ? [ActiveLevels.None, ActiveLevels.InGroup].includes(activeLevel$.getValue()) : true),\r\n                        filter(type => type === -1 ? [ActiveLevels.Hover, ActiveLevels.HoverInGroup].includes(activeLevel$.getValue()) : true)\r\n                    )\r\n                    .subscribe((type) => {\r\n                        let level = activeLevel$.getValue();\r\n                        if (type === 1) {\r\n                            // Enter\r\n                            activeLevelRef.current = level;\r\n                            level = level === ActiveLevels.None ? ActiveLevels.Hover : level;\r\n                            level = level === ActiveLevels.InGroup ? ActiveLevels.HoverInGroup : level;\r\n                        } else {\r\n                            // Leave\r\n                            level = activeLevelRef.current;\r\n                        }\r\n                        activeLevel$.next(level);\r\n\r\n                        setAnchorActivation(type === 1);\r\n                    });\r\n                return () => {\r\n                    console.log('unsubscribe DragFrame', guid);\r\n                    sub.unsubscribe();\r\n                };\r\n            }, [guid, hover$, mouseContext, activeLevel$, activeLevelRef]);\r\n\r\n\r\n            useEffect(() => {\r\n                const sub = activeLevel$.subscribe((level) => {\r\n                    console.log('drag activeLevel ' + guid, level);\r\n                    setActiveLevelState(level);\r\n                });\r\n                return () => sub.unsubscribe();\r\n            }, [guid, activeLevel$]);\r\n\r\n\r\n            const hoverableArr = guid !== ROOT_GUID ? ['hoverable'] : [];\r\n            const dragClassModifiers = activeLevel === ActiveLevels.MoveByHand || activeLevel === ActiveLevels.Hover ? [...hoverableArr, 'draggable', 'drag-start'] : [...hoverableArr, 'draggable'];\r\n            const innerClassModifiers = props.classModifiers || [];\r\n            const classModifiers = [...innerClassModifiers, 'wrapped-by-drag'];\r\n\r\n            const isDraggableComponent = guid !== ROOT_GUID && guid !== SELECTING_FRAME_GUID;\r\n\r\n            const optionsModifiers = options ? options.modifiers || [] : [];\r\n            const baseClassModifiers = [...innerClassModifiers, ...optionsModifiers];\r\n\r\n            return <DisplayedBlock\r\n                { ...props }\r\n                style={ null }\r\n                activeLevel={ activeLevel }\r\n                handlers={ { ...updHandlers } }\r\n                classModifiers={ dragClassModifiers }>\r\n                <DragFrameBlock { ...baseProps } classModifiers={ baseClassModifiers } activeLevel={ activeLevel } handlers={ null } size={ [newSize[0], newSize[1]] } xy={ [0, 0] } position={ [0, 0] }>\r\n                    {\r\n                        isDraggableComponent\r\n                        && activeLevel !== ActiveLevels.MoveInGroup\r\n                        && activeLevel !== ActiveLevels.InGroup\r\n                        && <AnchorBlock\r\n                            { ...props }\r\n                            handlers={ { ...anchorHandler } }\r\n                            activeLevel={ activeLevel }\r\n                            icon={ DRAG_ICON }\r\n                            classModifiers={ isAnchorActive && isDraggableComponent ? ['active'] : [] }\r\n                        />\r\n                    }\r\n                    <Component\r\n                        { ...props }\r\n                        classModifiers={ classModifiers }\r\n                        position$={ emptyPosition$ }\r\n                    >\r\n                        { props.children }\r\n                    </Component>\r\n                </DragFrameBlock>\r\n            </DisplayedBlock>;\r\n        };\r\n\r\n        return ResultBlock;\r\n    }\r\n\r\nexport default DragFrameWrapper;\r\n","import React, { useContext, useRef, useMemo, useEffect } from 'react';\r\nimport {\r\n    GuidType,\r\n    BoxProps,\r\n    DragFrameProps,\r\n    IMouseStreamContext,\r\n    ActiveLevels,\r\n    EventType,\r\n    Nullable,\r\n    ComponentWrapper,\r\n    PluginWrapperOptions\r\n} from '@designer-core/shared/types';\r\n\r\n\r\nimport { filter } from 'rxjs/operators';\r\nimport { Subscription } from 'rxjs';\r\nimport { IState } from '@designer-core/shared/stateTypes';\r\nimport { MsgService, useStorage, } from '@designer-core/shared/helpers/storage';\r\n\r\n\r\nconst getDragWrapComponent = <TProps extends BoxProps & DragFrameProps>(DragFrameWrapper: ComponentWrapper<TProps, TProps>) =>\r\n    <TContext extends IMouseStreamContext>(\r\n        MouseStreamContext: React.Context<Nullable<TContext>>,\r\n        getHandlers: (elementId: GuidType, mContext: TContext) => React.DOMAttributes<HTMLElement>\r\n    ) => (Component: React.ComponentType<TProps>, services: MsgService<IState, any>[], _selectors: any, options?: PluginWrapperOptions) => {\r\n\r\n        const MovingComponent = DragFrameWrapper(Component, options);\r\n\r\n        const ResultComponent = (props: React.PropsWithChildren<TProps>) => {\r\n\r\n            const { guid, position$, xy$, activeLevel$ } = props;\r\n\r\n            const mouseContext = useContext(MouseStreamContext) as TContext;\r\n\r\n            const storage = useStorage(`draggable: ${guid}`, services, []);\r\n\r\n            const startPositionRef = useRef(xy$.getValue());\r\n            const activeLevelRef = useRef(activeLevel$.getValue());\r\n\r\n            const handlers = useMemo<React.DOMAttributes<HTMLElement>>(() => {\r\n                return getHandlers(guid, mouseContext);\r\n            }, [guid, mouseContext]);\r\n\r\n            useEffect(() => {\r\n                const moveSubscription: Subscription = mouseContext.deltaMoves.pipe(\r\n                    filter(([elementId]) => guid === elementId)\r\n                ).subscribe(([_elementId, deltaPosition]) => {\r\n\r\n                    const [x, y] = deltaPosition;\r\n                    const [lx, ly] = startPositionRef.current;\r\n                    const [newX, newY] = [x + lx, y + ly];\r\n\r\n                    storage.send('position', [guid, [newX, newY]]);\r\n\r\n                    xy$.next([newX, newY]);\r\n                });\r\n                return () => moveSubscription.unsubscribe();\r\n            }, [mouseContext, storage, guid, xy$]);\r\n\r\n            useEffect(() => {\r\n\r\n                const stopSubscription = mouseContext.dragStop.pipe(\r\n                    filter(({ elementId }) => elementId === guid),\r\n                ).subscribe((_) => {\r\n                    activeLevel$.next(activeLevelRef.current);\r\n                    const [x, y] = position$.getValue();\r\n                    startPositionRef.current = [x, y];\r\n                });\r\n\r\n                const startSubscription = mouseContext.dragStart.pipe(\r\n                    filter(({ elementId }) => elementId === guid)\r\n                ).subscribe(({ type }) => {\r\n\r\n                    activeLevelRef.current = activeLevel$.getValue();\r\n                    // drag as part of selected group!\r\n                    let level = type === EventType.DragInGroup ? ActiveLevels.MoveInGroup : activeLevelRef.current;\r\n                    if (type !== EventType.DragInGroup) {\r\n                        level = level === ActiveLevels.Hover ? ActiveLevels.MoveByHand : level;\r\n                        level = level === ActiveLevels.HoverInGroup ? ActiveLevels.MoveByHandInGroup : level;\r\n                    }\r\n                    activeLevel$.next(level);\r\n\r\n                    const [x, y] = position$.getValue();\r\n                    startPositionRef.current = [x, y];\r\n                });\r\n\r\n\r\n                return () => {\r\n                    startSubscription.unsubscribe();\r\n                    stopSubscription.unsubscribe();\r\n                };\r\n            }, [guid, mouseContext, position$, xy$, activeLevel$, startPositionRef, activeLevelRef]);\r\n\r\n            return (\r\n                <MovingComponent { ...props } handlers={ handlers }>\r\n                    { props.children }\r\n                </MovingComponent>\r\n            );\r\n        };\r\n\r\n        return ResultComponent;\r\n    };\r\n\r\n\r\nexport default getDragWrapComponent;\r\n","import {\r\n    ContextPlugin,\r\n    IObservablesMouse,\r\n    IObservablesDrag,\r\n    IMagnetStreamData,\r\n    IMagnetPair,\r\n    MagnetPairDirection,\r\n    SELECTING_FRAME_GUID,\r\n    ROOT_GUID,\r\n    GuidType,\r\n} from '@designer-core/shared/types';\r\nimport { Subject, BehaviorSubject } from 'rxjs';\r\nimport { tap, switchMap, takeUntil } from 'rxjs/operators';\r\n\r\nexport interface IContextMagnet {\r\n    magneted: BehaviorSubject<IMagnetStreamData[]>;\r\n    magneting: Subject<IMagnetPair>;\r\n    magnetingStart: Subject<GuidType>;\r\n}\r\n\r\nconst contextPart: IContextMagnet = {\r\n    magneted: new BehaviorSubject<IMagnetStreamData[]>([]),\r\n    magneting: new Subject<IMagnetPair>(),\r\n    magnetingStart: new Subject(),\r\n};\r\n\r\nconst getReactEffect = (mouseStreamContext: IContextMagnet & IObservablesDrag & IObservablesMouse): React.EffectCallback => () => {\r\n\r\n    const source$ = mouseStreamContext.magnetingStart.pipe(\r\n        tap((elementId) => elementId !== SELECTING_FRAME_GUID && elementId !== ROOT_GUID),\r\n        switchMap(\r\n            // magneting IN\r\n            //      -> clear previous magnet pair! (we could have multiple pairs with GUID-ONE and many GUIDs TWO)\r\n            // magneting OUT\r\n            //      -> clear all pairs for current (in common case - we have multiple pairs for one GUID, but here - ONE GUID - ONE PAIR)\r\n            _ => mouseStreamContext.magneting.pipe(\r\n                tap(\r\n                    val => {\r\n\r\n                        const magnetedItems = mouseStreamContext.magneted.getValue();\r\n\r\n                        const [fixGuid] = val.items;\r\n                        const magnetingGuid = val.direction === MagnetPairDirection.In ? val.items[1] : null;\r\n\r\n                        const asInPairs: IMagnetStreamData[] = val.direction === MagnetPairDirection.In\r\n                            ? magnetedItems.filter(t => t.magneted[0] !== fixGuid || t.magneted[1] !== magnetingGuid)\r\n                            : [];\r\n\r\n                        const inPairs: IMagnetStreamData[] = val.direction === MagnetPairDirection.In\r\n                            ? [...asInPairs, { magneted: [fixGuid, magnetingGuid], type: val.type }]\r\n                            : [];\r\n\r\n                        const outPairs: IMagnetStreamData[] = val.direction === MagnetPairDirection.Out\r\n                            ? magnetedItems.filter(t => !t.magneted.includes(fixGuid))\r\n                            : [];\r\n\r\n                        mouseStreamContext.magneted.next([...inPairs, ...outPairs]);\r\n                    }\r\n                ),\r\n                takeUntil(mouseStreamContext.mouseStop)\r\n            )\r\n        )\r\n    );\r\n\r\n    const subscribtion = source$.subscribe(_ => { });\r\n\r\n\r\n    return () => {\r\n        subscribtion.unsubscribe();\r\n    }\r\n};\r\n\r\nconst getDeps = (mouseStreamContext: IContextMagnet & IObservablesMouse & IObservablesDrag): React.DependencyList => [mouseStreamContext];\r\n\r\nconst contextPlugin: ContextPlugin<IContextMagnet & IObservablesMouse & IObservablesDrag, IContextMagnet> = [\r\n    { ...contextPart },\r\n    (mouseContext) => [getReactEffect(mouseContext), getDeps(mouseContext)]\r\n];\r\n\r\nexport default contextPlugin;\r\n","import React, { useRef, useState, useContext, useEffect, useMemo } from 'react';\r\nimport {\r\n    SELECTING_FRAME_GUID,\r\n    GuidType,\r\n    Position,\r\n    BoxProps,\r\n    DragFrameProps,\r\n    ComponentWrapper,\r\n    ActiveLevels,\r\n    EventType,\r\n    TrappedType,\r\n    Nullable,\r\n    IObservablesMouse,\r\n    IObservablesDrag,\r\n    IObservableDeltaMoves,\r\n    IObservableControl\r\n} from '@designer-core/shared/types';\r\nimport { filter, tap, switchMap, takeUntil } from 'rxjs/operators';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { IContextLasso } from './context';\r\n\r\nconst getSelectableWrapComponent = <TProps extends BoxProps>(\r\n    SelectedFrameWrapper: ComponentWrapper<TProps, TProps & DragFrameProps>\r\n) =>\r\n    <TContext extends IContextLasso & IObservablesDrag & IObservablesMouse & IObservableDeltaMoves & IObservableControl>(\r\n        MouseStreamContext: React.Context<Nullable<TContext>>\r\n    ) =>\r\n\r\n        (Component: React.ComponentType<TProps>) => {\r\n\r\n            const SelectedFrameComponent = SelectedFrameWrapper(Component);\r\n\r\n            const ResultComponent = (props: React.PropsWithChildren<TProps & Partial<DragFrameProps>>) => {\r\n\r\n                const { activeLevel$, guid, xy$, position$, size$ } = props;\r\n\r\n                const activeLevelRef = useRef(activeLevel$.getValue());\r\n\r\n                const startXYRef = useRef([0, 0]) as React.MutableRefObject<Position>;\r\n                const [inLasso, setInLasso] = useState(false);\r\n                const inLassoRef = useRef(inLasso) as React.MutableRefObject<typeof inLasso>;\r\n                const groupDragRef = useRef(false) as React.MutableRefObject<boolean>;\r\n\r\n                const mouseContext = useContext(MouseStreamContext) as TContext;\r\n\r\n                //  clear group items in Lasso (moving non-group block)\r\n                useEffect(() => {\r\n                    const lassoStartSub = mouseContext.mouseDown.pipe(\r\n                        filter(({ elementId }) =>\r\n                            inLassoRef.current && (\r\n                                (elementId === SELECTING_FRAME_GUID || !mouseContext.group.getValue().includes(elementId))\r\n                                && mouseContext.group.getValue().includes(guid)\r\n                            )\r\n                        )\r\n                    ).subscribe(({ ev }) => {\r\n                        groupDragRef.current = false;\r\n                        mouseContext.dragStop.next({ elementId: guid, ev, type: EventType.StopDrag });\r\n                        mouseContext.group.next(mouseContext.group.getValue().filter(t => t !== guid));\r\n                        inLassoRef.current = false;\r\n\r\n                        activeLevel$.next(ActiveLevels.None);\r\n\r\n                        setInLasso(false);\r\n                    });\r\n                    return () => {\r\n                        lassoStartSub.unsubscribe();\r\n                    }\r\n                }, [guid, mouseContext, activeLevel$, inLassoRef, groupDragRef]);\r\n\r\n                //  clear drag status\r\n                useEffect(() => {\r\n                    const dragGroupStopSub = mouseContext.mouseStop.pipe(\r\n                        filter(_ => groupDragRef.current && inLassoRef.current && mouseContext.group.getValue().includes(guid)),\r\n                    ).subscribe(({ ev }) => {\r\n                        groupDragRef.current = false;\r\n                        mouseContext.dragStop.next({ elementId: guid, ev: ev, type: EventType.StopDrag });\r\n                    });\r\n                    return () => {\r\n                        dragGroupStopSub.unsubscribe();\r\n                    }\r\n                }, [guid, mouseContext, inLassoRef, groupDragRef]);\r\n\r\n                //  changing X-Y position (calculate new position for group)\r\n                useEffect(() => {\r\n                    const groupsSubscription = mouseContext.mouseDown.pipe(\r\n                        filter(({ elementId }) => inLassoRef.current && elementId !== SELECTING_FRAME_GUID && mouseContext.group.getValue().includes(elementId)),\r\n                        tap(_ => startXYRef.current = xy$.getValue()),\r\n                        tap(({ ev, elementId }) => {\r\n                            if (!groupDragRef.current) groupDragRef.current = true;\r\n                            // start drag stream for another items in group!\r\n                            guid !== elementId && mouseContext.dragStart.next({ elementId: guid, ev: ev, type: EventType.DragInGroup });\r\n                        }),\r\n                        switchMap(\r\n                            ({ elementId: startElementId }) => {\r\n                                return mouseContext.deltaMoves.pipe(\r\n                                    filter(([elementId, _]) => elementId === startElementId && elementId === guid),\r\n                                    takeUntil(mouseContext.dragStop.pipe(filter(({ elementId }) => elementId === guid)))\r\n                                )\r\n                            }\r\n                        )\r\n                    ).subscribe(([_elementId, position]) => {\r\n                        const [startX, startY] = startXYRef.current;\r\n                        xy$.next([startX + position[0], startY + position[1]]);\r\n                        mouseContext.group.getValue().forEach(tId => tId !== guid && mouseContext.deltaMoves.next([tId, position]));\r\n                    });\r\n                    return () => {\r\n                        groupsSubscription.unsubscribe();\r\n                    };\r\n                }, [guid, mouseContext, startXYRef, xy$, position$, activeLevel$, inLassoRef, groupDragRef]);\r\n\r\n\r\n                //  set inLasso flag (by intersection calculating)\r\n                useEffect(() => {\r\n                    const lassoSubscription = mouseContext.lasso.subscribe(({ end, start, trapped }) => {\r\n\r\n                        const positionStart = xy$.getValue();\r\n                        const currentSize = size$.getValue();\r\n\r\n                        const positionEnd = [positionStart[0] + currentSize[0], positionStart[1] + currentSize[1]];\r\n                        let inLasso = start[0] < positionStart[0] && end[0] > positionEnd[0];\r\n                        inLasso = inLasso && start[1] < positionStart[1] && end[1] > positionEnd[1];\r\n                        if (inLasso !== inLassoRef.current) {\r\n                            if (end[0] || end[1] || start[0] || start[1]) {\r\n                                inLasso && mouseContext.trapping.next([{ guid, trappedType: TrappedType.In }]);\r\n                                !inLasso && mouseContext.trapping.next([{ guid, trappedType: TrappedType.Out }]);\r\n                                inLassoRef.current = inLasso;\r\n\r\n\r\n                                let level = activeLevel$.getValue();\r\n\r\n                                if (inLasso) {\r\n                                    activeLevelRef.current = activeLevel$.getValue();\r\n\r\n                                    level = level === ActiveLevels.None ? ActiveLevels.InGroup : level;\r\n                                    level = level === ActiveLevels.Hover ? ActiveLevels.HoverInGroup : level;\r\n\r\n                                } else level = activeLevelRef.current;\r\n\r\n                                activeLevel$.next(level);\r\n\r\n                                setInLasso(inLasso);\r\n                            }\r\n                        }\r\n                    });\r\n                    return () => {\r\n                        lassoSubscription.unsubscribe();\r\n                    };\r\n                }, [guid, mouseContext, xy$, size$, activeLevel$, activeLevelRef, inLassoRef]);\r\n\r\n                const _classModifiers = props.classModifiers || [];\r\n                const classModifiers = inLasso ? [..._classModifiers, 'in-lasso-trapped'] : [..._classModifiers];\r\n\r\n                return <SelectedFrameComponent { ...props } classModifiers={ classModifiers }>\r\n                    { props.children }\r\n                </SelectedFrameComponent>;\r\n            };\r\n            return ResultComponent;\r\n        };\r\n\r\n\r\nexport const getSelectableLasso = <TContext extends IContextLasso & IObservablesDrag & IObservableDeltaMoves>(\r\n    MouseStreamContext: React.Context<Nullable<TContext>>\r\n) =>\r\n    <TProps extends BoxProps>(BlockWrapper: React.ComponentType<TProps>) => {\r\n\r\n        const ResultComponent = (props: React.PropsWithChildren<TProps>) => {\r\n\r\n            const { size$, position$, offsetPosition$ } = props;\r\n\r\n            const mouseContext = useContext(MouseStreamContext) as TContext;\r\n\r\n            const fixStartPositionRef = useRef([0, 0]) as React.MutableRefObject<Position>;\r\n            const trappedRef = useRef([]) as React.MutableRefObject<GuidType[]>;\r\n\r\n            const newSize$ = useMemo<BehaviorSubject<Position>>(() => new BehaviorSubject(size$.getValue()), [size$]);\r\n\r\n            const emptyPosition$ = useMemo<BehaviorSubject<Position>>(() => new BehaviorSubject([0, 0]), []);\r\n            const emptyXY$ = useMemo<BehaviorSubject<Position>>(() => new BehaviorSubject([0, 0]), []);\r\n\r\n            useEffect(() => {\r\n\r\n                console.log('%c init sub in Lasso ', 'background-color: yellow; color: red; border: 1px solid black;');\r\n\r\n                const lassoMoveSub = mouseContext.dragStart\r\n                    .pipe(\r\n                        filter(({ elementId }) => SELECTING_FRAME_GUID === elementId),\r\n                        tap(({ ev }) => {\r\n                            const [px, py] = offsetPosition$.getValue();\r\n                            console.log('offsetPosition$', [px, py]);\r\n                            fixStartPositionRef.current = [ev.clientX - px, ev.clientY - py];\r\n                            position$.next([ev.clientX - px, ev.clientY - py]);\r\n                        }),\r\n                        switchMap(_ => mouseContext.deltaMoves.pipe(\r\n                            takeUntil(mouseContext.dragStop.pipe(\r\n                                tap(_ => {\r\n                                    fixStartPositionRef.current = [0, 0];\r\n                                    position$.next([0, 0]);\r\n                                    newSize$.next([0, 0]);\r\n                                    mouseContext.lasso.next({ start: [0, 0], end: [0, 0], trapped: [] });\r\n                                })\r\n                            ))\r\n                        ))\r\n                    )\r\n                    .subscribe(([_, position]) => {\r\n                        const [rx, ry] = position;\r\n                        const [_startX, _startY] = fixStartPositionRef.current;\r\n                        let x = _startX, y = _startY;\r\n                        let sx = rx, sy = ry;\r\n                        if (rx < 0) { sx = -rx; x = _startX + rx; }\r\n                        if (ry < 0) { sy = -ry; y = _startY + ry; }\r\n\r\n                        if (rx < 0 || ry < 0) {\r\n                            position$.next([x, y]);\r\n                        }\r\n                        newSize$.next([sx, sy]);\r\n\r\n                        mouseContext.lasso.next({\r\n                            start: [x, y],\r\n                            end: [x + sx, y + sy],\r\n                            trapped: []\r\n                        });\r\n                    });\r\n\r\n                return () => {\r\n                    console.log('%c unsub in selectable lasso: handlers ', 'color: yellow; background-color: brown;');\r\n                    lassoMoveSub.unsubscribe();\r\n                };\r\n            }, [mouseContext, emptyXY$, newSize$, position$, offsetPosition$, fixStartPositionRef, trappedRef]);\r\n\r\n            return (\r\n                <BlockWrapper\r\n                    { ...props }\r\n                    size$={ newSize$ }\r\n                    xy$={ emptyXY$ }\r\n                    position$={ emptyPosition$ }\r\n                    classModifiers={ ['selectable'] }\r\n                    classBlocks={ ['block'] }\r\n                    classElements={ ['selecting-frame'] }\r\n                >\r\n                    { props.children }\r\n                </BlockWrapper>\r\n            );\r\n        };\r\n\r\n        return ResultComponent;\r\n    };\r\n\r\n\r\nexport default getSelectableWrapComponent;\r\n","import { BehaviorSubject } from 'rxjs';\r\nimport { Position } from './types';\r\n\r\nexport enum UIPrimitive {\r\n    Root = 'root',\r\n    CircleBlock = 'circle',\r\n    RectangleBlock = 'rectangle',\r\n    ConditionBlock = 'condition',\r\n    TimerBlock = 'timer'\r\n}\r\n\r\nexport interface IControlData {\r\n    guid: string;\r\n    id?: string | number;\r\n    position: [number, number];\r\n    size: [number, number];\r\n    style?: React.CSSProperties,\r\n    classType: string;\r\n    uiType: UIPrimitive;\r\n}\r\n\r\nexport interface IRenderer {\r\n    absoluteOffset: Position;\r\n}\r\n\r\nexport interface IState {\r\n    root$: BehaviorSubject<IControlData>;\r\n    controls$: BehaviorSubject<IControlData[]>;\r\n}\r\n","import React, { useContext, useEffect, useRef, useMemo, useCallback } from 'react';\r\nimport { filter } from 'rxjs/operators';\r\n\r\nimport {\r\n    GuidType,\r\n    Position,\r\n    MagnetCornerType,\r\n    BoxProps,\r\n    Nullable,\r\n    NearestFrame,\r\n    MagnetMarkerPosition,\r\n    IMagnetPair,\r\n    MagnetPairDirection,\r\n    IMagnetPairIn,\r\n    ComponentWrapper,\r\n    MagnetFrameProps,\r\n    MagnetCornerProps,\r\n    IObservablesDrag,\r\n    IObservableControl,\r\n} from '@designer-core/shared/types';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { IState, IControlData } from '@designer-core/shared/stateTypes';\r\nimport { MsgSelector, useStorage, MsgService } from '@designer-core/shared/helpers/storage';\r\nimport { IContextMagnet } from './context';\r\nimport { IContextResizer } from '../resizable';\r\n\r\nimport { nearestCalculation, getClosestEdgeDistanceReducer, EdgeType, getResultSize, MAP_EDGE_TYPE_TO_MAGNET, MAP_MAGNET_TYPE_TO_EDGE } from './nearestEdges';\r\n\r\nimport { Indents, GuidSizePosition, NearestResult, CornerData, ClosestData } from './types';\r\n\r\n\r\nconst DETAIL_MAGNET_TYPES: Array<[MagnetCornerType, number, MagnetCornerType]> = [\r\n    [MagnetCornerType.TopLeft, 1, MagnetCornerType.TopLeft_LeftBottom],\r\n    [MagnetCornerType.TopLeft, 2, MagnetCornerType.TopLeft_LeftTop],\r\n    [MagnetCornerType.TopLeft, 3, MagnetCornerType.TopLeft_TopLeft],\r\n    [MagnetCornerType.TopLeft, 4, MagnetCornerType.TopLeft_TopRight],\r\n\r\n    [MagnetCornerType.TopRight, 5, MagnetCornerType.TopRight_TopLeft],\r\n    [MagnetCornerType.TopRight, 6, MagnetCornerType.TopRight_TopRight],\r\n    [MagnetCornerType.TopRight, 7, MagnetCornerType.TopRight_RightTop],\r\n    [MagnetCornerType.TopRight, 8, MagnetCornerType.TopRight_RightBottom],\r\n\r\n    [MagnetCornerType.BottomRight, 9, MagnetCornerType.BottomRight_RightTop],\r\n    [MagnetCornerType.BottomRight, 10, MagnetCornerType.BottomRight_RightBottom],\r\n    [MagnetCornerType.BottomRight, 11, MagnetCornerType.BottomRight_BottomRight],\r\n    [MagnetCornerType.BottomRight, 12, MagnetCornerType.BottomRight_BottomLeft],\r\n\r\n    [MagnetCornerType.BottomLeft, 13, MagnetCornerType.BottomLeft_BottomRight],\r\n    [MagnetCornerType.BottomLeft, 14, MagnetCornerType.BottomLeft_BottomLeft],\r\n    [MagnetCornerType.BottomLeft, 15, MagnetCornerType.BottomLeft_LeftBottom],\r\n    [MagnetCornerType.BottomLeft, 16, MagnetCornerType.BottomLeft_LeftTop],\r\n];\r\n\r\nconst getDetailMagnetType = (magnetType: MagnetCornerType, direction: number): MagnetCornerType => {\r\n    const detail = DETAIL_MAGNET_TYPES.find(([_magnetType, _direction, _resultMagnetType]) => magnetType === _magnetType && direction === _direction);\r\n    return detail ? detail[2] : MagnetCornerType.None;\r\n};\r\n\r\n\r\n\r\nconst MagnetAllEdges = (CAPTURE_DELTA: number, [TOP_INDENT, RIGHT_INDENT, BOTTOM_INDENT, LEFT_INDENT]: Indents) => {\r\n\r\n    return (distance: number, current: GuidSizePosition, closestEdge: [number, EdgeType, GuidSizePosition, number]): NearestResult[] => {\r\n        const [x, y] = current.position;\r\n        const [sx, sy] = current.size;\r\n        const [edgeDistance, edgeType, itemGuidSizePos, minDistanceToAnotherEdge] = closestEdge;\r\n\r\n        const MIN_WIDTH = 50, MIN_HEIGHT = 50;\r\n\r\n        console.log('minDistanceToAnotherEdge', minDistanceToAnotherEdge, itemGuidSizePos.guid);\r\n\r\n        if (edgeDistance < CAPTURE_DELTA && minDistanceToAnotherEdge < CAPTURE_DELTA) {\r\n\r\n            let [resultSx, resultSy] = [sx, sy];\r\n\r\n            const { position: [itemX, itemY], size: [itemSx, itemSy] } = itemGuidSizePos;\r\n\r\n            const [dx, dy] = [itemX - x, itemY - y];\r\n\r\n            switch (edgeType) {\r\n                case EdgeType.LeftVertical:\r\n                    [resultSx, resultSy] = dx > MIN_WIDTH ? [dx, sy] : [sx, sy];\r\n                    break;\r\n                case EdgeType.RightVertical:\r\n                    [resultSx, resultSy] = dx + itemSx > MIN_WIDTH ? [dx + itemSx, sy] : [sx, sy];\r\n                    break;\r\n                case EdgeType.TopHorizontal:\r\n                    [resultSx, resultSy] = dy > MIN_HEIGHT ? [sx, dy] : [sx, sy];\r\n                    break;\r\n                case EdgeType.BottomHorizontal:\r\n                    [resultSx, resultSy] = dy + itemSy > MIN_HEIGHT ? [sx, dy + itemSy] : [sx, sy];\r\n                    break;\r\n                default:\r\n                    [resultSx, resultSy] = [sx, sy];\r\n            }\r\n\r\n            return [\r\n                [itemGuidSizePos.guid, [resultSx, resultSy], itemGuidSizePos.size, MAP_EDGE_TYPE_TO_MAGNET[edgeType] || MagnetCornerType.None]\r\n            ];\r\n        }\r\n\r\n        return [];\r\n    };\r\n};\r\n\r\n\r\nconst MagnetAllCorners = (CAPTURE_DELTA: number, [TOP_INDENT, RIGHT_INDENT, BOTTOM_INDENT, LEFT_INDENT]: Indents) =>\r\n    (distance: number, currentCorner: CornerData, closestCorner: CornerData, resultMagnetType: MagnetCornerType): NearestResult[] => {\r\n\r\n        const closestCornerType = closestCorner[0];\r\n\r\n        const [csx, csy] = currentCorner[1].size;\r\n        const currentCornerType = currentCorner[0];\r\n\r\n        const { guid, position: [x, y], size: [sx, sy] } = closestCorner[1];\r\n        const { position: [cx, cy] } = currentCorner[1];\r\n\r\n        if (distance > CAPTURE_DELTA) return [];\r\n        if (closestCornerType === currentCornerType) return [];\r\n\r\n        let result: NearestResult[] = [];\r\n\r\n        let leftRight = [MagnetCornerType.TopLeft, MagnetCornerType.BottomLeft].indexOf(closestCornerType) > -1 ? 1 : 0;\r\n        let topBottom = [MagnetCornerType.TopLeft, MagnetCornerType.TopRight].indexOf(closestCornerType) > -1 ? 1 : 0;\r\n\r\n        const leftRightPoint = x - leftRight * LEFT_INDENT + (1 - leftRight) * RIGHT_INDENT,\r\n            topBottomPoint = y - topBottom * TOP_INDENT + (1 - topBottom) * BOTTOM_INDENT;\r\n\r\n        let distLeftRightPoint = (leftRightPoint - cx) * (leftRightPoint - cx) + (y - cy) * (y - cy);\r\n        let distTopBottomPoint = (x - cx) * (x - cx) + (topBottomPoint - cy) * (topBottomPoint - cy);\r\n\r\n        // console.log('all-lefts/rights-->', Math.sqrt(distLeftRightPoint), distance, [leftRightPoint, y], [x, y]);\r\n        // console.log('all-tops/bottoms-->', Math.sqrt(distTopBottomPoint), distance, [x, topBottomPoint], [x, y]);\r\n\r\n        // let tempX = 0;\r\n        let tempY = 0;\r\n\r\n        let closeToLeftRight = 1;\r\n\r\n        if (distLeftRightPoint < distTopBottomPoint) {\r\n            // left/right-point\r\n            tempY = y;\r\n        } else {\r\n            // top/bottom-point\r\n            tempY = topBottomPoint;\r\n            closeToLeftRight = 0;\r\n        }\r\n\r\n        let resX = 0, resY = 0, magnetType = closestCornerType;\r\n        let magnetDirection = 0;\r\n\r\n        switch (currentCornerType) {\r\n            case MagnetCornerType.TopRight:\r\n                magnetDirection = topBottom ? 1 : 15;\r\n                magnetDirection = !topBottom && !closeToLeftRight ? (1 - leftRight) * 12 + leftRight * 14 : magnetDirection;\r\n                [resX, resY] = topBottom\r\n                    ? [leftRightPoint - leftRight * csx, y]\r\n                    : [closeToLeftRight * leftRightPoint + (1 - closeToLeftRight) * x - csx, tempY];\r\n                magnetType = getDetailMagnetType(closestCornerType, magnetDirection);\r\n                result = magnetType !== MagnetCornerType.None ? [\r\n                    [guid, [resX, resY], [sx, sy], magnetType]\r\n                ] : [];\r\n                break;\r\n\r\n            case MagnetCornerType.TopLeft:\r\n                magnetDirection = topBottom ? 8 : 10;\r\n                magnetDirection = !topBottom && !closeToLeftRight ? (1 - leftRight) * 11 + leftRight * 13 : magnetDirection;\r\n                [resX, resY] = [8, 10].indexOf(magnetDirection) > -1\r\n                    ? [leftRightPoint, y]\r\n                    : [x, topBottomPoint];\r\n                magnetType = getDetailMagnetType(closestCornerType, magnetDirection);\r\n                result = magnetType !== MagnetCornerType.None ? [\r\n                    [guid, [resX, resY], [sx, sy], magnetType]\r\n                ] : [];\r\n                break;\r\n\r\n\r\n            case MagnetCornerType.BottomRight:\r\n                magnetDirection = closeToLeftRight ? 16 * (1 - topBottom) + 2 * topBottom : 5 * (1 - leftRight) + 3 * leftRight;\r\n                [resX, resY] = closeToLeftRight\r\n                    ? [leftRightPoint - csx, y - csy]\r\n                    : [x - csx, topBottomPoint - csy];\r\n                magnetType = getDetailMagnetType(closestCornerType, magnetDirection);\r\n                result = magnetType !== MagnetCornerType.None ? [\r\n                    [guid, [resX, resY], [sx, sy], magnetType]\r\n                ] : [];\r\n                break;\r\n\r\n\r\n            case MagnetCornerType.BottomLeft:\r\n                magnetDirection = closeToLeftRight ? 9 * (1 - topBottom) + 7 * topBottom : 6 * (1 - leftRight) + 4 * leftRight;\r\n                [resX, resY] = closeToLeftRight\r\n                    ? [leftRightPoint, y - csy]\r\n                    : [x, topBottomPoint - csy];\r\n                magnetType = getDetailMagnetType(closestCornerType, magnetDirection);\r\n                result = magnetType !== MagnetCornerType.None ? [\r\n                    [guid, [resX, resY], [sx, sy], magnetType]\r\n                ] : [];\r\n                break;\r\n\r\n\r\n            default:\r\n        }\r\n\r\n        return [...result];\r\n    };\r\n\r\n\r\n\r\nconst getClosestEdges = (CAPTURE_DELTA: number, [TOP_INDENT, RIGHT_INDENT, BOTTOM_INDENT, LEFT_INDENT]: Indents) =>\r\n    (currentPoints: Array<Position>, otherItems: GuidSizePosition[]): Array<[number, EdgeType, GuidSizePosition | null, number]> => {\r\n        const reducerFn = getClosestEdgeDistanceReducer(CAPTURE_DELTA, [currentPoints[0], currentPoints[1], currentPoints[2], currentPoints[3]]);\r\n        const res = otherItems.reduce(\r\n            (_memo, el, index): Array<[number, EdgeType, GuidSizePosition | null, number]> => {\r\n                const data = reducerFn(_memo, el);\r\n                // const  [distance, edgeTpye, minDistToAnotherEdge, status] = reducerFn(_memo, el);\r\n                const res = data.map(\r\n                    ([distance, edgeTpye, minDistToAnotherEdge]) =>\r\n                        [distance, edgeTpye, el, minDistToAnotherEdge] as [number, EdgeType, GuidSizePosition | null, number]\r\n                );\r\n                return data.length ? [..._memo, ...res] : _memo;\r\n                // return status ? [..._memo, [distance, edgeTpye, el, minDistToAnotherEdge]] : _memo;\r\n            },\r\n            [] as Array<[number, EdgeType, GuidSizePosition | null, number]>\r\n        );\r\n        return res; //[-1, null, null, MagnetCornerType.None];\r\n    };\r\n\r\nconst getClosestPointDistance = (currentPoints: Array<Position | null>, current: GuidSizePosition, item: GuidSizePosition): ClosestData => {\r\n    const { position: [x, y], size: [sx, sy] } = item;\r\n    // const { position: [cx, cy], size: [scx, scy] } = current;\r\n    const corners: [Position, Position, Position, Position] = [\r\n        [x, y], [x + sx, y],\r\n        [x + sx, y + sy], [x, y + sy],\r\n    ];\r\n    // const currentPoints: [Position, Position, Position, Position] = [\r\n    //     [cx, cy], [cx + scx, cy],\r\n    //     [cx + scx, cy + scy], [cx, cy + scy],\r\n    // ];\r\n    const [_distance, _currentCorner, _closestCorner, _cornerSubType] = corners.reduce<ClosestData>(\r\n        (memo, [px, py], i) => {\r\n\r\n            let cornerType = [MagnetCornerType.TopLeft, MagnetCornerType.TopRight, MagnetCornerType.BottomRight, MagnetCornerType.BottomLeft][i];\r\n\r\n            const [distance, position, currentCornerType] =\r\n                currentPoints.reduce<[number, Position, MagnetCornerType]>(\r\n                    (currMemo, crn, j) => {\r\n                        const [cpx, cpy] = crn || [0, 0];\r\n                        const [dx, dy] = [px - cpx, py - cpy];\r\n                        const ndist = dx * dx + dy * dy;\r\n                        let currentCornerType = [MagnetCornerType.TopLeft, MagnetCornerType.TopRight, MagnetCornerType.BottomRight, MagnetCornerType.BottomLeft][j];\r\n                        return crn && (currMemo[0] > ndist || currMemo[0] < 0) ? [ndist, [cpx, cpy], currentCornerType] : currMemo;\r\n                    },\r\n                    [-1, [0, 0] as Position, MagnetCornerType.None]\r\n\r\n                );\r\n            const closestCorner: CornerData = [cornerType, { ...item, position: [px, py] }];\r\n            const currentCorner: CornerData = [currentCornerType, { ...current, position: [position[0], position[1]] }];\r\n            return memo[0] > distance || memo[0] < 0 ? [distance, { ...currentCorner }, { ...closestCorner }, cornerType] : memo;\r\n        },\r\n        [-1, null, null, MagnetCornerType.None]\r\n    );\r\n\r\n    return [Math.round(Math.sqrt(_distance)), _currentCorner, _closestCorner, _cornerSubType];\r\n};\r\n\r\nconst COMPOSE_CORNER_TYPES: { [id: string]: { [sid: string]: MagnetCornerType } } = {\r\n\r\n    [MagnetCornerType.TopLeft]: {\r\n        [MagnetCornerType.TopLeft]: MagnetCornerType.None,\r\n        [MagnetCornerType.TopRight]: MagnetCornerType.LeftTop,\r\n        [MagnetCornerType.BottomRight]: MagnetCornerType.TopLeft,\r\n        [MagnetCornerType.BottomLeft]: MagnetCornerType.TopLeft,\r\n        // [MagnetCornerType.BottomRight]: MagnetCornerType.TopLeft,    1st corner - TOp-LEFT, 2d - BOTTOM-LEFT  => NEWTYPE [TOP-LEFT-LEFT]\r\n    },\r\n    [MagnetCornerType.TopRight]: {\r\n        [MagnetCornerType.TopLeft]: MagnetCornerType.RightTop,\r\n        [MagnetCornerType.TopRight]: MagnetCornerType.None,\r\n        [MagnetCornerType.BottomRight]: MagnetCornerType.TopRight,\r\n        [MagnetCornerType.BottomLeft]: MagnetCornerType.RightTop,\r\n    },\r\n    [MagnetCornerType.BottomLeft]: {\r\n        [MagnetCornerType.TopLeft]: MagnetCornerType.BottomLeft,\r\n        [MagnetCornerType.TopRight]: MagnetCornerType.LeftBottom,\r\n        [MagnetCornerType.BottomRight]: MagnetCornerType.LeftBottom,\r\n        [MagnetCornerType.BottomLeft]: MagnetCornerType.None,\r\n    },\r\n    [MagnetCornerType.BottomRight]: {\r\n        [MagnetCornerType.TopLeft]: MagnetCornerType.RightBottom,\r\n        [MagnetCornerType.TopRight]: MagnetCornerType.BottomRight,\r\n        [MagnetCornerType.BottomRight]: MagnetCornerType.None,\r\n        [MagnetCornerType.BottomLeft]: MagnetCornerType.RightBottom,\r\n    },\r\n};\r\n\r\n\r\nconst getClosestItem = (currentGuid: GuidType, currentPoints: Array<Position | null>, current: GuidSizePosition, items: GuidSizePosition[]): ClosestData => {\r\n    return items\r\n        .filter(({ guid }) => guid !== currentGuid)\r\n        .reduce<ClosestData>(\r\n            (memo, item) => {\r\n                const [distance, currentCorner, closestCorner, cornerType] = getClosestPointDistance(currentPoints, current, item);\r\n                const currentCornerType = currentCorner ? currentCorner[0] : MagnetCornerType.None;\r\n                let resMagnetType = COMPOSE_CORNER_TYPES[cornerType] && COMPOSE_CORNER_TYPES[cornerType][currentCornerType];\r\n                return memo[0] > distance || memo[0] < 0 ? [distance, currentCorner, closestCorner, resMagnetType || MagnetCornerType.None] : memo;\r\n            },\r\n            [-1, null, null, MagnetCornerType.None]\r\n        );\r\n};\r\n\r\n\r\nconst getMagnetWrapComponent = <TProps extends BoxProps>(\r\n    MagnetWrapper: ComponentWrapper<TProps, TProps & MagnetFrameProps & MagnetCornerProps>,\r\n    { CAPTURE_DELTA, Indents }: { CAPTURE_DELTA: number, Indents: Indents }\r\n) => <TContext extends IContextMagnet & IObservablesDrag & IObservableControl & IContextResizer>(\r\n    MouseStreamContext: React.Context<Nullable<TContext>>\r\n) =>\r\n\r\n        (Component: React.ComponentType<TProps>, services: MsgService<IState, any>[], selectors: MsgSelector<IState, any, any>[]) => {\r\n\r\n            const MagnetBlock = MagnetWrapper(Component);\r\n\r\n            const ResultComponent = (props: React.PropsWithChildren<TProps>) => {\r\n\r\n                const { guid, xy$, size$ } = props;\r\n\r\n                const storage = useStorage(`magnetable: ${guid}`, services, selectors);\r\n\r\n                const markerRef = useRef<Nullable<[Position, MagnetCornerType]>>(null);\r\n\r\n                const sizeMarker$ = useMemo(() => new BehaviorSubject<[NearestResult | null, NearestResult | null]>([null, null]), []);\r\n\r\n                const mouseContext = useContext(MouseStreamContext) as TContext;\r\n\r\n                const markerPosition$ = useMemo<BehaviorSubject<Nullable<MagnetMarkerPosition>>>(\r\n                    () => new BehaviorSubject<Nullable<MagnetMarkerPosition>>(null), []\r\n                );\r\n\r\n                const nearestFrame$ = useMemo<BehaviorSubject<Nullable<NearestFrame>>>(\r\n                    () => new BehaviorSubject<Nullable<NearestFrame>>(null), []\r\n                );\r\n\r\n\r\n                // init clear nearestFrame (corner and edge markers) by stopping\r\n                useEffect(() => {\r\n\r\n                    console.log('%c storage--> init_magnetable 1: ', 'color: green; background-color: yellow;', guid);\r\n\r\n                    const magnetOutDrag = mouseContext.dragStop.pipe(\r\n                        filter(({ elementId }) => elementId !== guid)\r\n                    ).subscribe(({ elementId }) => {\r\n                        const nearestFrame = nearestFrame$.getValue();\r\n                        if (nearestFrame && nearestFrame.magneted === elementId) {\r\n                            nearestFrame$.next(null);\r\n                        }\r\n                    });\r\n\r\n                    const magnetOutResize = mouseContext.resizeStop.pipe(\r\n                        filter(({ elementId }) => elementId !== guid)\r\n                    ).subscribe(({ elementId }) => {\r\n                        const nearestFrame = nearestFrame$.getValue();\r\n                        if (nearestFrame && nearestFrame.magneted === elementId) {\r\n                            nearestFrame$.next(null);\r\n                        }\r\n                    });\r\n\r\n                    return () => {\r\n                        magnetOutDrag.unsubscribe();\r\n                        magnetOutResize.unsubscribe();\r\n                    }\r\n                }, [guid, mouseContext, nearestFrame$]);\r\n\r\n                // magnet to Current (we need to show magnet frame border)\r\n                useEffect(() => {\r\n\r\n                    console.log('%c storage--> init_magnetable 2: ', 'color: green; background-color: yellow;', guid);\r\n\r\n                    const magnetInSubscription = mouseContext.magneting.pipe(\r\n                        filter(\r\n                            (data: IMagnetPair) => {\r\n                                const isIn = data.direction === MagnetPairDirection.In;\r\n                                return isIn && guid === data.items[0];\r\n                            }\r\n                        )\r\n                    ).subscribe((data: IMagnetPair) => {\r\n                        const type = (data as IMagnetPairIn).type;\r\n                        const items = (data as IMagnetPairIn).items;\r\n                        const xy = xy$.getValue();\r\n                        const sxy = size$.getValue();\r\n                        const nearestFrame: NearestFrame = {\r\n                            frame: [[xy[0], xy[1]], [sxy[0], sxy[1]]],\r\n                            magnetType: type,\r\n                            magneted: items[1],\r\n                            fix: guid\r\n                        };\r\n                        nearestFrame$.next({ ...nearestFrame });\r\n                    });\r\n\r\n                    return () => {\r\n                        magnetInSubscription.unsubscribe();\r\n                    }\r\n\r\n                }, [guid, mouseContext, xy$, size$, nearestFrame$]);\r\n\r\n\r\n                const dragForNearests = useCallback((nearestYes, nearestNo, currentPoints: Array<Position | null>) => {\r\n\r\n                    let [currx, curry] = xy$.getValue();\r\n                    let [currSx, currSy] = size$.getValue()\r\n\r\n                    const startGuidSizePosition: GuidSizePosition = { guid, position: [currx, curry], size: [currSx, currSy] };\r\n\r\n                    const controls = storage.get<string, IControlData[]>('controls') as IControlData[];\r\n                    const _items = controls\r\n                        .filter(t => t.guid !== guid)\r\n                        .map(({ guid: _guid, position, size }) => ({ guid: _guid, position, size }));\r\n\r\n\r\n                    const nearest: NearestResult[] = [];\r\n\r\n                    const [distance, currentCorner, closestCorner, resultMagnetType] = getClosestItem(guid, currentPoints, startGuidSizePosition, _items);\r\n                    if (currentCorner && closestCorner) {\r\n                        nearest.push(\r\n                            ...MagnetAllCorners(CAPTURE_DELTA, Indents)(distance, currentCorner, closestCorner, resultMagnetType)\r\n                        );\r\n                    }\r\n\r\n                    if (!nearest.length && !!markerRef.current) {\r\n                        mouseContext.magneting.next({ direction: MagnetPairDirection.Out, items: [guid] });\r\n                        nearestNo();\r\n                    }\r\n\r\n                    nearestYes(nearest);\r\n\r\n                }, [guid, mouseContext, size$, xy$, storage]);\r\n\r\n\r\n                const nearestEdgesByResizing = useCallback((nearestYes: any, nearestNo: any, currentPoints: Array<Position>) => {\r\n\r\n                    let [currx, curry] = xy$.getValue();\r\n                    let [currSx, currSy] = size$.getValue()\r\n\r\n                    const startGuidSizePosition: GuidSizePosition = { guid, position: [currx, curry], size: [currSx, currSy] };\r\n\r\n                    const controls = storage.get<string, IControlData[]>('controls') as IControlData[];\r\n                    const _items = controls\r\n                        .filter(t => t.guid !== guid)\r\n                        .map(({ guid: _guid, position, size }) => ({ guid: _guid, position, size }));\r\n\r\n\r\n                    const closestEdges = getClosestEdges(\r\n                        CAPTURE_DELTA, Indents\r\n                    )(currentPoints, _items);\r\n\r\n                    const magnetingEdges = MagnetAllEdges(CAPTURE_DELTA, Indents);\r\n\r\n                    return nearestCalculation(closestEdges, magnetingEdges)(guid, mouseContext, startGuidSizePosition)(nearestYes, nearestNo);\r\n\r\n                }, [guid, mouseContext, storage, xy$, size$]);\r\n\r\n                useEffect(() => {\r\n\r\n                    console.log('%c \\nstart subs nearest >\\n', 'background-color: #111; color: white; border: 1px solid orange;');\r\n\r\n                    const magnetSubscription = mouseContext.magneting.pipe(\r\n                        filter(\r\n                            (data: IMagnetPair) => {\r\n                                const isOut = data.direction === MagnetPairDirection.Out;\r\n                                const magneted = mouseContext.magneted.getValue();\r\n                                const isCurrentOut = isOut && !!magneted.filter(t => t.magneted.includes(guid)).length;\r\n                                isOut && console.log('%c outing-item --->', 'color: yellow; background-color: black; border: orange;', isCurrentOut, guid, magneted, data);\r\n                                return isCurrentOut;\r\n                            }\r\n                        )\r\n                    ).subscribe((data: IMagnetPair) => {\r\n                        console.log('---\\n\\n outing-item MAGNETING_SUB->', data, guid, nearestFrame$.getValue(), markerPosition$.getValue());\r\n                        markerRef.current = null;\r\n                        nearestFrame$.next(null);\r\n                        markerPosition$.next(null);\r\n                    });\r\n\r\n\r\n\r\n                    const dragStopSubscription = mouseContext.dragStop.pipe(\r\n                        filter(({ elementId }) => elementId === guid)\r\n                    ).subscribe(_ => {\r\n                        console.log('stop listening ->', guid, markerRef.current, mouseContext.group.getValue());\r\n                        if (markerRef.current) {\r\n                            const [[markerX, markerY]] = markerRef.current;\r\n                            markerRef.current = null;\r\n                            nearestFrame$.next(null);\r\n\r\n                            // mouseContext.group.getValue().forEach((id) => id === guid && storage.send('position', [id, [markerX, markerY]]));\r\n                            storage.send('position', [guid, [markerX, markerY]]);\r\n\r\n                            markerPosition$.next([[markerX, markerY], 1]);\r\n                        }\r\n                    });\r\n\r\n                    const dragStartSubscription = mouseContext.dragStart.pipe(\r\n                        filter(({ elementId }) => elementId === guid)\r\n                    ).subscribe(_ => {\r\n                        // we have to OUT all of chained items (not just first and second)\r\n                        // may be we should clear all magneted items because of new MOVING!\r\n                        mouseContext.magnetingStart.next(guid);\r\n                        mouseContext.magneting.next({ direction: MagnetPairDirection.Out, items: [guid] });\r\n                    });\r\n\r\n\r\n                    const dragSubscription = mouseContext.drag.pipe(\r\n                        filter(\r\n                            ({ elementId }) =>\r\n                                elementId === guid\r\n                                && mouseContext.group.getValue().findIndex(tGuid => tGuid === elementId) < 0\r\n                        )\r\n                    ).subscribe(_ => {\r\n\r\n\r\n                        let [currx, curry] = xy$.getValue();\r\n                        let [currSx, currSy] = size$.getValue();\r\n\r\n                        const currentPoints: Position[] = [\r\n                            [currx, curry], [currx + currSx, curry],\r\n                            [currx + currSx, curry + currSy], [currx, curry + currSy],\r\n                        ];\r\n\r\n                        dragForNearests(\r\n                            // nearest is here!\r\n                            (nearest: NearestResult[]) => {\r\n                                nearest.forEach(([nearestGuid, magnetPosition, _nearSize, magnetType]) => {\r\n\r\n                                    if (!markerRef.current || markerRef.current[1] !== magnetType) {\r\n\r\n                                        // clear previous \r\n                                        !!mouseContext.magneted.getValue().length\r\n                                            && mouseContext.magneting.next({ direction: MagnetPairDirection.Out, items: [guid] });\r\n\r\n                                        mouseContext.magneting.next({ direction: MagnetPairDirection.In, items: [nearestGuid, guid], type: magnetType });\r\n                                        markerRef.current = [[magnetPosition[0], magnetPosition[1]], magnetType];\r\n                                        markerPosition$.next([[magnetPosition[0], magnetPosition[1]], 0]);\r\n                                    }\r\n                                });\r\n                            },\r\n                            // nearest is out here!\r\n                            () => {\r\n                                markerRef.current = null;\r\n                                nearestFrame$.next(null);\r\n                                markerPosition$.next(null);\r\n                            },\r\n                            currentPoints\r\n                        );\r\n                    });\r\n\r\n\r\n                    const resizeStartSubscription = mouseContext.resizeStart.pipe(\r\n                        filter(({ elementId }) => elementId === guid)\r\n                    ).subscribe(_ => {\r\n                        mouseContext.magnetingStart.next(guid);\r\n                        mouseContext.magneting.next({ direction: MagnetPairDirection.Out, items: [guid] });\r\n                    });\r\n\r\n                    const resizeStopSubscription = mouseContext.resizeStop.pipe(\r\n                        filter(({ elementId }) => elementId === guid)\r\n                    ).subscribe(_ => {\r\n\r\n                        const [nearestVertical, nearestHorizontal] = sizeMarker$.getValue();\r\n\r\n                        console.log('resizing stop! ->', guid, nearestVertical, nearestHorizontal);\r\n\r\n                        if (nearestVertical || nearestHorizontal) {\r\n\r\n                            const currSize = size$.getValue();\r\n\r\n                            const resItems: [EdgeType, Position][] = [nearestVertical, nearestHorizontal].map((nearest) => {\r\n                                return nearest\r\n                                    ? [MAP_MAGNET_TYPE_TO_EDGE[nearest[3]] || EdgeType.None, nearest[1]]\r\n                                    : [EdgeType.None, [-1, -1]];\r\n                            });\r\n\r\n                            const [calcSx, calcSy] = getResultSize(resItems);\r\n\r\n                            const resSx = calcSx > -1 ? calcSx : currSize[0];\r\n                            const resSy = calcSy > -1 ? calcSy : currSize[1];\r\n\r\n                            size$.next([resSx, resSy]);\r\n                            storage.send('size', [guid, [resSx, resSy]]);\r\n\r\n                            sizeMarker$.next([null, null]);\r\n                            nearestFrame$.next(null);\r\n                            markerPosition$.next(null);\r\n                        }\r\n                    });\r\n\r\n                    const resizeSubscription = mouseContext.resize.pipe(\r\n                        filter(([elementId]) => elementId === guid)\r\n                    ).subscribe(([_elementId]) => {\r\n\r\n                        let [currx, curry] = xy$.getValue();\r\n                        let [currSx, currSy] = size$.getValue();\r\n\r\n                        const currentPoints: Array<Position> = [\r\n                            [currx, curry],\r\n                            [currx + currSx, curry],\r\n                            [currx + currSx, curry + currSy],\r\n                            [currx, curry + currSy],\r\n                        ];\r\n\r\n                        // TODO: refqctor to BehaviorSubject usage!\r\n                        nearestEdgesByResizing(\r\n                            // nearest is here!\r\n                            (nearest: [NearestResult[], NearestResult[]]) => {\r\n                                const [prevVertical, prevHorizontal] = sizeMarker$.getValue();\r\n\r\n                                const [nearestVertical, nearestHorizontal] = nearest;\r\n                                let resultVert = prevVertical, resultHor = prevHorizontal;\r\n\r\n                                let newVertHoriz = 0;   // 0 - no updates, 1 - only vert  2 - vert & hor  3 - only hor\r\n\r\n                                // isNewVert - compare previous vertical edge with new nearest vertical edge\r\n                                const isNewVert = prevVertical\r\n                                    && !!nearestVertical.filter(\r\n                                        ([itemGuid, _size, _pos, type]) =>\r\n                                            (itemGuid === prevVertical[0] && type !== prevVertical[3]) || itemGuid !== prevVertical[0]\r\n                                    ).length;\r\n\r\n                                isNewVert && console.log('isNewVert', isNewVert, [prevVertical, prevHorizontal], [nearestVertical && nearestVertical[0], nearestHorizontal && nearestHorizontal[0]]);\r\n\r\n                                // check: new edge (nearest exist, prev - not) exiting edge (prev edge is exist, nearest - not) changed edge (isNewVert)\r\n                                if ((prevVertical && !nearestVertical.length) || (!prevVertical && nearestVertical.length) || isNewVert) {\r\n                                    newVertHoriz = 1;\r\n                                    resultVert = nearestVertical[0];\r\n                                }\r\n\r\n                                const isNewHor = prevHorizontal\r\n                                    && !!nearestHorizontal.filter(\r\n                                        ([itemGuid, _size, _pos, type]) =>\r\n                                            (itemGuid === prevHorizontal[0] && type !== prevHorizontal[3]) || itemGuid !== prevHorizontal[0]\r\n                                    ).length;\r\n\r\n                                if ((prevHorizontal && !nearestHorizontal.length) || (!prevHorizontal && nearestHorizontal.length) || isNewHor) {\r\n                                    newVertHoriz = 3 - newVertHoriz;\r\n                                    resultHor = nearestHorizontal[0];\r\n                                }\r\n\r\n                                if (newVertHoriz) {\r\n\r\n                                    sizeMarker$.next([resultVert || null, resultHor || null]);\r\n\r\n                                    if (resultVert || resultHor) {\r\n\r\n                                        if (prevVertical || prevHorizontal) {\r\n                                            mouseContext.magneting.next({ direction: MagnetPairDirection.Out, items: [guid] });\r\n                                        }\r\n\r\n                                        const resItems = [resultVert, resultHor].filter(t => !!t) as NearestResult[];\r\n                                        let nearestGuids: [GuidType, MagnetCornerType][] = resItems.reduce<[GuidType, MagnetCornerType][]>(\r\n                                            (memo, [_guid, _s, _p, _type]) => {\r\n                                                const isExist = memo.findIndex(([_mg, _mtype]) => _mg === _guid && _mtype === _type) > -1;\r\n                                                return !isExist ? [...memo, [_guid, _type]] : [...memo];\r\n                                            },\r\n                                            []\r\n                                        );\r\n\r\n                                        nearestGuids.forEach(\r\n                                            ([nearestGuid, magnetType]) =>\r\n                                                mouseContext.magneting.next({ direction: MagnetPairDirection.In, items: [nearestGuid, guid], type: magnetType })\r\n                                        );\r\n\r\n                                        markerPosition$.next([[-1, -1], 0]);\r\n\r\n                                    }\r\n\r\n                                }\r\n\r\n                            },\r\n                            // nearest is out here! (for every sizing step changing)\r\n                            () => {\r\n\r\n                                const [vert, horiz] = sizeMarker$.getValue();\r\n\r\n                                if (vert || horiz) {\r\n\r\n                                    const uniueOutingGuids = vert ? [vert[0]] : [];\r\n                                    horiz && !uniueOutingGuids.filter(t => t && t[0] === horiz[0]).length && uniueOutingGuids.push(horiz[0]);\r\n                                    uniueOutingGuids.forEach(_g => mouseContext.magneting.next({ direction: MagnetPairDirection.Out, items: [_g] }));\r\n\r\n                                    markerRef.current = null;\r\n                                    nearestFrame$.next(null);\r\n                                    sizeMarker$.next([null, null]);\r\n                                    markerPosition$.next(null);\r\n                                }\r\n                            },\r\n                            currentPoints\r\n                        );\r\n\r\n\r\n                    });\r\n\r\n                    return () => {\r\n                        magnetSubscription.unsubscribe();\r\n\r\n                        dragSubscription.unsubscribe();\r\n                        dragStartSubscription.unsubscribe();\r\n                        dragStopSubscription.unsubscribe();\r\n\r\n                        resizeSubscription.unsubscribe();\r\n                        resizeStartSubscription.unsubscribe();\r\n                        resizeStopSubscription.unsubscribe();\r\n\r\n                    };\r\n\r\n                }, [guid, mouseContext, storage, xy$, size$, markerPosition$, nearestFrame$, markerRef, sizeMarker$, nearestEdgesByResizing, dragForNearests]);\r\n\r\n                return (\r\n                    <MagnetBlock\r\n                        { ...props }\r\n                        markerPosition$={ markerPosition$ }\r\n                        nearestFrame$={ nearestFrame$ }\r\n                    >\r\n                        { props.children }\r\n                    </MagnetBlock>\r\n                );\r\n            };\r\n\r\n            return ResultComponent;\r\n        };\r\n\r\nexport default getMagnetWrapComponent;\r\n","import context, { IContextMagnet as IContext } from './context';\r\nimport Magnetable from './Magnetable';\r\nimport FrameWrapper, { CAPTURE_DELTA, Indents } from './MagnetFrameWrapper';\r\nimport { NearestResult as Nearest } from './types';\r\n\r\nexport type IContextMagnet = IContext;\r\nexport type NearestResult = Nearest;\r\n\r\nexport { context };\r\n\r\nexport default Magnetable(FrameWrapper, { CAPTURE_DELTA, Indents });\r\n","import React, { useEffect, useState } from 'react';\r\nimport { BoxProps, MagnetFrameProps, MagnetCornerProps, MagnetCornerType } from '@designer-core/shared/types';\r\n\r\nimport MagnetFrameBlock from '@designer-core/shared/blocks/MagnetFrame';\r\n\r\nimport MagnetCornerFrameBlock from '@designer-core/shared/blocks/MagnetCornerFrame';\r\nimport { useSubscribedState } from '@designer-core/shared/helpers/storage';\r\n\r\nconst [TOP_INDENT, RIGHT_INDENT, BOTTOM_INDENT, LEFT_INDENT] = [30, 50, 30, 50];\r\n\r\nexport const CAPTURE_DELTA = 80;\r\nexport const Indents: [number, number, number, number] = [TOP_INDENT, RIGHT_INDENT, BOTTOM_INDENT, LEFT_INDENT];\r\n\r\nconst MagnetWrapper = <TProps extends BoxProps>(Component: React.ComponentType<TProps>) => {\r\n    const ResultBlock = (props: React.PropsWithChildren<MagnetFrameProps & MagnetCornerProps & TProps>) => {\r\n\r\n        const { guid, position$, xy$, markerPosition$, size$, nearestFrame$ } = props;\r\n\r\n        const [markerValue, setMarkerValue] = useState(markerPosition$.getValue());\r\n\r\n        const [size] = useSubscribedState(size$);\r\n        const [nearestFrame] = useSubscribedState(nearestFrame$);\r\n\r\n        useEffect(() => {\r\n            const markerSub = markerPosition$.subscribe(data => {\r\n                if (data && data[1] === 1) {\r\n                    xy$.next([data[0][0], data[0][1]])\r\n                }\r\n                setMarkerValue(data);\r\n            });\r\n            return () => markerSub.unsubscribe();\r\n        }, [guid, markerPosition$, xy$, position$]);\r\n\r\n\r\n        const edges = [MagnetCornerType.Left_Vertical, MagnetCornerType.Right_Vertical, MagnetCornerType.Top_Horizontal, MagnetCornerType.Bottom_Horizontal];\r\n        const isCorner = nearestFrame && edges.indexOf(nearestFrame.magnetType) < 0;\r\n        const isEdge = nearestFrame && edges.indexOf(nearestFrame.magnetType) > -1;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <MagnetFrameBlock size={ [size[0], size[1]] } markerPosition={ markerValue } />\r\n                {\r\n                    isEdge && <MagnetCornerFrameBlock\r\n                        type={ nearestFrame ? nearestFrame.magnetType : null }\r\n                        offset={ 0 }\r\n                        indent={ [TOP_INDENT, RIGHT_INDENT, BOTTOM_INDENT, LEFT_INDENT] } />\r\n                }\r\n                {\r\n                    isEdge && <MagnetCornerFrameBlock\r\n                        type={ nearestFrame ? nearestFrame.magnetType : null }\r\n                        offset={ 1 }\r\n                        indent={ [TOP_INDENT, RIGHT_INDENT, BOTTOM_INDENT, LEFT_INDENT] } />\r\n                }\r\n                {\r\n                    isCorner && <MagnetCornerFrameBlock\r\n                        type={ nearestFrame ? nearestFrame.magnetType : null }\r\n                        indent={ [TOP_INDENT, RIGHT_INDENT, BOTTOM_INDENT, LEFT_INDENT] } />\r\n                }\r\n                <Component { ...props }>\r\n                    { props.children }\r\n                </Component>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n    return ResultBlock;\r\n}\r\n\r\nexport default MagnetWrapper;\r\n","import {\r\n    IStreamData,\r\n    GuidType,\r\n    ContextPlugin,\r\n    IObservablesMouse,\r\n    IObservableControl,\r\n    EventType,\r\n    Position\r\n} from '@designer-core/shared/types';\r\nimport { Subject, combineLatest, BehaviorSubject } from 'rxjs';\r\nimport { tap, switchMap, takeUntil } from 'rxjs/operators';\r\n\r\nexport interface IContextResizer {\r\n    resizeStart: Subject<IStreamData>;\r\n    resizeStop: Subject<IStreamData>;\r\n    resize: Subject<[GuidType, Position]>;\r\n}\r\n\r\nconst contextPart: IContextResizer = {\r\n    resize: new Subject(),\r\n    resizeStart: new Subject(),\r\n    resizeStop: new Subject()\r\n};\r\n\r\nconst getReactEffect = (mouseStreamContext: IContextResizer & IObservablesMouse & IObservableControl): React.EffectCallback => () => {\r\n\r\n    const source$ = mouseStreamContext.resizeStart.pipe(\r\n        tap(({ elementId }) => console.log('start resize!', elementId)),\r\n        tap(({ elementId }) => mouseStreamContext.control.next(elementId)),\r\n        switchMap(\r\n            data => combineLatest(\r\n                new BehaviorSubject(data),\r\n                mouseStreamContext.mouseMove\r\n            ).pipe(\r\n                takeUntil(mouseStreamContext.mouseStop.pipe(\r\n                    tap(({ ev }) => {\r\n                        const elementId = mouseStreamContext.control.getValue();\r\n                        mouseStreamContext.resizeStop.next({ elementId, ev, type: EventType.StopResize });\r\n                        mouseStreamContext.control.next(null);\r\n                    })\r\n                ))\r\n            )\r\n        )\r\n    )\r\n\r\n    const subscription = source$.subscribe(([resizeStart, move]) => {\r\n        const [startX, startY]: Position = [resizeStart.ev.clientX, resizeStart.ev.clientY];\r\n        mouseStreamContext.resize.next([resizeStart.elementId, [move.ev.clientX - startX, move.ev.clientY - startY]]);\r\n    });\r\n\r\n    return () => {\r\n        subscription.unsubscribe();\r\n    }\r\n};\r\n\r\nconst getDeps = (mouseStreamContext: IContextResizer & IObservablesMouse & IObservableControl): React.DependencyList => [mouseStreamContext];\r\n\r\nconst contextPlugin: ContextPlugin<IContextResizer & IObservablesMouse & IObservableControl, IContextResizer> = [\r\n    { ...contextPart },\r\n    (mouseContext) => [getReactEffect(mouseContext), getDeps(mouseContext)]\r\n];\r\n\r\nexport default contextPlugin;\r\n","import React, { useMemo, useContext } from 'react';\r\n\r\nimport { useSubscribedState } from '@designer-core/shared/helpers/storage';\r\n\r\nimport AnchorBlock from '@designer-core/shared/blocks/Anchor';\r\n\r\nimport { ROOT_GUID, BoxProps, DragFrameProps, ActiveLevels, IMouseStreamContext, EventType } from '@designer-core/shared/types';\r\nimport { IContextResizer } from './context';\r\n\r\n\r\nexport const [MIN_WIDTH, MIN_HEIGHT] = [60, 60];\r\n\r\n\r\nconst RESIZE_ICON = <svg className=\"anchor_icon anchor_icon--resize\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" fill=\"currentColor\">\r\n    <line fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeMiterlimit=\"10\" x1=\"6\" y1=\"26\" x2=\"26\" y2=\"6\" />\r\n    <polyline fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeMiterlimit=\"10\" points=\"13,27 5,27 5,19 \" />\r\n    <polyline fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeMiterlimit=\"10\" points=\"19,5 27,5 27,13 \" />\r\n    <line fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeMiterlimit=\"10\" x1=\"6\" y1=\"6\" x2=\"26\" y2=\"26\" />\r\n    <polyline fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeMiterlimit=\"10\" points=\"5,13 5,5 13,5 \" />\r\n    <polyline fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeMiterlimit=\"10\" points=\"27,19 27,27 19,27 \" />\r\n</svg>;\r\n\r\n\r\nconst ResizeWrapper =\r\n    <TProps extends BoxProps, TContext extends IMouseStreamContext & IContextResizer>(\r\n        Component: React.ComponentType<TProps>, MouseStreamContext: React.Context<TContext>\r\n    ) => {\r\n        const ResultBlock = (props: React.PropsWithChildren<DragFrameProps & TProps>) => {\r\n\r\n            const { guid, activeLevel$, handlers } = props;\r\n\r\n            const mouseContext = useContext(MouseStreamContext) as TContext;\r\n\r\n            const [activeLevel] = useSubscribedState(activeLevel$);\r\n\r\n            const updHandlers = useMemo<React.DOMAttributes<HTMLElement>>(\r\n                () => handlers ? { ...handlers, onMouseDown: () => { } } : { onMouseDown: () => { } },\r\n                [handlers]\r\n            );\r\n\r\n            const anchorHandler = useMemo<React.DOMAttributes<HTMLElement>>(() => ({\r\n                onMouseDown: (ev) => {\r\n                    ev.stopPropagation();\r\n                    mouseContext.resizeStart.next({ elementId: guid, ev: ev.nativeEvent, type: EventType.Resize });\r\n                }\r\n            }), [guid, mouseContext]);\r\n\r\n            const componentHandlers = useMemo(() => {\r\n                return guid === ROOT_GUID ? handlers : updHandlers\r\n            }, [guid, handlers, updHandlers]);\r\n\r\n\r\n            const activeLevelArr = activeLevel ? ['resizer', 'active'] : ['resizer'];\r\n\r\n            return (\r\n                <Component { ...props } handlers={ componentHandlers }>\r\n                    { props.children }\r\n                    {\r\n                        (activeLevel === ActiveLevels.Hover || activeLevel === ActiveLevels.HoverInGroup)\r\n                        && <AnchorBlock { ...props } handlers={ { ...anchorHandler } } classModifiers={ [...activeLevelArr] } icon={ RESIZE_ICON } />\r\n                    }\r\n                </Component>\r\n            );\r\n        };\r\n\r\n        return ResultBlock;\r\n    }\r\n\r\nexport default ResizeWrapper;\r\n","import context, { IContextResizer as IContext } from './context';\r\nimport Resizable from './Resizable';\r\nimport FrameWrapper from './ResizeFrameWrapper';\r\n\r\nexport type IContextResizer = IContext;\r\n\r\nexport { context };\r\n\r\nexport default Resizable(FrameWrapper);\r\n","import React, { useContext, useRef, useEffect } from 'react';\r\n\r\nimport {\r\n    BoxProps,\r\n    DragFrameProps,\r\n    Nullable,\r\n    ComponentContextWrapper,\r\n} from '@designer-core/shared/types';\r\nimport { MIN_HEIGHT, MIN_WIDTH } from './ResizeFrameWrapper';\r\n\r\nimport { filter } from 'rxjs/operators';\r\nimport { Subscription } from 'rxjs';\r\nimport { IState } from '@designer-core/shared/stateTypes';\r\nimport { MsgService, MsgSelector, useStorage } from '@designer-core/shared/helpers/storage';\r\nimport { IContextResizer } from './context';\r\n\r\n\r\nconst getResizeWrapComponent = <TProps extends BoxProps, TContext extends IContextResizer>(\r\n    ResizeWrapper: ComponentContextWrapper<TProps, TProps & DragFrameProps, TContext>\r\n) =>\r\n    (MouseStreamContext: React.Context<Nullable<TContext>>) =>\r\n\r\n        (Component: React.ComponentType<TProps>, services: MsgService<IState, any>[], selectors: MsgSelector<IState, any, any>[]) => {\r\n\r\n            const ResizingComponent = ResizeWrapper(Component, MouseStreamContext as React.Context<TContext>);\r\n\r\n            const ResultComponent = (props: React.PropsWithChildren<TProps & Partial<DragFrameProps>>) => {\r\n\r\n                const { guid, activeLevel$, size$ } = props;\r\n\r\n                const storage = useStorage(`resizable: ${guid}`, services, selectors);\r\n\r\n                const mouseContext = useContext(MouseStreamContext) as TContext;\r\n\r\n                const fixStartSizeRef = useRef(size$.getValue());\r\n\r\n                useEffect(() => {\r\n\r\n                    const startSubscription = mouseContext.resizeStart.pipe(\r\n                        filter(({ elementId }) => elementId === guid)\r\n                    ).subscribe((_) => {\r\n                        const [sx, sy] = size$.getValue();\r\n                        fixStartSizeRef.current = [sx, sy];\r\n                    });\r\n                    const moveSubscription: Subscription = mouseContext.resize.pipe(\r\n                        filter(([elementId]) => guid === elementId)\r\n                    ).subscribe(([_elementId, position]) => {\r\n\r\n                        const [dx, dy] = position;\r\n                        const [ndx, ndy] = [fixStartSizeRef.current[0] + dx, fixStartSizeRef.current[1] + dy];\r\n\r\n                        if (ndx > MIN_WIDTH || ndy > MIN_HEIGHT) {\r\n\r\n                            const [odx, ody] = size$.getValue();\r\n                            const [nextSx, nextSy] = [ndx > MIN_WIDTH ? ndx : odx, ndy > MIN_HEIGHT ? ndy : ody];\r\n\r\n                            storage.send('size', [guid, [nextSx, nextSy]]);\r\n\r\n                            size$.next([nextSx, nextSy]);\r\n                        }\r\n                    });\r\n                    return () => {\r\n                        console.log('subscription unsub!', guid);\r\n                        moveSubscription.unsubscribe();\r\n                        startSubscription.unsubscribe();\r\n                    };\r\n                }, [guid, mouseContext, storage, activeLevel$, fixStartSizeRef, size$]);\r\n\r\n                return (\r\n                    <ResizingComponent { ...props }>\r\n                        { props.children }\r\n                    </ResizingComponent>\r\n                );\r\n            };\r\n\r\n            return ResultComponent;\r\n        };\r\n\r\nexport default getResizeWrapComponent;\r\n","import {\r\n    ContextPlugin,\r\n    IObservablesMouse,\r\n    IObservablesDrag,\r\n    SELECTING_FRAME_GUID,\r\n    ILassoStreamData,\r\n    ITrappedItem,\r\n    TrappedType,\r\n    IObservableControl,\r\n} from '@designer-core/shared/types';\r\nimport { Subject } from 'rxjs';\r\nimport { tap, switchMap, takeUntil, scan } from 'rxjs/operators';\r\n\r\nexport interface IContextLasso {\r\n    lasso: Subject<ILassoStreamData>;\r\n    trapping: Subject<ITrappedItem[]>;\r\n    // trapped: BehaviorSubject<GuidType[]>;\r\n}\r\n\r\nconst contextPart: IContextLasso = {\r\n    lasso: new Subject(),\r\n    trapping: new Subject(),\r\n    // trapped: new BehaviorSubject<GuidType[]>([]),\r\n};\r\n\r\nconst getReactEffect = (mouseStreamContext: IContextLasso & IObservablesDrag & IObservablesMouse & IObservableControl): React.EffectCallback => () => {\r\n\r\n    const source$ = mouseStreamContext.dragStart.pipe(\r\n        tap(({ elementId }) => elementId === SELECTING_FRAME_GUID && mouseStreamContext.group.next([])),\r\n        switchMap(\r\n            _ => mouseStreamContext.trapping.pipe(\r\n                scan((acc, [val]) => {\r\n                    const inAcc = acc.filter(t => val && t.guid === val.guid).length;\r\n                    const toAcc = inAcc ? [] : [val];\r\n                    return val && val.trappedType === TrappedType.In ? [...acc, ...toAcc] : acc.filter(t => val && t.guid !== val.guid);\r\n                }, [] as ITrappedItem[]),\r\n                tap(values => mouseStreamContext.group.next(values.map(x => x.guid))),\r\n                takeUntil(mouseStreamContext.mouseStop)\r\n            )\r\n        )\r\n    );\r\n\r\n    const subscribtion = source$.subscribe(_ => { });\r\n\r\n\r\n    return () => {\r\n        subscribtion.unsubscribe();\r\n    }\r\n};\r\n\r\nconst getDeps = (mouseStreamContext: IContextLasso & IObservablesMouse & IObservablesDrag & IObservableControl): React.DependencyList => [mouseStreamContext];\r\n\r\nconst contextPlugin: ContextPlugin<IContextLasso & IObservablesMouse & IObservablesDrag & IObservableControl, IContextLasso> = [\r\n    { ...contextPart },\r\n    (mouseContext) => [getReactEffect(mouseContext), getDeps(mouseContext)]\r\n];\r\n\r\nexport default contextPlugin;\r\n","import React, { useMemo } from 'react';\r\nimport SelectedFrameBlock from '@designer-core/shared/blocks/SelectedFrame';\r\nimport { BoxProps, DragFrameProps, Position, BaseBoxProps } from '@designer-core/shared/types';\r\n\r\nimport { WrappedBlock } from '@designer-core/shared/wrappers/ConnectedBlock';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\nconst FrameBox = WrappedBlock(SelectedFrameBlock as React.ComponentType<BaseBoxProps>);\r\n\r\nconst SelectedFrameWrapper = <TProps extends BoxProps>(Component: React.ComponentType<TProps>) => {\r\n    const ResultBlock = (props: React.PropsWithChildren<DragFrameProps & TProps>) => {\r\n        const emptyPosition$ = useMemo(() => new BehaviorSubject<Position>([0, 0]), []);\r\n        return <FrameBox { ...props } position$={ emptyPosition$ }>\r\n            <Component { ...props }>{ props.children }</Component>\r\n        </FrameBox>;\r\n    };\r\n    return ResultBlock;\r\n}\r\n\r\nexport default SelectedFrameWrapper;\r\n","import context, { IContextLasso as IContext } from './context';\r\nimport Selectable, { getSelectableLasso } from './Selectable';\r\nimport FrameWrapper from './SelectedFrameWrapper';\r\n\r\nexport type IContextLasso = IContext;\r\n\r\nexport { context };\r\n\r\nexport { getSelectableLasso };\r\n\r\nexport default Selectable(FrameWrapper);\r\n","import React from 'react';\r\n\r\nimport getMouseStreamsContainer from './MouseStreamsContainer';\r\n\r\n\r\n// <new wrappers> (as plugins, may be we should use plugin as tuple [PluginFunction, FrameBlock, context part? ] ) \r\nimport DragFrame from './draggable/DragFrameWrapper';\r\nimport WrapComponentInDraggable from './draggable/Draggable';\r\n\r\nimport MagnetableWithMouseContext, { IContextMagnet, context as magnetContextPlugin } from '@designer-core/shared/plugins/magnetable';\r\nimport ResizableWithMouseContext, { IContextResizer, context as resizerContextPlugin } from '@designer-core/shared/plugins/resizable';\r\nimport SelectableWithMouseContext, { IContextLasso, getSelectableLasso, context as lassoContextPlugin } from '@designer-core/shared/plugins/selectable';\r\n\r\nimport {\r\n    SELECTING_FRAME_GUID,\r\n    GuidType,\r\n    IMouseStreamContext,\r\n    MouseButtonType,\r\n    EventType,\r\n    Nullable,\r\n} from '../types';\r\n\r\nimport { ContainerProps } from '@designer-core/shared/blocks/types';\r\n\r\n\r\n\r\nconst getHandlers = (elementId: GuidType, mouseContext: IMouseStreamContext): React.DOMAttributes<HTMLElement> => {\r\n    return {\r\n        onMouseDown: (ev: React.MouseEvent<HTMLElement, MouseEvent>) => {\r\n            ev.stopPropagation();\r\n            if (ev.button !== MouseButtonType.Left) return;\r\n            const _elementId = ev.ctrlKey ? SELECTING_FRAME_GUID : elementId;\r\n            mouseContext.control.next(_elementId);\r\n            console.log('start on mouseDown', _elementId);\r\n            mouseContext.mouseDown.next({\r\n                ev: ev.nativeEvent,\r\n                type: ev.ctrlKey ? EventType.StartSelecting : EventType.StartDrag,\r\n                elementId: _elementId\r\n            });\r\n        },\r\n        onMouseUp: (ev: React.MouseEvent<HTMLElement, MouseEvent>) => {\r\n            // drop to another Control (aka Container)\r\n        }\r\n    };\r\n};\r\n\r\n\r\ntype PluginTypes = IContextResizer & IContextMagnet & IContextLasso;\r\n\r\n\r\nexport const MouseStreamContext = React.createContext<Nullable<IMouseStreamContext & PluginTypes>>(null);\r\n\r\ntype NamedContainer = ContainerProps & { guid: GuidType };\r\n\r\nexport const MouseStreamContainer = getMouseStreamsContainer<NamedContainer, PluginTypes>(\r\n    MouseStreamContext,\r\n    [\r\n        resizerContextPlugin,\r\n        magnetContextPlugin,\r\n        lassoContextPlugin\r\n    ]\r\n);\r\n\r\n\r\nexport const Draggable = WrapComponentInDraggable(DragFrame)(MouseStreamContext, getHandlers);\r\n\r\n// plugins\r\nexport const Magnetable = MagnetableWithMouseContext(MouseStreamContext);\r\nexport const Resizable = ResizableWithMouseContext(MouseStreamContext);\r\nexport const Selectable = SelectableWithMouseContext(MouseStreamContext);\r\nexport const SelectingLasso = getSelectableLasso(MouseStreamContext);\r\n","import * as React from 'react';\r\nimport { MouseStreamContainer } from '@designer-core/shared/wrappers/MouseStreams';\r\nimport { ROOT_GUID } from '@designer-core/shared/types';\r\nimport ContainerBlock from '@designer-core/shared/blocks/Container';\r\nimport { blockFactory } from '@designer-core/shared/config';\r\nimport { BlockType, ContainerProps } from '@designer-core/shared/blocks/types';\r\n\r\ninterface IStartContainer {\r\n    setRef: (ref: HTMLDivElement | null) => void;\r\n}\r\n\r\nconst ContainerBlock2 = blockFactory.getBlock<ContainerProps>(BlockType.Container);\r\n\r\nconst StartWorkspaceBlock = MouseStreamContainer(ContainerBlock);\r\n\r\nconst Result = (props: React.PropsWithChildren<IStartContainer>) => {\r\n    return <StartWorkspaceBlock { ...props } guid={ ROOT_GUID } classModifiers={ ['silver-bordered', 'relative-hidden'] }>\r\n        { props.children }\r\n    </StartWorkspaceBlock>\r\n};\r\n\r\nexport default Result;\r\n","import React from 'react';\r\nimport './Control.scss';\r\n\r\n// import ContainerBlock from '@designer-core/shared/blocks/Container';\r\nimport { BoxProps, BaseBoxProps } from '@designer-core/shared/types';\r\n\r\n\r\nimport { blockFactory } from '@designer-core/shared/config';\r\nimport { BlockType, ContainerProps } from '@designer-core/shared/blocks/types';\r\n\r\nconst ContainerBlock = blockFactory.getBlock<ContainerProps>(BlockType.Container);\r\n\r\nexport interface ControlProps extends BoxProps {\r\n    name: string;\r\n}\r\n\r\nconst ControlBlock = (props: React.PropsWithChildren<BaseBoxProps & { name: string }>) => {\r\n\r\n    const { xy, size } = props;\r\n\r\n    return <ContainerBlock { ...props } classModifiers={ props.classModifiers ? ['ctrl-bordered', ...props.classModifiers] : ['ctrl-bordered'] }>\r\n        <div className=\"content-wrapper\" style={ props.style }>\r\n            <div style={ { fontSize: '14px' } }>{ props.name }</div>\r\n        </div>\r\n        { props.children }\r\n        <div style={ { fontSize: '14px', position: 'absolute', bottom: 2, right: 2 } }>\r\n            <div>sx={ size[0] }</div>\r\n            <div>sy= { size[1] }</div>\r\n        </div>\r\n        <div style={ { fontSize: '14px', position: 'absolute', bottom: 2, left: 2 } }>\r\n            <div>x={ xy[0] }</div>\r\n            <div>y= { xy[1] }</div>\r\n        </div>\r\n    </ContainerBlock>;\r\n};\r\n\r\nexport default ControlBlock;\r\n","import { DataService, MsgService, StorageSelector, MsgSelector } from '@designer-core/shared/helpers/storage';\r\nimport { IState, IControlData } from '@designer-core/shared/stateTypes';\r\nimport { Position, GuidType } from '@designer-core/shared/types';\r\n\r\nconst positionService: DataService<IState, [GuidType, Position]> = (store) => ([guid, value]) => {\r\n    store.state.controls$.next(\r\n        store.state.controls$.getValue().map(t => t.guid === guid ? { ...t, position: [value[0], value[1]] } : { ...t })\r\n    );\r\n};\r\nconst sizeService: DataService<IState, [GuidType, Position]> = (store) => ([guid, value]) => {\r\n    store.state.controls$.next(\r\n        store.state.controls$.getValue().map(t => t.guid === guid ? { ...t, size: [value[0], value[1]] } : { ...t })\r\n    );\r\n};\r\n\r\nexport const storageServices: MsgService<IState, [GuidType, Position]>[] = [\r\n    ['position', positionService],\r\n    ['size', sizeService],\r\n];\r\n\r\n\r\nconst dataSelector: StorageSelector<IState, null, IControlData[]> = (store) => (/* ident for other selectors */) => {\r\n    return store.state.controls$.getValue();\r\n};\r\n\r\nexport const storageSelectors: MsgSelector<IState, any, IControlData | IControlData[]>[] = [\r\n    ['controls', dataSelector]\r\n];\r\n","import React from 'react';\r\n\r\nimport ControlBlock, { ControlProps } from './ControlBlock';\r\n\r\nimport { Draggable, Magnetable, Selectable, Resizable } from '@designer-core/shared/wrappers/MouseStreams';\r\n\r\nimport ConnectedBlock from '@designer-core/shared/wrappers/ConnectedBlock';\r\nimport { BaseBoxProps } from '@designer-core/shared/types';\r\n\r\n// import BoxBlock from '@designer-core/shared/blocks/Box';\r\n\r\nimport { blockFactory } from '@designer-core/shared/config';\r\nimport { BlockType } from '@designer-core/shared/blocks/types';\r\n\r\n\r\nimport { storageServices, storageSelectors } from './services';\r\n\r\n\r\nexport type Props = ControlProps;\r\n\r\ntype BaseNamedBoxProps = BaseBoxProps & { name: string };\r\n\r\nconst BoxBlock = blockFactory.getBlock<BaseNamedBoxProps>(BlockType.Box);\r\n\r\n\r\nconst DisplayedControlBlock = (props: BaseNamedBoxProps) => {\r\n    return <BoxBlock { ...props } >\r\n        <ControlBlock { ...props } position={ [0, 0] } />\r\n    </BoxBlock>;\r\n};\r\n\r\n\r\nconst ResultControl = Draggable(\r\n    Magnetable(\r\n        Selectable(\r\n            Resizable(\r\n                ConnectedBlock(DisplayedControlBlock as React.ComponentType<BaseBoxProps>),\r\n                storageServices,\r\n                []\r\n            )\r\n        ),\r\n        storageServices,\r\n        storageSelectors\r\n    ),\r\n    storageServices,\r\n    []\r\n);\r\n\r\nexport default ResultControl;\r\n","import React, { Fragment, useEffect, useState } from 'react';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { Props as ControlProps } from './Control';\r\nimport { Position } from '@designer-core/shared/types';\r\n\r\n\r\nexport interface Props {\r\n    component: React.ComponentType<ControlProps>,\r\n    controls$: BehaviorSubject<ControlProps[]>,\r\n    offsetPosition$: BehaviorSubject<Position>;\r\n}\r\n\r\nconst Container: React.FC<Props> = (props: Props) => {\r\n\r\n    const { component: ControlComponent, controls$ } = props;\r\n\r\n    const [controls, setControls] = useState<ControlProps[]>([]);\r\n\r\n    useEffect(() => {\r\n        const controlsSub = controls$.pipe().subscribe(items => {\r\n            setControls([...items]);\r\n        });\r\n        return () => controlsSub.unsubscribe();\r\n    }, [controls$]);\r\n\r\n    return <Fragment>\r\n        {\r\n            controls.map(t => <ControlComponent key={ `${t.guid}-${t.name}` } { ...t } />)\r\n        }\r\n    </Fragment>\r\n};\r\n\r\nexport default Container;\r\n","import React, { useMemo, useEffect, useRef } from 'react';\r\n\r\nimport { IState, IControlData } from '@designer-core/shared/stateTypes';\r\n\r\nimport ResultControl, { Props as ControlProps } from './Control';\r\nimport ControlsContainer, { Props } from './Controls';\r\n\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { Position, ActiveLevels } from '@designer-core/shared/types';\r\nimport { useStorage, MsgService } from '@designer-core/shared/helpers/storage';\r\nimport { storageSelectors } from './Control/services';\r\n\r\nexport type ControlsCntProps = Props;\r\n\r\n\r\nconst MemoisedControl = React.memo(ResultControl);\r\n\r\nexport interface IControlsContainerProps {\r\n    offsetPosition$: BehaviorSubject<Position>;\r\n}\r\n\r\nconst ResultControls = (props: IControlsContainerProps) => {\r\n\r\n\r\n    const { offsetPosition$ } = props;\r\n\r\n    const emptyServicesRef = useRef<MsgService<IState, any>[]>([]);\r\n    const storage = useStorage<IState>('stored-workspace', emptyServicesRef.current, storageSelectors);\r\n\r\n    const innerControls$ = useMemo<BehaviorSubject<ControlProps[]>>(() => new BehaviorSubject<ControlProps[]>([]), []);\r\n\r\n    useEffect(() => {\r\n\r\n        const [oX, oY] = offsetPosition$.getValue();\r\n\r\n        const controls = storage.get<null, IControlData[]>('controls') as IControlData[];\r\n\r\n        innerControls$.next(\r\n            controls.map<ControlProps>(\r\n                t => ({\r\n                    guid: t.guid,\r\n                    name: `${t.uiType}-${t.guid}`,\r\n                    activeLevel$: new BehaviorSubject<ActiveLevels>(ActiveLevels.None),\r\n                    xy$: new BehaviorSubject([t.position[0], t.position[1]]),\r\n                    position$: new BehaviorSubject([t.position[0], t.position[1]]),\r\n                    size$: new BehaviorSubject([t.size[0], t.size[1]]),\r\n                    style: t.style,\r\n                    offsetPosition$: new BehaviorSubject([oX, oY]),\r\n                })\r\n            )\r\n        );\r\n\r\n\r\n    }, [storage, innerControls$, offsetPosition$]);\r\n\r\n    return <ControlsContainer\r\n        component={ MemoisedControl }\r\n        controls$={ innerControls$ }\r\n        offsetPosition$={ new BehaviorSubject([0, 0]) }\r\n    />;\r\n};\r\n\r\nexport default ResultControls;\r\n","import { StorageSelector, MsgSelector, MsgService } from '@designer-core/shared/helpers/storage';\r\nimport { IState, IControlData } from '@designer-core/shared/stateTypes';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n\r\nconst dataSelector: StorageSelector<IState, null, BehaviorSubject<IControlData>> = (store) => (/* ident for other selectors */) => {\r\n    return store.state.root$;\r\n};\r\n\r\nexport const storageServices: MsgService<IState, any>[] = [];\r\nexport const emptyStorageSelectors: MsgSelector<IState, any, any>[] = [];\r\n\r\nexport const storageSelectors: MsgSelector<IState, any, BehaviorSubject<IControlData>>[] = [\r\n    ['observerable-data', dataSelector]\r\n];\r\n","import { Draggable, SelectingLasso } from '@designer-core/shared/wrappers/MouseStreams';\r\nimport { WrappedBlock } from '@designer-core/shared/wrappers/ConnectedBlock';\r\n\r\n// import BoxBlock from '@designer-core/shared/blocks/Box';\r\n\r\nimport { storageServices, emptyStorageSelectors } from './services';\r\n\r\nimport { blockFactory } from '@designer-core/shared/config';\r\nimport { BlockType } from '@designer-core/shared/blocks/types';\r\nimport { BaseBoxProps } from '@designer-core/shared/types';\r\n\r\n\r\nconst Component = Draggable(\r\n    SelectingLasso(\r\n        WrappedBlock(blockFactory.getBlock<BaseBoxProps>(BlockType.Box))\r\n    ),\r\n    storageServices,\r\n    emptyStorageSelectors,\r\n    { modifiers: ['no-frame'] }\r\n);\r\n\r\nexport default Component;\r\n","import React, { useEffect, useMemo } from 'react';\r\nimport StoredLasso from './Lasso';\r\nimport { SELECTING_FRAME_GUID, ActiveLevels, Position } from '@designer-core/shared/types';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { IControlData } from '@designer-core/shared/stateTypes';\r\n\r\nimport { storageSelectors, storageServices } from './services';\r\nimport { useStorage } from '@designer-core/shared/helpers/storage';\r\n\r\n\r\nexport interface Props {\r\n    offsetPosition$: BehaviorSubject<Position>;\r\n}\r\n\r\n\r\nconst ResultLasso: React.FC<Props> = (props: Props) => {\r\n\r\n    const { offsetPosition$ } = props;\r\n    const storage = useStorage('root-for-lasso', storageServices, storageSelectors);\r\n\r\n    const activeLevel$ = useMemo(() => new BehaviorSubject<ActiveLevels>(ActiveLevels.None), []);\r\n    const position$ = useMemo(() => new BehaviorSubject<Position>([0, 0]), []);\r\n    const xy$ = useMemo(() => new BehaviorSubject<Position>([0, 0]), []);\r\n    const size$ = useMemo(() => new BehaviorSubject<Position>([0, 0]), []);\r\n\r\n    useEffect(() => {\r\n        console.log('%c init effect inside result-lasso ', 'color: red; background-color: silver;');\r\n        const [startX, startY] = offsetPosition$.getValue();\r\n        const root$ = storage.get('observerable-data') as Observable<IControlData>;\r\n        const rootSub = root$.subscribe(({ position }) => offsetPosition$.next([startX + position[0], startY + position[1]]));\r\n        return () => rootSub.unsubscribe();\r\n    }, [storage, offsetPosition$]);\r\n\r\n    return <StoredLasso\r\n        guid={ SELECTING_FRAME_GUID }\r\n        activeLevel$={ activeLevel$ }\r\n        offsetPosition$={ offsetPosition$ }\r\n        position$={ position$ }\r\n        xy$={ xy$ }\r\n        size$={ size$ } />\r\n};\r\n\r\nexport default ResultLasso;\r\n","import { DataService, StorageSelector, MsgService, MsgSelector } from '@designer-core/shared/helpers/storage';\r\nimport { IState, IControlData } from '@designer-core/shared/stateTypes';\r\nimport { Position, GuidType } from '@designer-core/shared/types';\r\n\r\nconst positionService: DataService<IState, [GuidType, Position]> = (store) => ([_guid, value]) => {\r\n    const root = store.state.root$.getValue();\r\n    store.state.root$.next({ ...root, position: [value[0], value[1]] });\r\n};\r\nconst sizeService: DataService<IState, [GuidType, Position]> = (store) => ([_guid, value]) => {\r\n    const root = store.state.root$.getValue();\r\n    store.state.root$.next({ ...root, size: [value[0], value[1]] })\r\n};\r\n\r\n\r\nconst dataSelector: StorageSelector<IState, null, IControlData> = (store) => (/* ident for other selectors */) => {\r\n    return store.state.root$.getValue();\r\n};\r\n\r\n\r\n\r\n\r\nexport const storageServices: MsgService<IState, any>[] = [\r\n    ['position', positionService],\r\n    ['size', sizeService],\r\n];\r\n\r\nexport const storageSelectors: MsgSelector<IState, any, any>[] = [\r\n    ['data', dataSelector]\r\n];\r\n","import React, { useState, useEffect, useRef } from 'react';\r\n\r\nimport { IState, IControlData } from '@designer-core/shared/stateTypes';\r\n\r\nimport WorkspaceContainerBlock from './WorkspaceBlock';\r\nimport StartWorkspaceBlock from './WorkspaceContainer';\r\nimport ConnectedBlock from '@designer-core/shared/wrappers/ConnectedBlock';\r\n\r\nimport StoredResultControls from './Controls';\r\nimport StoredLasso from './Lasso';\r\n\r\nimport {\r\n    Draggable,\r\n    Resizable,\r\n} from '@designer-core/shared/wrappers/MouseStreams';\r\n\r\nimport { ROOT_GUID, BoxProps, Position, ActiveLevels } from '@designer-core/shared/types';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\nimport { storageServices as STORAGE_SERVICES, storageSelectors as STORAGE_SELECTORS } from './services';\r\nimport { MsgService, useStorage } from '@designer-core/shared/helpers/storage';\r\n\r\n\r\nexport type WorkspaceProps = BoxProps;\r\n\r\n\r\nconst WorkspaceBlock = ConnectedBlock(WorkspaceContainerBlock);\r\n\r\nconst Workspace = (props: React.PropsWithChildren<WorkspaceProps>) => {\r\n\r\n    return (\r\n        <WorkspaceBlock { ...props }>\r\n            <StoredResultControls offsetPosition$={ props.offsetPosition$ } />\r\n            <StoredLasso offsetPosition$={ props.offsetPosition$ } />\r\n            { props.children }\r\n        </WorkspaceBlock>\r\n    );\r\n};\r\n\r\n\r\nconst DraggableWorkspaceBox = Draggable(\r\n    Resizable(Workspace, STORAGE_SERVICES, []),\r\n    STORAGE_SERVICES, []\r\n);\r\n\r\n\r\n//  workspace inside fixed Container\r\nconst StoredWorkspace: React.FC = () => {\r\n\r\n    const emptyServicesRef = useRef<MsgService<IState, any>[]>([]);\r\n    const storage = useStorage<IState>('stored-workspace', emptyServicesRef.current, STORAGE_SELECTORS);\r\n\r\n    const [cntRef, setCntRef] = useState<HTMLElement | null>(null);\r\n    const [absOffset, setAbsOffset] = useState<Position | null>(null);\r\n    const absOffsetRef = useRef<Position | null>(null);\r\n\r\n\r\n    useEffect(() => {\r\n        if (cntRef && !absOffsetRef.current) {\r\n            const rect: ClientRect = cntRef.getBoundingClientRect();\r\n            absOffsetRef.current = [rect.left, rect.top];\r\n            console.log('cntRef effect!', absOffsetRef.current);\r\n            setAbsOffset([rect.left, rect.top]);\r\n        }\r\n    }, [cntRef, absOffsetRef]);\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            console.log('destroy workspace!');\r\n        };\r\n    }, []);\r\n\r\n    const rootData = storage.get<null, IControlData>('data') as IControlData;\r\n    const { size, position } = rootData;\r\n\r\n    console.log('%c render inside workspace', 'color: yellow; background-color: red');\r\n\r\n    return <StartWorkspaceBlock setRef={ setCntRef }>\r\n        {\r\n            absOffset &&\r\n            <DraggableWorkspaceBox\r\n                xy$={ new BehaviorSubject([position[0], position[1]]) }\r\n                position$={ new BehaviorSubject([position[0], position[1]]) }\r\n                size$={ new BehaviorSubject([size[0], size[1]]) }\r\n                activeLevel$={ new BehaviorSubject<ActiveLevels>(ActiveLevels.None) }\r\n                offsetPosition$={ new BehaviorSubject([absOffset[0], absOffset[1]]) }\r\n                guid={ ROOT_GUID } />\r\n        }\r\n    </StartWorkspaceBlock>;\r\n};\r\n\r\nexport default StoredWorkspace;\r\n","import Workspace, { WorkspaceProps as Props } from './Workspace';\r\n\r\nexport type WorkspaceProps = Props;\r\n\r\nexport default Workspace;\r\n","import { ActionName, ActionFunc } from '../../storeTypes';\r\nimport { Position } from '@designer-core/shared/types';\r\n\r\nexport const UPDATE_ROOT_POSITION = 'update-root-position' as ActionName;\r\nexport const UPDATE_CONTROL_POSITION = 'update-control-position' as ActionName;\r\n\r\nexport const updateRootPosition: ActionFunc<Position> = (payload) => {\r\n    return { payload, type: UPDATE_ROOT_POSITION };\r\n};\r\n","import { ROOT_GUID } from '@designer-core/shared/types';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { UIPrimitive, IControlData, IState } from '@designer-core/shared/stateTypes';\r\n\r\nimport { UpdateRootPosition } from './reducers/root';\r\n\r\nconst UIStyles: { [key: string]: React.CSSProperties } = {\r\n    [UIPrimitive.RectangleBlock]: {\r\n        backgroundColor: '#37474f',\r\n        boxShadow: '0 0 6px 2px rgba(255,255,255,.1)',\r\n        color: '#f5f5f5'\r\n    }\r\n};\r\nconst CONTROLS = [\r\n    ...new Array(4)\r\n        // ...new Array(53)\r\n        // ...new Array(Math.round(Math.random() * 4 + 3))\r\n        .fill(0)\r\n        .map<IControlData>((_, i) => ({\r\n            guid: `test-${i}`,\r\n            classType: 'testClass',\r\n            uiType: UIPrimitive.RectangleBlock,\r\n            position: [Math.round(Math.random() * 450 + i * 20), Math.round(Math.random() * 250 + i * 20)],\r\n            size: [Math.round(Math.random() * 150 + 80), Math.round(Math.random() * 90 + 70)],\r\n            style: UIStyles[UIPrimitive.RectangleBlock]\r\n        }))\r\n];\r\nconst ROOT_CONTROL: IControlData = {\r\n    guid: ROOT_GUID,\r\n    classType: 'Root',\r\n    position: [10, 10],\r\n    size: [700, 500],\r\n    uiType: UIPrimitive.Root\r\n};\r\n\r\n\r\nexport const initialState: IState = {\r\n    controls$: new BehaviorSubject<IControlData[]>([...CONTROLS]),\r\n    root$: new BehaviorSubject<IControlData>({ ...ROOT_CONTROL }),\r\n};\r\n\r\n\r\nexport default [UpdateRootPosition];\r\n","import React from 'react';\r\n\r\nimport Workspace from './workspace';\r\nimport { useStore } from './rxRedux/storeContext';\r\nimport { initialState } from './rxRedux/controls';\r\n\r\nconst ResultWorkspace: React.FC = () => {\r\n    const [store, StoreContextProvider] = useStore(initialState, []);\r\n    return <StoreContextProvider value={ store }>\r\n        <Workspace />\r\n    </StoreContextProvider>;\r\n};\r\n\r\nexport default ResultWorkspace;\r\n","import React from 'react';\r\nimport { hot } from 'react-hot-loader';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport ContentWrapper from './content-wrapper';\r\nimport Header from './header';\r\n\r\nimport Designer from '@designer-core/App';\r\n\r\nimport './App.scss';\r\n\r\nconst ContentWithDesigner = ContentWrapper(Designer);\r\n\r\nconst App: React.FC = () => {\r\n    return (\r\n        <div className=\"App\">\r\n            <Header title=\"Designer\">\r\n                <NavLink activeClassName=\"link-item--active\" exact activeStyle={ { color: 'orange' } } to=\"/\">Home</NavLink> \\\\\r\n                <NavLink activeClassName=\"link-item--active\" activeStyle={ { color: 'orange' } } to=\"/about\">About</NavLink> \\\\\r\n                <NavLink activeClassName=\"link-item--active\" activeStyle={ { color: 'orange' } } to=\"/workspace\">Workspace</NavLink>\r\n            </Header>\r\n            <ContentWithDesigner />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default hot(module)(App);\r\n","import appRunner from './app/wf-designer';\r\n\r\nexport default appRunner;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nimport App from './App';\r\n\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nconst run = () => {\r\n    ReactDOM.render(\r\n        <BrowserRouter basename=\"#\">\r\n            <App />\r\n        </BrowserRouter>,\r\n        document.getElementById('root')\r\n    );\r\n};\r\n\r\nexport default run;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n            window.location.href\r\n        );\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            );\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister();\r\n        });\r\n    }\r\n}\r\n","import appRunner from './app';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nappRunner();\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}